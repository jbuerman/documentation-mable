Search.setIndex({"alltitles": {"Console/Bash": [[7, "console-bash"]], "Contents:": [[0, null]], "Installation": [[7, "installation"]], "Jupyter Notebook": [[7, "jupyter-notebook"]], "License": [[7, "license"]], "MABLE": [[0, null]], "Module contents": [[1, "module-mable"], [2, "module-mable.competition"], [3, "module-mable.examples"], [4, "module-mable.extensions"], [5, "module-mable.io"]], "Overview": [[7, null]], "Parameters": [[4, "parameters"], [4, "id1"], [4, "id2"], [4, "id3"], [4, "id4"], [4, "id5"], [4, "id8"], [4, "id10"], [4, "id12"], [4, "id14"], [4, "id16"], [4, "id18"], [4, "id20"], [4, "id22"]], "Requirements": [[7, "requirements"]], "Returns": [[4, "returns"], [4, "id6"], [4, "id7"], [4, "id9"], [4, "id11"], [4, "id13"], [4, "id15"], [4, "id17"], [4, "id19"], [4, "id21"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]], "Subpackages": [[1, "subpackages"]], "mable": [[6, null]], "mable package": [[1, null]], "mable.cargo_bidding module": [[1, "module-mable.cargo_bidding"]], "mable.cli module": [[1, "module-mable.cli"]], "mable.competition package": [[2, null]], "mable.competition.generation module": [[2, "module-mable.competition.generation"]], "mable.engine module": [[1, "module-mable.engine"]], "mable.event_management module": [[1, "module-mable.event_management"]], "mable.examples package": [[3, null]], "mable.examples.environment module": [[3, "module-mable.examples.environment"]], "mable.examples.fleets module": [[3, "module-mable.examples.fleets"]], "mable.extensions package": [[4, null]], "mable.extensions.cargo_distributions module": [[4, "module-mable.extensions.cargo_distributions"]], "mable.extensions.fuel_emissions module": [[4, "module-mable.extensions.fuel_emissions"]], "mable.extensions.world_ports module": [[4, "module-mable.extensions.world_ports"]], "mable.global_setup module": [[1, "module-mable.global_setup"]], "mable.instructions module": [[1, "module-mable.instructions"]], "mable.io package": [[5, null]], "mable.io.logging_util module": [[5, "module-mable.io.logging_util"]], "mable.metrics module": [[1, "module-mable.metrics"]], "mable.observers module": [[1, "module-mable.observers"]], "mable.shipping_market module": [[1, "module-mable.shipping_market"]], "mable.simulation_de_serialisation module": [[1, "module-mable.simulation_de_serialisation"]], "mable.simulation_environment module": [[1, "module-mable.simulation_environment"]], "mable.simulation_generation module": [[1, "module-mable.simulation_generation"]], "mable.simulation_space module": [[1, "module-mable.simulation_space"]], "mable.transport_operation module": [[1, "module-mable.transport_operation"]], "mable.transportation_scheduling module": [[1, "module-mable.transportation_scheduling"]], "mable.util module": [[1, "module-mable.util"]]}, "docnames": ["index", "mable", "mable.competition", "mable.examples", "mable.extensions", "mable.io", "modules", "overview"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "mable.rst", "mable.competition.rst", "mable.examples.rst", "mable.extensions.rst", "mable.io.rst", "modules.rst", "overview.rst"], "indexentries": {"__init__() (mable.cargo_bidding.tradingcompany method)": [[1, "mable.cargo_bidding.TradingCompany.__init__", false]], "__init__() (mable.competition.generation.auctioncargoevent method)": [[2, "mable.competition.generation.AuctionCargoEvent.__init__", false]], "__init__() (mable.engine.companyheadquarters method)": [[1, "mable.engine.CompanyHeadquarters.__init__", false]], "__init__() (mable.engine.simulationengine method)": [[1, "mable.engine.SimulationEngine.__init__", false]], "__init__() (mable.event_management.cargoannouncementevent method)": [[1, "mable.event_management.CargoAnnouncementEvent.__init__", false]], "__init__() (mable.event_management.cargoevent method)": [[1, "mable.event_management.CargoEvent.__init__", false]], "__init__() (mable.event_management.durationevent method)": [[1, "mable.event_management.DurationEvent.__init__", false]], "__init__() (mable.event_management.event method)": [[1, "mable.event_management.Event.__init__", false]], "__init__() (mable.event_management.eventexecutiondata method)": [[1, "mable.event_management.EventExecutionData.__init__", false]], "__init__() (mable.event_management.eventitem method)": [[1, "mable.event_management.EventItem.__init__", false]], "__init__() (mable.event_management.eventqueue method)": [[1, "mable.event_management.EventQueue.__init__", false]], "__init__() (mable.event_management.idleevent method)": [[1, "mable.event_management.IdleEvent.__init__", false]], "__init__() (mable.event_management.travelevent method)": [[1, "mable.event_management.TravelEvent.__init__", false]], "__init__() (mable.event_management.vesselcargoevent method)": [[1, "mable.event_management.VesselCargoEvent.__init__", false]], "__init__() (mable.event_management.vesselevent method)": [[1, "mable.event_management.VesselEvent.__init__", false]], "__init__() (mable.event_management.vessellocationinformationevent method)": [[1, "mable.event_management.VesselLocationInformationEvent.__init__", false]], "__init__() (mable.extensions.cargo_distributions.distributionshipping method)": [[4, "mable.extensions.cargo_distributions.DistributionShipping.__init__", false]], "__init__() (mable.extensions.fuel_emissions.consumptionrate method)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.__init__", false]], "__init__() (mable.extensions.fuel_emissions.consumptionrate.data method)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.Data.__init__", false]], "__init__() (mable.extensions.fuel_emissions.fuel method)": [[4, "mable.extensions.fuel_emissions.Fuel.__init__", false]], "__init__() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[4, "mable.extensions.fuel_emissions.FuelSimulationFactory.__init__", false]], "__init__() (mable.extensions.fuel_emissions.vesselengine method)": [[4, "mable.extensions.fuel_emissions.VesselEngine.__init__", false]], "__init__() (mable.extensions.fuel_emissions.vesselengine.data method)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.__init__", false]], "__init__() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.__init__", false]], "__init__() (mable.extensions.fuel_emissions.vesselwithengine.data method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.Data.__init__", false]], "__init__() (mable.extensions.world_ports.latlonglocation method)": [[4, "mable.extensions.world_ports.LatLongLocation.__init__", false]], "__init__() (mable.extensions.world_ports.latlongport method)": [[4, "mable.extensions.world_ports.LatLongPort.__init__", false]], "__init__() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.__init__", false]], "__init__() (mable.extensions.world_ports.route method)": [[4, "mable.extensions.world_ports.Route.__init__", false]], "__init__() (mable.extensions.world_ports.worldvessel method)": [[4, "mable.extensions.world_ports.WorldVessel.__init__", false]], "__init__() (mable.instructions.specifications method)": [[1, "mable.instructions.Specifications.__init__", false]], "__init__() (mable.instructions.specifications.builder method)": [[1, "mable.instructions.Specifications.Builder.__init__", false]], "__init__() (mable.metrics.metricscollector method)": [[1, "mable.metrics.MetricsCollector.__init__", false]], "__init__() (mable.metrics.vesselkey method)": [[1, "mable.metrics.VesselKey.__init__", false]], "__init__() (mable.observers.auctionoutcomeobserver method)": [[1, "mable.observers.AuctionOutcomeObserver.__init__", false]], "__init__() (mable.observers.eventfuelprintobserver method)": [[1, "mable.observers.EventFuelPrintObserver.__init__", false]], "__init__() (mable.observers.logrunner method)": [[1, "mable.observers.LogRunner.__init__", false]], "__init__() (mable.observers.metricsobserver method)": [[1, "mable.observers.MetricsObserver.__init__", false]], "__init__() (mable.shipping_market.auctionledger method)": [[1, "mable.shipping_market.AuctionLedger.__init__", false]], "__init__() (mable.shipping_market.auctionmarket method)": [[1, "mable.shipping_market.AuctionMarket.__init__", false]], "__init__() (mable.shipping_market.contract method)": [[1, "mable.shipping_market.Contract.__init__", false]], "__init__() (mable.shipping_market.market method)": [[1, "mable.shipping_market.Market.__init__", false]], "__init__() (mable.shipping_market.shipping method)": [[1, "mable.shipping_market.Shipping.__init__", false]], "__init__() (mable.shipping_market.simplemarket method)": [[1, "mable.shipping_market.SimpleMarket.__init__", false]], "__init__() (mable.shipping_market.timewindowtrade method)": [[1, "mable.shipping_market.TimeWindowTrade.__init__", false]], "__init__() (mable.shipping_market.trade method)": [[1, "mable.shipping_market.Trade.__init__", false]], "__init__() (mable.simulation_de_serialisation.dataclass method)": [[1, "mable.simulation_de_serialisation.DataClass.__init__", false]], "__init__() (mable.simulation_de_serialisation.dataprotocol method)": [[1, "mable.simulation_de_serialisation.DataProtocol.__init__", false]], "__init__() (mable.simulation_de_serialisation.schemaprotocol method)": [[1, "mable.simulation_de_serialisation.SchemaProtocol.__init__", false]], "__init__() (mable.simulation_environment.simulationengineaware method)": [[1, "mable.simulation_environment.SimulationEngineAware.__init__", false]], "__init__() (mable.simulation_environment.world method)": [[1, "mable.simulation_environment.World.__init__", false]], "__init__() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.__init__", false]], "__init__() (mable.simulation_space.location method)": [[1, "mable.simulation_space.Location.__init__", false]], "__init__() (mable.simulation_space.networkwithportdict method)": [[1, "mable.simulation_space.NetworkWithPortDict.__init__", false]], "__init__() (mable.simulation_space.onjourney method)": [[1, "mable.simulation_space.OnJourney.__init__", false]], "__init__() (mable.simulation_space.port method)": [[1, "mable.simulation_space.Port.__init__", false]], "__init__() (mable.simulation_space.shippingnetwork method)": [[1, "mable.simulation_space.ShippingNetwork.__init__", false]], "__init__() (mable.simulation_space.unitshippingnetwork method)": [[1, "mable.simulation_space.UnitShippingNetwork.__init__", false]], "__init__() (mable.transport_operation.bid method)": [[1, "mable.transport_operation.Bid.__init__", false]], "__init__() (mable.transport_operation.cargocapacity method)": [[1, "mable.transport_operation.CargoCapacity.__init__", false]], "__init__() (mable.transport_operation.cargocapacity.data method)": [[1, "mable.transport_operation.CargoCapacity.Data.__init__", false]], "__init__() (mable.transport_operation.cargocontainer method)": [[1, "mable.transport_operation.CargoContainer.__init__", false]], "__init__() (mable.transport_operation.cargohold method)": [[1, "mable.transport_operation.CargoHold.__init__", false]], "__init__() (mable.transport_operation.scheduleproposal method)": [[1, "mable.transport_operation.ScheduleProposal.__init__", false]], "__init__() (mable.transport_operation.shippingcompany method)": [[1, "mable.transport_operation.ShippingCompany.__init__", false]], "__init__() (mable.transport_operation.shippingcompany.data method)": [[1, "mable.transport_operation.ShippingCompany.Data.__init__", false]], "__init__() (mable.transport_operation.simplecompany method)": [[1, "mable.transport_operation.SimpleCompany.__init__", false]], "__init__() (mable.transport_operation.simplevessel method)": [[1, "mable.transport_operation.SimpleVessel.__init__", false]], "__init__() (mable.transport_operation.simplevessel.data method)": [[1, "mable.transport_operation.SimpleVessel.Data.__init__", false]], "__init__() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.__init__", false]], "__init__() (mable.transport_operation.vessel.data method)": [[1, "mable.transport_operation.Vessel.Data.__init__", false]], "__init__() (mable.transportation_scheduling.currentstate method)": [[1, "mable.transportation_scheduling.CurrentState.__init__", false]], "__init__() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.__init__", false]], "__init__() (mable.util.jsonable method)": [[1, "mable.util.JsonAble.__init__", false]], "accepted (mable.shipping_market.tradestatus attribute)": [[1, "mable.shipping_market.TradeStatus.ACCEPTED", false]], "action_data (mable.event_management.eventexecutiondata attribute)": [[1, "mable.event_management.EventExecutionData.action_data", false]], "add_canal_to_graph() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.add_canal_to_graph", false]], "add_cargo_distribution() (mable.instructions.specifications.builder method)": [[1, "mable.instructions.Specifications.Builder.add_cargo_distribution", false]], "add_cargo_generation() (mable.instructions.specifications.builder method)": [[1, "mable.instructions.Specifications.Builder.add_cargo_generation", false]], "add_co2_emissions() (mable.metrics.globalmetricscollector method)": [[1, "mable.metrics.GlobalMetricsCollector.add_co2_emissions", false]], "add_company() (mable.instructions.specifications.builder method)": [[1, "mable.instructions.Specifications.Builder.add_company", false]], "add_company_numeric_metric() (mable.metrics.metricscollector method)": [[1, "mable.metrics.MetricsCollector.add_company_numeric_metric", false]], "add_cost() (mable.metrics.globalmetricscollector method)": [[1, "mable.metrics.GlobalMetricsCollector.add_cost", false]], "add_dual_numeric_metric() (mable.metrics.metricscollector method)": [[1, "mable.metrics.MetricsCollector.add_dual_numeric_metric", false]], "add_fuel() (mable.extensions.fuel_emissions.fuelspecsbuilder method)": [[4, "mable.extensions.fuel_emissions.FuelSpecsBuilder.add_fuel", false]], "add_fuel_consumption() (mable.metrics.globalmetricscollector method)": [[1, "mable.metrics.GlobalMetricsCollector.add_fuel_consumption", false]], "add_fuel_consumption() (mable.metrics.regionalmetricscollector method)": [[1, "mable.metrics.RegionalMetricsCollector.add_fuel_consumption", false]], "add_global_company_list_metric() (mable.metrics.metricscollector method)": [[1, "mable.metrics.MetricsCollector.add_global_company_list_metric", false]], "add_relocation() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.add_relocation", false]], "add_route_point() (mable.metrics.globalmetricscollector method)": [[1, "mable.metrics.GlobalMetricsCollector.add_route_point", false]], "add_shipping_network() (mable.instructions.specifications.builder method)": [[1, "mable.instructions.Specifications.Builder.add_shipping_network", false]], "add_to_all_trades() (mable.shipping_market.shipping method)": [[1, "mable.shipping_market.Shipping.add_to_all_trades", false]], "add_transportation() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.add_transportation", false]], "added_to_queue() (mable.event_management.durationevent method)": [[1, "mable.event_management.DurationEvent.added_to_queue", false]], "added_to_queue() (mable.event_management.event method)": [[1, "mable.event_management.Event.added_to_queue", false]], "added_to_queue() (mable.event_management.travelevent method)": [[1, "mable.event_management.TravelEvent.added_to_queue", false]], "allocation_result (mable.competition.generation.auctioncargoevent property)": [[2, "mable.competition.generation.AuctionCargoEvent.allocation_result", false]], "amount (mable.shipping_market.trade attribute)": [[1, "mable.shipping_market.Trade.amount", false]], "amount (mable.transport_operation.bid attribute)": [[1, "mable.transport_operation.Bid.amount", false]], "amount (mable.transport_operation.cargocontainer property)": [[1, "mable.transport_operation.CargoContainer.amount", false]], "apply_schedules() (mable.transport_operation.simplecompany static method)": [[1, "mable.transport_operation.SimpleCompany.apply_schedules", false]], "argumentparserextensions (class in mable.cli)": [[1, "mable.cli.ArgumentParserExtensions", false]], "arrivalevent (class in mable.event_management)": [[1, "mable.event_management.ArrivalEvent", false]], "as_tuple() (mable.extensions.world_ports.route method)": [[4, "mable.extensions.world_ports.Route.as_tuple", false]], "auctioncargoevent (class in mable.competition.generation)": [[2, "mable.competition.generation.AuctionCargoEvent", false]], "auctionclassfactory (class in mable.competition.generation)": [[2, "mable.competition.generation.AuctionClassFactory", false]], "auctionledger (class in mable.shipping_market)": [[1, "mable.shipping_market.AuctionLedger", false]], "auctionmarket (class in mable.shipping_market)": [[1, "mable.shipping_market.AuctionMarket", false]], "auctionmetricsobserver (class in mable.observers)": [[1, "mable.observers.AuctionMetricsObserver", false]], "auctionoutcomeobserver (class in mable.observers)": [[1, "mable.observers.AuctionOutcomeObserver", false]], "auctionsimulationengine (class in mable.competition.generation)": [[2, "mable.competition.generation.AuctionSimulationEngine", false]], "available_cargo_types() (mable.transport_operation.cargohold method)": [[1, "mable.transport_operation.CargoHold.available_cargo_types", false]], "ballast_consumption_rate (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.ballast_consumption_rate", false]], "base (mable.extensions.fuel_emissions.consumptionrate attribute)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.base", false]], "base (mable.extensions.fuel_emissions.consumptionrate.data attribute)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.Data.base", false]], "bid (class in mable.transport_operation)": [[1, "mable.transport_operation.Bid", false]], "build() (mable.instructions.specifications.builder method)": [[1, "mable.instructions.Specifications.Builder.build", false]], "calculate_consumption() (mable.observers.metricsobserver static method)": [[1, "mable.observers.MetricsObserver.calculate_consumption", false]], "canals_nodes (mable.extensions.world_ports.latlongshippingnetwork property)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.canals_nodes", false]], "capacities_and_loading_rates (mable.transport_operation.vessel property)": [[1, "mable.transport_operation.Vessel.capacities_and_loading_rates", false]], "capacities_and_loading_rates (mable.transport_operation.vessel.data attribute)": [[1, "mable.transport_operation.Vessel.Data.capacities_and_loading_rates", false]], "capacity (mable.transport_operation.cargocapacity attribute)": [[1, "mable.transport_operation.CargoCapacity.capacity", false]], "capacity (mable.transport_operation.cargocapacity.data attribute)": [[1, "mable.transport_operation.CargoCapacity.Data.capacity", false]], "capacity (mable.transport_operation.cargocontainer property)": [[1, "mable.transport_operation.CargoContainer.capacity", false]], "capacity() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.capacity", false]], "cargo_type (mable.shipping_market.trade attribute)": [[1, "mable.shipping_market.Trade.cargo_type", false]], "cargo_type (mable.transport_operation.cargocapacity attribute)": [[1, "mable.transport_operation.CargoCapacity.cargo_type", false]], "cargo_type (mable.transport_operation.cargocapacity.data attribute)": [[1, "mable.transport_operation.CargoCapacity.Data.cargo_type", false]], "cargoannouncementevent (class in mable.event_management)": [[1, "mable.event_management.CargoAnnouncementEvent", false]], "cargocapacity (class in mable.transport_operation)": [[1, "mable.transport_operation.CargoCapacity", false]], "cargocapacity.data (class in mable.transport_operation)": [[1, "mable.transport_operation.CargoCapacity.Data", false]], "cargocapacity.data.schema (class in mable.transport_operation)": [[1, "mable.transport_operation.CargoCapacity.Data.Schema", false]], "cargocontainer (class in mable.transport_operation)": [[1, "mable.transport_operation.CargoContainer", false]], "cargoevent (class in mable.event_management)": [[1, "mable.event_management.CargoEvent", false]], "cargohold (class in mable.transport_operation)": [[1, "mable.transport_operation.CargoHold", false]], "cargoholdschema (class in mable.transport_operation)": [[1, "mable.transport_operation.CargoHoldSchema", false]], "cargotransferevent (class in mable.event_management)": [[1, "mable.event_management.CargoTransferEvent", false]], "class_factory (mable.engine.simulationengine property)": [[1, "mable.engine.SimulationEngine.class_factory", false]], "classfactory (class in mable.simulation_generation)": [[1, "mable.simulation_generation.ClassFactory", false]], "clean_window() (mable.shipping_market.timewindowtrade method)": [[1, "mable.shipping_market.TimeWindowTrade.clean_window", false]], "co2_coefficient (mable.extensions.fuel_emissions.fuel attribute)": [[4, "mable.extensions.fuel_emissions.Fuel.co2_coefficient", false]], "company (mable.transport_operation.bid attribute)": [[1, "mable.transport_operation.Bid.company", false]], "company_id (mable.metrics.vesselkey property)": [[1, "mable.metrics.VesselKey.company_id", false]], "companyheadquarters (class in mable.engine)": [[1, "mable.engine.CompanyHeadquarters", false]], "competitionbuilder (class in mable.competition.generation)": [[2, "mable.competition.generation.CompetitionBuilder", false]], "completion_time() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.completion_time", false]], "compute_all_routes_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.compute_all_routes_between_points", false]], "compute_route_length() (mable.extensions.world_ports.latlongshippingnetwork static method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.compute_route_length", false]], "consumptionrate (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate", false]], "consumptionrate.data (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.Data", false]], "consumptionrate.data.schema (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.Data.Schema", false]], "contract (class in mable.shipping_market)": [[1, "mable.shipping_market.Contract", false]], "copy() (mable.shipping_market.contract method)": [[1, "mable.shipping_market.Contract.copy", false]], "copy() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.copy", false]], "copy_hold() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.copy_hold", false]], "costs (mable.transport_operation.scheduleproposal attribute)": [[1, "mable.transport_operation.ScheduleProposal.costs", false]], "create_canal_nodes() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.create_canal_nodes", false]], "create_world_canal_scenarios() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.create_world_canal_scenarios", false]], "current_cargo_hold (mable.transportation_scheduling.currentstate attribute)": [[1, "mable.transportation_scheduling.CurrentState.current_cargo_hold", false]], "current_class (mable.simulation_de_serialisation.dataclass attribute)": [[1, "mable.simulation_de_serialisation.DataClass.current_class", false]], "current_load() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.current_load", false]], "current_location (mable.transportation_scheduling.currentstate attribute)": [[1, "mable.transportation_scheduling.CurrentState.current_location", false]], "current_time (mable.engine.companyheadquarters property)": [[1, "mable.engine.CompanyHeadquarters.current_time", false]], "current_time (mable.simulation_environment.world property)": [[1, "mable.simulation_environment.World.current_time", false]], "current_time (mable.transportation_scheduling.currentstate attribute)": [[1, "mable.transportation_scheduling.CurrentState.current_time", false]], "currentstate (class in mable.transportation_scheduling)": [[1, "mable.transportation_scheduling.CurrentState", false]], "data (mable.simulation_de_serialisation.dataprotocol attribute)": [[1, "mable.simulation_de_serialisation.DataProtocol.Data", false]], "dataclass (class in mable.simulation_de_serialisation)": [[1, "mable.simulation_de_serialisation.DataClass", false]], "dataprotocol (class in mable.simulation_de_serialisation)": [[1, "mable.simulation_de_serialisation.DataProtocol", false]], "dataschema (class in mable.simulation_de_serialisation)": [[1, "mable.simulation_de_serialisation.DataSchema", false]], "default() (mable.util.jsonableencoder method)": [[1, "mable.util.JsonAbleEncoder.default", false]], "default_laden_balast_consumption() (in module mable.examples.fleets)": [[3, "mable.examples.fleets.default_laden_balast_consumption", false]], "destination (mable.simulation_space.onjourney attribute)": [[1, "mable.simulation_space.OnJourney.destination", false]], "destination_port (mable.shipping_market.trade attribute)": [[1, "mable.shipping_market.Trade.destination_port", false]], "distance() (mable.event_management.arrivalevent method)": [[1, "mable.event_management.ArrivalEvent.distance", false]], "distance() (mable.event_management.cargotransferevent method)": [[1, "mable.event_management.CargoTransferEvent.distance", false]], "distance() (mable.event_management.idleevent method)": [[1, "mable.event_management.IdleEvent.distance", false]], "distance() (mable.event_management.travelevent method)": [[1, "mable.event_management.TravelEvent.distance", false]], "distance() (mable.event_management.vesselcargoevent method)": [[1, "mable.event_management.VesselCargoEvent.distance", false]], "distance() (mable.event_management.vesselevent method)": [[1, "mable.event_management.VesselEvent.distance", false]], "distance() (mable.event_management.vessellocationinformationevent method)": [[1, "mable.event_management.VesselLocationInformationEvent.distance", false]], "distribute_trades() (mable.shipping_market.auctionmarket static method)": [[1, "mable.shipping_market.AuctionMarket.distribute_trades", false]], "distribute_trades() (mable.shipping_market.market static method)": [[1, "mable.shipping_market.Market.distribute_trades", false]], "distribute_trades() (mable.shipping_market.simplemarket static method)": [[1, "mable.shipping_market.SimpleMarket.distribute_trades", false]], "distributionclassfactory (class in mable.extensions.cargo_distributions)": [[4, "mable.extensions.cargo_distributions.DistributionClassFactory", false]], "distributionshipping (class in mable.extensions.cargo_distributions)": [[4, "mable.extensions.cargo_distributions.DistributionShipping", false]], "distributionsimulationbuilder (class in mable.extensions.cargo_distributions)": [[4, "mable.extensions.cargo_distributions.DistributionSimulationBuilder", false]], "do_events_exists() (mable.simulation_environment.world method)": [[1, "mable.simulation_environment.World.do_events_exists", false]], "done() (in module mable.global_setup)": [[1, "mable.global_setup.done", false]], "drop_off (mable.transportation_scheduling.transportationsourcedestinationindicator attribute)": [[1, "mable.transportation_scheduling.TransportationSourceDestinationIndicator.DROP_OFF", false]], "durationevent (class in mable.event_management)": [[1, "mable.event_management.DurationEvent", false]], "dynamicnestedfield (class in mable.simulation_de_serialisation)": [[1, "mable.simulation_de_serialisation.DynamicNestedField", false]], "earliest_drop_off (mable.shipping_market.timewindowtrade property)": [[1, "mable.shipping_market.TimeWindowTrade.earliest_drop_off", false]], "earliest_drop_off_clean (mable.shipping_market.timewindowtrade property)": [[1, "mable.shipping_market.TimeWindowTrade.earliest_drop_off_clean", false]], "earliest_pickup (mable.shipping_market.timewindowtrade property)": [[1, "mable.shipping_market.TimeWindowTrade.earliest_pickup", false]], "earliest_pickup_clean (mable.shipping_market.timewindowtrade property)": [[1, "mable.shipping_market.TimeWindowTrade.earliest_pickup_clean", false]], "emit() (mable.io.logging_util.loguruhandler method)": [[5, "mable.io.logging_util.LoguruHandler.emit", false]], "energy_coefficient (mable.extensions.fuel_emissions.fuel attribute)": [[4, "mable.extensions.fuel_emissions.Fuel.energy_coefficient", false]], "engine (mable.transportation_scheduling.currentstate attribute)": [[1, "mable.transportation_scheduling.CurrentState.engine", false]], "engineprepostrunner (class in mable.engine)": [[1, "mable.engine.EnginePrePostRunner", false]], "event (class in mable.event_management)": [[1, "mable.event_management.Event", false]], "event (mable.event_management.eventitem attribute)": [[1, "mable.event_management.EventItem.event", false]], "event_action() (mable.competition.generation.auctioncargoevent method)": [[2, "mable.competition.generation.AuctionCargoEvent.event_action", false]], "event_action() (mable.event_management.cargoannouncementevent method)": [[1, "mable.event_management.CargoAnnouncementEvent.event_action", false]], "event_action() (mable.event_management.cargoevent method)": [[1, "mable.event_management.CargoEvent.event_action", false]], "event_action() (mable.event_management.cargotransferevent method)": [[1, "mable.event_management.CargoTransferEvent.event_action", false]], "event_action() (mable.event_management.event method)": [[1, "mable.event_management.Event.event_action", false]], "event_action() (mable.event_management.travelevent method)": [[1, "mable.event_management.TravelEvent.event_action", false]], "event_action() (mable.event_management.vesselevent method)": [[1, "mable.event_management.VesselEvent.event_action", false]], "event_occurrence() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.event_occurrence", false]], "event_queue (mable.engine.simulationengine property)": [[1, "mable.engine.SimulationEngine.event_queue", false]], "event_queue (mable.simulation_environment.world property)": [[1, "mable.simulation_environment.World.event_queue", false]], "eventexecutiondata (class in mable.event_management)": [[1, "mable.event_management.EventExecutionData", false]], "eventfuelprintobserver (class in mable.observers)": [[1, "mable.observers.EventFuelPrintObserver", false]], "eventitem (class in mable.event_management)": [[1, "mable.event_management.EventItem", false]], "eventobserver (class in mable.event_management)": [[1, "mable.event_management.EventObserver", false]], "eventqueue (class in mable.event_management)": [[1, "mable.event_management.EventQueue", false]], "example_fleet_1() (in module mable.examples.fleets)": [[3, "mable.examples.fleets.example_fleet_1", false]], "example_fleet_2() (in module mable.examples.fleets)": [[3, "mable.examples.fleets.example_fleet_2", false]], "factor (mable.extensions.fuel_emissions.consumptionrate attribute)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.factor", false]], "factor (mable.extensions.fuel_emissions.consumptionrate.data attribute)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.Data.factor", false]], "filter_out_outliers() (mable.extensions.cargo_distributions.distributionshipping static method)": [[4, "mable.extensions.cargo_distributions.DistributionShipping.filter_out_outliers", false]], "find_closest_node() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.find_closest_node", false]], "finish (mable.transportation_scheduling.transportationstartfinishindicator attribute)": [[1, "mable.transportation_scheduling.TransportationStartFinishIndicator.FINISH", false]], "fleet (mable.cargo_bidding.tradingcompany property)": [[1, "mable.cargo_bidding.TradingCompany.fleet", false]], "fleet (mable.transport_operation.shippingcompany property)": [[1, "mable.transport_operation.ShippingCompany.fleet", false]], "fleet (mable.transport_operation.shippingcompany.data attribute)": [[1, "mable.transport_operation.ShippingCompany.Data.fleet", false]], "format_time() (mable.event_management.event static method)": [[1, "mable.event_management.Event.format_time", false]], "fuel (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.Fuel", false]], "fuel (mable.extensions.fuel_emissions.vesselengine property)": [[4, "mable.extensions.fuel_emissions.VesselEngine.fuel", false]], "fuel (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.fuel", false]], "fuelclassfactory (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.FuelClassFactory", false]], "fuelsimulationfactory (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.FuelSimulationFactory", false]], "fuelspecsbuilder (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.FuelSpecsBuilder", false]], "generate_cargo_capacity() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_cargo_capacity", false]], "generate_company() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_company", false]], "generate_consumption_rate() (mable.extensions.fuel_emissions.fuelclassfactory static method)": [[4, "mable.extensions.fuel_emissions.FuelClassFactory.generate_consumption_rate", false]], "generate_consumption_rate() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[4, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_consumption_rate", false]], "generate_engine() (mable.competition.generation.auctionclassfactory static method)": [[2, "mable.competition.generation.AuctionClassFactory.generate_engine", false]], "generate_engine() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[4, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_engine", false]], "generate_engine() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_engine", false]], "generate_engine() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_engine", false]], "generate_event_arrival() (mable.extensions.cargo_distributions.distributionclassfactory static method)": [[4, "mable.extensions.cargo_distributions.DistributionClassFactory.generate_event_arrival", false]], "generate_event_arrival() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_event_arrival", false]], "generate_event_cargo() (mable.competition.generation.auctionclassfactory static method)": [[2, "mable.competition.generation.AuctionClassFactory.generate_event_cargo", false]], "generate_event_cargo() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_event_cargo", false]], "generate_event_cargo_transfer() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_event_cargo_transfer", false]], "generate_event_idling() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_event_idling", false]], "generate_event_location_info() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_event_location_info", false]], "generate_event_queue() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_event_queue", false]], "generate_event_travel() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_event_travel", false]], "generate_fleet() (mable.competition.generation.competitionbuilder method)": [[2, "mable.competition.generation.CompetitionBuilder.generate_fleet", false]], "generate_fleet() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_fleet", false]], "generate_fuel() (mable.extensions.fuel_emissions.fuelclassfactory static method)": [[4, "mable.extensions.fuel_emissions.FuelClassFactory.generate_fuel", false]], "generate_fuels() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[4, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_fuels", false]], "generate_location() (mable.extensions.world_ports.latlongfactory static method)": [[4, "mable.extensions.world_ports.LatLongFactory.generate_location", false]], "generate_location() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_location", false]], "generate_market() (mable.competition.generation.auctionclassfactory static method)": [[2, "mable.competition.generation.AuctionClassFactory.generate_market", false]], "generate_market() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_market", false]], "generate_market() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_market", false]], "generate_network() (mable.extensions.world_ports.latlongfactory static method)": [[4, "mable.extensions.world_ports.LatLongFactory.generate_network", false]], "generate_network() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_network", false]], "generate_network() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_network", false]], "generate_port() (mable.extensions.world_ports.latlongfactory static method)": [[4, "mable.extensions.world_ports.LatLongFactory.generate_port", false]], "generate_port() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_port", false]], "generate_random() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_random", false]], "generate_random() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_random", false]], "generate_route_graph_from_file() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.generate_route_graph_from_file", false]], "generate_shipping() (mable.extensions.cargo_distributions.distributionclassfactory static method)": [[4, "mable.extensions.cargo_distributions.DistributionClassFactory.generate_shipping", false]], "generate_shipping() (mable.extensions.cargo_distributions.distributionsimulationbuilder method)": [[4, "mable.extensions.cargo_distributions.DistributionSimulationBuilder.generate_shipping", false]], "generate_shipping() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_shipping", false]], "generate_shipping() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_shipping", false]], "generate_shipping_companies() (mable.competition.generation.competitionbuilder method)": [[2, "mable.competition.generation.CompetitionBuilder.generate_shipping_companies", false]], "generate_shipping_companies() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_shipping_companies", false]], "generate_simulation() (in module mable.examples.environment)": [[3, "mable.examples.environment.generate_simulation", false]], "generate_trade() (mable.extensions.cargo_distributions.distributionclassfactory static method)": [[4, "mable.extensions.cargo_distributions.DistributionClassFactory.generate_trade", false]], "generate_trade() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_trade", false]], "generate_vessel() (mable.extensions.fuel_emissions.fuelclassfactory static method)": [[4, "mable.extensions.fuel_emissions.FuelClassFactory.generate_vessel", false]], "generate_vessel() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[4, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_vessel", false]], "generate_vessel() (mable.extensions.world_ports.latlongfactory static method)": [[4, "mable.extensions.world_ports.LatLongFactory.generate_vessel", false]], "generate_vessel() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_vessel", false]], "generate_vessel() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_vessel", false]], "generate_vessel_engine() (mable.extensions.fuel_emissions.fuelclassfactory static method)": [[4, "mable.extensions.fuel_emissions.FuelClassFactory.generate_vessel_engine", false]], "generate_vessel_engine() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[4, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_vessel_engine", false]], "generate_world() (mable.simulation_generation.classfactory static method)": [[1, "mable.simulation_generation.ClassFactory.generate_world", false]], "generate_world() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.generate_world", false]], "get() (mable.event_management.eventqueue method)": [[1, "mable.event_management.EventQueue.get", false]], "get() (mable.instructions.specifications method)": [[1, "mable.instructions.Specifications.get", false]], "get() (mable.simulation_de_serialisation.simulationspecification class method)": [[1, "mable.simulation_de_serialisation.SimulationSpecification.get", false]], "get() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.get", false]], "get_all_routes_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.get_all_routes_between_points", false]], "get_all_stored_routes_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.get_all_stored_routes_between_points", false]], "get_arrival_time() (mable.transport_operation.simplecompany method)": [[1, "mable.transport_operation.SimpleCompany.get_arrival_time", false]], "get_ballast_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[4, "mable.extensions.fuel_emissions.VesselEngine.get_ballast_consumption", false]], "get_ballast_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.get_ballast_consumption", false]], "get_capacity() (mable.transport_operation.cargohold method)": [[1, "mable.transport_operation.CargoHold.get_capacity", false]], "get_class() (mable.transport_operation.shippingcompany class method)": [[1, "mable.transport_operation.ShippingCompany.get_class", false]], "get_co2_emissions() (mable.extensions.fuel_emissions.fuel method)": [[4, "mable.extensions.fuel_emissions.Fuel.get_co2_emissions", false]], "get_co2_emissions() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.get_co2_emissions", false]], "get_company_id() (mable.metrics.metricscollector method)": [[1, "mable.metrics.MetricsCollector.get_company_id", false]], "get_cost() (mable.extensions.fuel_emissions.fuel method)": [[4, "mable.extensions.fuel_emissions.Fuel.get_cost", false]], "get_cost() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.get_cost", false]], "get_current_load() (mable.transport_operation.cargohold method)": [[1, "mable.transport_operation.CargoHold.get_current_load", false]], "get_distance() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.get_distance", false]], "get_distance() (mable.simulation_space.shippingnetwork static method)": [[1, "mable.simulation_space.ShippingNetwork.get_distance", false]], "get_distance() (mable.simulation_space.unitshippingnetwork method)": [[1, "mable.simulation_space.UnitShippingNetwork.get_distance", false]], "get_event_observers() (mable.engine.simulationengine method)": [[1, "mable.engine.SimulationEngine.get_event_observers", false]], "get_fuel_mfo() (in module mable.examples.fleets)": [[3, "mable.examples.fleets.get_fuel_mfo", false]], "get_idle_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[4, "mable.extensions.fuel_emissions.VesselEngine.get_idle_consumption", false]], "get_idle_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.get_idle_consumption", false]], "get_index_or_default() (in module mable.extensions.world_ports)": [[4, "mable.extensions.world_ports.get_index_or_default", false]], "get_insertion_points() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.get_insertion_points", false]], "get_item() (mable.extensions.fuel_emissions.globalsetup class method)": [[4, "mable.extensions.fuel_emissions.GlobalSetup.get_item", false]], "get_journey_location() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.get_journey_location", false]], "get_journey_location() (mable.simulation_space.shippingnetwork method)": [[1, "mable.simulation_space.ShippingNetwork.get_journey_location", false]], "get_journey_location() (mable.simulation_space.unitshippingnetwork method)": [[1, "mable.simulation_space.UnitShippingNetwork.get_journey_location", false]], "get_keys() (mable.extensions.fuel_emissions.globalsetup class method)": [[4, "mable.extensions.fuel_emissions.GlobalSetup.get_keys", false]], "get_laden_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[4, "mable.extensions.fuel_emissions.VesselEngine.get_laden_consumption", false]], "get_laden_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.get_laden_consumption", false]], "get_loading_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[4, "mable.extensions.fuel_emissions.VesselEngine.get_loading_consumption", false]], "get_loading_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.get_loading_consumption", false]], "get_loading_rate() (mable.transport_operation.cargohold method)": [[1, "mable.transport_operation.CargoHold.get_loading_rate", false]], "get_loading_time() (mable.transport_operation.simplevessel method)": [[1, "mable.transport_operation.SimpleVessel.get_loading_time", false]], "get_loading_time() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.get_loading_time", false]], "get_long_lat_dist() (mable.extensions.world_ports.latlongshippingnetwork static method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.get_long_lat_dist", false]], "get_network_distance() (mable.engine.companyheadquarters method)": [[1, "mable.engine.CompanyHeadquarters.get_network_distance", false]], "get_network_port_or_default() (mable.engine.companyheadquarters method)": [[1, "mable.engine.CompanyHeadquarters.get_network_port_or_default", false]], "get_next_event() (mable.simulation_environment.world method)": [[1, "mable.simulation_environment.World.get_next_event", false]], "get_port() (mable.simulation_space.networkwithportdict method)": [[1, "mable.simulation_space.NetworkWithPortDict.get_port", false]], "get_port() (mable.simulation_space.shippingnetwork method)": [[1, "mable.simulation_space.ShippingNetwork.get_port", false]], "get_port_or_default() (mable.simulation_space.networkwithportdict method)": [[1, "mable.simulation_space.NetworkWithPortDict.get_port_or_default", false]], "get_port_or_default() (mable.simulation_space.shippingnetwork method)": [[1, "mable.simulation_space.ShippingNetwork.get_port_or_default", false]], "get_ports() (in module mable.extensions.world_ports)": [[4, "mable.extensions.world_ports.get_ports", false]], "get_shortest_grid_route_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.get_shortest_grid_route_between_points", false]], "get_shortest_path_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.get_shortest_path_between_points", false]], "get_shortest_route_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.get_shortest_route_between_points", false]], "get_specification_builder() (in module mable.examples.environment)": [[3, "mable.examples.environment.get_specification_builder", false]], "get_trades() (mable.shipping_market.shipping method)": [[1, "mable.shipping_market.Shipping.get_trades", false]], "get_trades_for_company_copy() (mable.shipping_market.auctionledger method)": [[1, "mable.shipping_market.AuctionLedger.get_trades_for_company_copy", false]], "get_trading_times() (mable.shipping_market.shipping method)": [[1, "mable.shipping_market.Shipping.get_trading_times", false]], "get_travel_time() (mable.extensions.world_ports.worldvessel method)": [[4, "mable.extensions.world_ports.WorldVessel.get_travel_time", false]], "get_travel_time() (mable.transport_operation.simplevessel method)": [[1, "mable.transport_operation.SimpleVessel.get_travel_time", false]], "get_travel_time() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.get_travel_time", false]], "get_unloading_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[4, "mable.extensions.fuel_emissions.VesselEngine.get_unloading_consumption", false]], "get_unloading_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.get_unloading_consumption", false]], "get_vessel_id() (mable.metrics.metricscollector method)": [[1, "mable.metrics.MetricsCollector.get_vessel_id", false]], "get_vessel_location() (mable.simulation_space.shippingnetwork method)": [[1, "mable.simulation_space.ShippingNetwork.get_vessel_location", false]], "globalmetricscollector (class in mable.metrics)": [[1, "mable.metrics.GlobalMetricsCollector", false]], "globalsetup (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.GlobalSetup", false]], "handle_exception() (in module mable.cli)": [[1, "mable.cli.handle_exception", false]], "has_any_load() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.has_any_load", false]], "has_next_event() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.has_next_event", false]], "has_started() (mable.event_management.durationevent method)": [[1, "mable.event_management.DurationEvent.has_started", false]], "headquarters (mable.cargo_bidding.tradingcompany property)": [[1, "mable.cargo_bidding.TradingCompany.headquarters", false]], "headquarters (mable.engine.simulationengine property)": [[1, "mable.engine.SimulationEngine.headquarters", false]], "idle_consumption (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.idle_consumption", false]], "idleevent (class in mable.event_management)": [[1, "mable.event_management.IdleEvent", false]], "inform() (mable.cargo_bidding.mcstcompany method)": [[1, "mable.cargo_bidding.MCSTCompany.inform", false]], "inform() (mable.cargo_bidding.meanscompany method)": [[1, "mable.cargo_bidding.MeansCompany.inform", false]], "inform() (mable.cargo_bidding.tradingcompany method)": [[1, "mable.cargo_bidding.TradingCompany.inform", false]], "inform() (mable.transport_operation.shippingcompany method)": [[1, "mable.transport_operation.ShippingCompany.inform", false]], "inform() (mable.transport_operation.simplecompany method)": [[1, "mable.transport_operation.SimpleCompany.inform", false]], "inform_future_trades() (mable.shipping_market.auctionmarket static method)": [[1, "mable.shipping_market.AuctionMarket.inform_future_trades", false]], "init_from_json_string() (mable.instructions.specifications class method)": [[1, "mable.instructions.Specifications.init_from_json_string", false]], "initialise_trades() (mable.extensions.cargo_distributions.distributionshipping method)": [[4, "mable.extensions.cargo_distributions.DistributionShipping.initialise_trades", false]], "initialise_trades() (mable.shipping_market.shipping method)": [[1, "mable.shipping_market.Shipping.initialise_trades", false]], "initialise_trades() (mable.shipping_market.staticshipping method)": [[1, "mable.shipping_market.StaticShipping.initialise_trades", false]], "is_drop_off (mable.event_management.vesselcargoevent property)": [[1, "mable.event_management.VesselCargoEvent.is_drop_off", false]], "is_empty() (mable.transport_operation.cargohold method)": [[1, "mable.transport_operation.CargoHold.is_empty", false]], "is_laden (mable.event_management.travelevent property)": [[1, "mable.event_management.TravelEvent.is_laden", false]], "is_pickup (mable.event_management.vesselcargoevent property)": [[1, "mable.event_management.VesselCargoEvent.is_pickup", false]], "is_positive_integer() (mable.cli.argumentparserextensions static method)": [[1, "mable.cli.ArgumentParserExtensions.is_positive_integer", false]], "is_valid (mable.transportation_scheduling.currentstate attribute)": [[1, "mable.transportation_scheduling.CurrentState.is_valid", false]], "is_valid_file() (mable.cli.argumentparserextensions static method)": [[1, "mable.cli.ArgumentParserExtensions.is_valid_file", false]], "journey_log (mable.transport_operation.vessel property)": [[1, "mable.transport_operation.Vessel.journey_log", false]], "jsonable (class in mable.util)": [[1, "mable.util.JsonAble", false]], "jsonableencoder (class in mable.util)": [[1, "mable.util.JsonAbleEncoder", false]], "keep_journey_log (mable.transport_operation.vessel.data attribute)": [[1, "mable.transport_operation.Vessel.Data.keep_journey_log", false]], "key_tuple (mable.metrics.vesselkey property)": [[1, "mable.metrics.VesselKey.key_tuple", false]], "keys (mable.shipping_market.auctionledger property)": [[1, "mable.shipping_market.AuctionLedger.keys", false]], "laden_consumption_rate (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.laden_consumption_rate", false]], "latest_drop_off (mable.shipping_market.timewindowtrade property)": [[1, "mable.shipping_market.TimeWindowTrade.latest_drop_off", false]], "latest_drop_off_clean (mable.shipping_market.timewindowtrade property)": [[1, "mable.shipping_market.TimeWindowTrade.latest_drop_off_clean", false]], "latest_pickup (mable.shipping_market.timewindowtrade property)": [[1, "mable.shipping_market.TimeWindowTrade.latest_pickup", false]], "latest_pickup_clean (mable.shipping_market.timewindowtrade property)": [[1, "mable.shipping_market.TimeWindowTrade.latest_pickup_clean", false]], "latitude (mable.extensions.world_ports.latlonglocation property)": [[4, "mable.extensions.world_ports.LatLongLocation.latitude", false]], "latitude (mable.extensions.world_ports.latlongport property)": [[4, "mable.extensions.world_ports.LatLongPort.latitude", false]], "latlongfactory (class in mable.extensions.world_ports)": [[4, "mable.extensions.world_ports.LatLongFactory", false]], "latlonglocation (class in mable.extensions.world_ports)": [[4, "mable.extensions.world_ports.LatLongLocation", false]], "latlongport (class in mable.extensions.world_ports)": [[4, "mable.extensions.world_ports.LatLongPort", false]], "latlongshippingnetwork (class in mable.extensions.world_ports)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork", false]], "let_loguru_handle_logging() (in module mable.io.logging_util)": [[5, "mable.io.logging_util.let_loguru_handle_logging", false]], "load_cargo() (mable.transport_operation.cargohold method)": [[1, "mable.transport_operation.CargoHold.load_cargo", false]], "load_cargo() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.load_cargo", false]], "load_distributions() (mable.extensions.cargo_distributions.distributionshipping method)": [[4, "mable.extensions.cargo_distributions.DistributionShipping.load_distributions", false]], "loadable_cargo_types() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.loadable_cargo_types", false]], "loading_consumption (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.loading_consumption", false]], "loading_rate (mable.transport_operation.cargocapacity attribute)": [[1, "mable.transport_operation.CargoCapacity.loading_rate", false]], "loading_rate (mable.transport_operation.cargocapacity.data attribute)": [[1, "mable.transport_operation.CargoCapacity.Data.loading_rate", false]], "loading_rate (mable.transport_operation.cargocontainer property)": [[1, "mable.transport_operation.CargoContainer.loading_rate", false]], "location (class in mable.simulation_space)": [[1, "mable.simulation_space.Location", false]], "location (mable.event_management.idleevent property)": [[1, "mable.event_management.IdleEvent.location", false]], "location (mable.event_management.travelevent property)": [[1, "mable.event_management.TravelEvent.location", false]], "location (mable.event_management.vesselcargoevent property)": [[1, "mable.event_management.VesselCargoEvent.location", false]], "location (mable.event_management.vesselevent property)": [[1, "mable.event_management.VesselEvent.location", false]], "location (mable.event_management.vessellocationinformationevent property)": [[1, "mable.event_management.VesselLocationInformationEvent.location", false]], "location (mable.transport_operation.vessel property)": [[1, "mable.transport_operation.Vessel.location", false]], "location (mable.transport_operation.vessel.data attribute)": [[1, "mable.transport_operation.Vessel.Data.location", false]], "log_journey_log_event() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.log_journey_log_event", false]], "logrunner (class in mable.observers)": [[1, "mable.observers.LogRunner", false]], "loguruhandler (class in mable.io.logging_util)": [[5, "mable.io.logging_util.LoguruHandler", false]], "longitude (mable.extensions.world_ports.latlonglocation property)": [[4, "mable.extensions.world_ports.LatLongLocation.longitude", false]], "longitude (mable.extensions.world_ports.latlongport property)": [[4, "mable.extensions.world_ports.LatLongPort.longitude", false]], "mable": [[0, "module-mable", false], [1, "module-mable", false]], "mable.cargo_bidding": [[1, "module-mable.cargo_bidding", false]], "mable.cli": [[1, "module-mable.cli", false]], "mable.competition": [[2, "module-mable.competition", false]], "mable.competition.generation": [[2, "module-mable.competition.generation", false]], "mable.engine": [[1, "module-mable.engine", false]], "mable.event_management": [[1, "module-mable.event_management", false]], "mable.examples": [[3, "module-mable.examples", false]], "mable.examples.environment": [[3, "module-mable.examples.environment", false]], "mable.examples.fleets": [[3, "module-mable.examples.fleets", false]], "mable.extensions": [[4, "module-mable.extensions", false]], "mable.extensions.cargo_distributions": [[4, "module-mable.extensions.cargo_distributions", false]], "mable.extensions.fuel_emissions": [[4, "module-mable.extensions.fuel_emissions", false]], "mable.extensions.world_ports": [[4, "module-mable.extensions.world_ports", false]], "mable.global_setup": [[1, "module-mable.global_setup", false]], "mable.instructions": [[1, "module-mable.instructions", false]], "mable.io": [[5, "module-mable.io", false]], "mable.io.logging_util": [[5, "module-mable.io.logging_util", false]], "mable.metrics": [[1, "module-mable.metrics", false]], "mable.observers": [[1, "module-mable.observers", false]], "mable.shipping_market": [[1, "module-mable.shipping_market", false]], "mable.simulation_de_serialisation": [[1, "module-mable.simulation_de_serialisation", false]], "mable.simulation_environment": [[1, "module-mable.simulation_environment", false]], "mable.simulation_generation": [[1, "module-mable.simulation_generation", false]], "mable.simulation_space": [[1, "module-mable.simulation_space", false]], "mable.transport_operation": [[1, "module-mable.transport_operation", false]], "mable.transportation_scheduling": [[1, "module-mable.transportation_scheduling", false]], "mable.util": [[1, "module-mable.util", false]], "main() (in module mable.cli)": [[1, "mable.cli.main", false]], "market (class in mable.shipping_market)": [[1, "mable.shipping_market.Market", false]], "market (mable.engine.simulationengine property)": [[1, "mable.engine.SimulationEngine.market", false]], "mcstcompany (class in mable.cargo_bidding)": [[1, "mable.cargo_bidding.MCSTCompany", false]], "meanscompany (class in mable.cargo_bidding)": [[1, "mable.cargo_bidding.MeansCompany", false]], "metricdict (class in mable.metrics)": [[1, "mable.metrics.MetricDict", false]], "metrics (mable.observers.metricsobserver property)": [[1, "mable.observers.MetricsObserver.metrics", false]], "metricscollector (class in mable.metrics)": [[1, "mable.metrics.MetricsCollector", false]], "metricsobserver (class in mable.observers)": [[1, "mable.observers.MetricsObserver", false]], "module": [[0, "module-mable", false], [1, "module-mable", false], [1, "module-mable.cargo_bidding", false], [1, "module-mable.cli", false], [1, "module-mable.engine", false], [1, "module-mable.event_management", false], [1, "module-mable.global_setup", false], [1, "module-mable.instructions", false], [1, "module-mable.metrics", false], [1, "module-mable.observers", false], [1, "module-mable.shipping_market", false], [1, "module-mable.simulation_de_serialisation", false], [1, "module-mable.simulation_environment", false], [1, "module-mable.simulation_generation", false], [1, "module-mable.simulation_space", false], [1, "module-mable.transport_operation", false], [1, "module-mable.transportation_scheduling", false], [1, "module-mable.util", false], [2, "module-mable.competition", false], [2, "module-mable.competition.generation", false], [3, "module-mable.examples", false], [3, "module-mable.examples.environment", false], [3, "module-mable.examples.fleets", false], [4, "module-mable.extensions", false], [4, "module-mable.extensions.cargo_distributions", false], [4, "module-mable.extensions.fuel_emissions", false], [4, "module-mable.extensions.world_ports", false], [5, "module-mable.io", false], [5, "module-mable.io.logging_util", false]], "name (mable.extensions.fuel_emissions.fuel attribute)": [[4, "mable.extensions.fuel_emissions.Fuel.name", false]], "name (mable.simulation_space.location property)": [[1, "mable.simulation_space.Location.name", false]], "name (mable.transport_operation.shippingcompany property)": [[1, "mable.transport_operation.ShippingCompany.name", false]], "name (mable.transport_operation.shippingcompany.data attribute)": [[1, "mable.transport_operation.ShippingCompany.Data.name", false]], "name (mable.transport_operation.vessel property)": [[1, "mable.transport_operation.Vessel.name", false]], "name (mable.transport_operation.vessel.data attribute)": [[1, "mable.transport_operation.Vessel.Data.name", false]], "network (mable.simulation_environment.world property)": [[1, "mable.simulation_environment.World.network", false]], "networkwithportdict (class in mable.simulation_space)": [[1, "mable.simulation_space.NetworkWithPortDict", false]], "next() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.next", false]], "nopathsexception": [[4, "mable.extensions.world_ports.NoPathsException", false]], "not_realised (mable.shipping_market.tradestatus attribute)": [[1, "mable.shipping_market.TradeStatus.NOT_REALISED", false]], "notify() (mable.event_management.eventobserver method)": [[1, "mable.event_management.EventObserver.notify", false]], "notify() (mable.observers.auctionmetricsobserver method)": [[1, "mable.observers.AuctionMetricsObserver.notify", false]], "notify() (mable.observers.auctionoutcomeobserver method)": [[1, "mable.observers.AuctionOutcomeObserver.notify", false]], "notify() (mable.observers.eventfuelprintobserver method)": [[1, "mable.observers.EventFuelPrintObserver.notify", false]], "notify() (mable.observers.metricsobserver method)": [[1, "mable.observers.MetricsObserver.notify", false]], "notify_event_observer() (mable.engine.simulationengine method)": [[1, "mable.engine.SimulationEngine.notify_event_observer", false]], "onjourney (class in mable.simulation_space)": [[1, "mable.simulation_space.OnJourney", false]], "opts (mable.extensions.fuel_emissions.consumptionrate.data.schema attribute)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.Data.Schema.opts", false]], "opts (mable.extensions.fuel_emissions.vesselengine.data.schema attribute)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.Schema.opts", false]], "opts (mable.extensions.fuel_emissions.vesselwithengine.data.schema attribute)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.Data.Schema.opts", false]], "opts (mable.simulation_de_serialisation.dataschema attribute)": [[1, "mable.simulation_de_serialisation.DataSchema.opts", false]], "opts (mable.transport_operation.cargocapacity.data.schema attribute)": [[1, "mable.transport_operation.CargoCapacity.Data.Schema.opts", false]], "opts (mable.transport_operation.cargoholdschema attribute)": [[1, "mable.transport_operation.CargoHoldSchema.opts", false]], "opts (mable.transport_operation.shippingcompany.data.schema attribute)": [[1, "mable.transport_operation.ShippingCompany.Data.Schema.opts", false]], "opts (mable.transport_operation.simplevessel.data.schema attribute)": [[1, "mable.transport_operation.SimpleVessel.Data.Schema.opts", false]], "opts (mable.transport_operation.vessel.data.schema attribute)": [[1, "mable.transport_operation.Vessel.Data.Schema.opts", false]], "origin (mable.simulation_space.onjourney attribute)": [[1, "mable.simulation_space.OnJourney.origin", false]], "origin_port (mable.shipping_market.trade attribute)": [[1, "mable.shipping_market.Trade.origin_port", false]], "other_data (mable.event_management.eventexecutiondata attribute)": [[1, "mable.event_management.EventExecutionData.other_data", false]], "output_directory (mable.engine.simulationengine property)": [[1, "mable.engine.SimulationEngine.output_directory", false]], "payment (mable.shipping_market.contract attribute)": [[1, "mable.shipping_market.Contract.payment", false]], "performed_time() (mable.event_management.durationevent method)": [[1, "mable.event_management.DurationEvent.performed_time", false]], "pick_up (mable.transportation_scheduling.transportationsourcedestinationindicator attribute)": [[1, "mable.transportation_scheduling.TransportationSourceDestinationIndicator.PICK_UP", false]], "pop() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.pop", false]], "port (class in mable.simulation_space)": [[1, "mable.simulation_space.Port", false]], "post_run_cmds (mable.engine.simulationengine attribute)": [[1, "mable.engine.SimulationEngine.POST_RUN_CMDS", false]], "pre_inform() (mable.transport_operation.shippingcompany method)": [[1, "mable.transport_operation.ShippingCompany.pre_inform", false]], "pre_inform() (mable.transport_operation.simplecompany method)": [[1, "mable.transport_operation.SimpleCompany.pre_inform", false]], "pre_run_cmds (mable.engine.simulationengine attribute)": [[1, "mable.engine.SimulationEngine.PRE_RUN_CMDS", false]], "pre_run_inform_vessel_locations() (in module mable.engine)": [[1, "mable.engine.pre_run_inform_vessel_locations", false]], "price (mable.extensions.fuel_emissions.fuel attribute)": [[4, "mable.extensions.fuel_emissions.Fuel.price", false]], "probability (mable.shipping_market.trade attribute)": [[1, "mable.shipping_market.Trade.probability", false]], "propelling_engine (mable.extensions.fuel_emissions.vesselwithengine.data attribute)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.Data.propelling_engine", false]], "propose_schedules() (mable.transport_operation.simplecompany method)": [[1, "mable.transport_operation.SimpleCompany.propose_schedules", false]], "put() (mable.event_management.eventqueue method)": [[1, "mable.event_management.EventQueue.put", false]], "random (mable.simulation_environment.world property)": [[1, "mable.simulation_environment.World.random", false]], "receive() (mable.cargo_bidding.tradingcompany method)": [[1, "mable.cargo_bidding.TradingCompany.receive", false]], "receive() (mable.transport_operation.shippingcompany method)": [[1, "mable.transport_operation.ShippingCompany.receive", false]], "receive() (mable.transport_operation.simplecompany method)": [[1, "mable.transport_operation.SimpleCompany.receive", false]], "regionalmetricscollector (class in mable.metrics)": [[1, "mable.metrics.RegionalMetricsCollector", false]], "register() (mable.simulation_de_serialisation.simulationspecification class method)": [[1, "mable.simulation_de_serialisation.SimulationSpecification.register", false]], "register_by_type_name() (mable.simulation_de_serialisation.simulationspecification class method)": [[1, "mable.simulation_de_serialisation.SimulationSpecification.register_by_type_name", false]], "register_event_observer() (mable.engine.simulationengine method)": [[1, "mable.engine.SimulationEngine.register_event_observer", false]], "rejected (mable.shipping_market.tradestatus attribute)": [[1, "mable.shipping_market.TradeStatus.REJECTED", false]], "remove() (mable.event_management.eventqueue method)": [[1, "mable.event_management.EventQueue.remove", false]], "remove_canals_from_graph() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.remove_canals_from_graph", false]], "route (class in mable.extensions.world_ports)": [[4, "mable.extensions.world_ports.Route", false]], "run() (mable.engine.engineprepostrunner method)": [[1, "mable.engine.EnginePrePostRunner.run", false]], "run() (mable.engine.simulationengine method)": [[1, "mable.engine.SimulationEngine.run", false]], "run() (mable.observers.logrunner method)": [[1, "mable.observers.LogRunner.run", false]], "sample_cargo_weight() (mable.extensions.cargo_distributions.distributionshipping static method)": [[4, "mable.extensions.cargo_distributions.DistributionShipping.sample_cargo_weight", false]], "sample_cargoes_from_port_distributions() (mable.extensions.cargo_distributions.distributionshipping method)": [[4, "mable.extensions.cargo_distributions.DistributionShipping.sample_cargoes_from_port_distributions", false]], "sample_time_windows() (mable.extensions.cargo_distributions.distributionshipping static method)": [[4, "mable.extensions.cargo_distributions.DistributionShipping.sample_time_windows", false]], "sanitised_ledger (mable.shipping_market.auctionledger property)": [[1, "mable.shipping_market.AuctionLedger.sanitised_ledger", false]], "scenarios (mable.extensions.world_ports.latlongshippingnetwork property)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.scenarios", false]], "schedule (class in mable.transportation_scheduling)": [[1, "mable.transportation_scheduling.Schedule", false]], "schedule (mable.transport_operation.vessel property)": [[1, "mable.transport_operation.Vessel.schedule", false]], "scheduled_trades (mable.transport_operation.scheduleproposal attribute)": [[1, "mable.transport_operation.ScheduleProposal.scheduled_trades", false]], "scheduleproposal (class in mable.transport_operation)": [[1, "mable.transport_operation.ScheduleProposal", false]], "schedules (mable.transport_operation.scheduleproposal attribute)": [[1, "mable.transport_operation.ScheduleProposal.schedules", false]], "schema (mable.simulation_de_serialisation.schemaprotocol attribute)": [[1, "mable.simulation_de_serialisation.SchemaProtocol.Schema", false]], "schemaprotocol (class in mable.simulation_de_serialisation)": [[1, "mable.simulation_de_serialisation.SchemaProtocol", false]], "select_task() (in module mable.cli)": [[1, "mable.cli.select_task", false]], "set_engine() (mable.simulation_environment.simulationengineaware method)": [[1, "mable.simulation_environment.SimulationEngineAware.set_engine", false]], "set_engine() (mable.simulation_environment.world method)": [[1, "mable.simulation_environment.World.set_engine", false]], "set_engine() (mable.transport_operation.shippingcompany method)": [[1, "mable.transport_operation.ShippingCompany.set_engine", false]], "set_engine() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.set_engine", false]], "set_engines() (mable.competition.generation.competitionbuilder method)": [[2, "mable.competition.generation.CompetitionBuilder.set_engines", false]], "set_engines() (mable.simulation_generation.simulationbuilder method)": [[1, "mable.simulation_generation.SimulationBuilder.set_engines", false]], "set_item() (mable.extensions.fuel_emissions.globalsetup class method)": [[4, "mable.extensions.fuel_emissions.GlobalSetup.set_item", false]], "shipping (class in mable.shipping_market)": [[1, "mable.shipping_market.Shipping", false]], "shipping (mable.engine.simulationengine property)": [[1, "mable.engine.SimulationEngine.shipping", false]], "shipping_companies (mable.engine.simulationengine property)": [[1, "mable.engine.SimulationEngine.shipping_companies", false]], "shippingcompany (class in mable.transport_operation)": [[1, "mable.transport_operation.ShippingCompany", false]], "shippingcompany.data (class in mable.transport_operation)": [[1, "mable.transport_operation.ShippingCompany.Data", false]], "shippingcompany.data.schema (class in mable.transport_operation)": [[1, "mable.transport_operation.ShippingCompany.Data.Schema", false]], "shippingnetwork (class in mable.simulation_space)": [[1, "mable.simulation_space.ShippingNetwork", false]], "simplecompany (class in mable.transport_operation)": [[1, "mable.transport_operation.SimpleCompany", false]], "simplemarket (class in mable.shipping_market)": [[1, "mable.shipping_market.SimpleMarket", false]], "simplevessel (class in mable.transport_operation)": [[1, "mable.transport_operation.SimpleVessel", false]], "simplevessel.data (class in mable.transport_operation)": [[1, "mable.transport_operation.SimpleVessel.Data", false]], "simplevessel.data.schema (class in mable.transport_operation)": [[1, "mable.transport_operation.SimpleVessel.Data.Schema", false]], "simulationbuilder (class in mable.simulation_generation)": [[1, "mable.simulation_generation.SimulationBuilder", false]], "simulationengine (class in mable.engine)": [[1, "mable.engine.SimulationEngine", false]], "simulationengineaware (class in mable.simulation_environment)": [[1, "mable.simulation_environment.SimulationEngineAware", false]], "simulationspecification (class in mable.simulation_de_serialisation)": [[1, "mable.simulation_de_serialisation.SimulationSpecification", false]], "smooth_route() (mable.extensions.world_ports.latlongshippingnetwork method)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.smooth_route", false]], "specifications (class in mable.instructions)": [[1, "mable.instructions.Specifications", false]], "specifications.builder (class in mable.instructions)": [[1, "mable.instructions.Specifications.Builder", false]], "speed (mable.transport_operation.simplevessel property)": [[1, "mable.transport_operation.SimpleVessel.speed", false]], "speed (mable.transport_operation.simplevessel.data attribute)": [[1, "mable.transport_operation.SimpleVessel.Data.speed", false]], "speed_power (mable.extensions.fuel_emissions.consumptionrate attribute)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.speed_power", false]], "speed_power (mable.extensions.fuel_emissions.consumptionrate.data attribute)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.Data.speed_power", false]], "start (mable.transportation_scheduling.transportationstartfinishindicator attribute)": [[1, "mable.transportation_scheduling.TransportationStartFinishIndicator.START", false]], "start_next_event() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.start_next_event", false]], "start_time (mable.simulation_space.onjourney attribute)": [[1, "mable.simulation_space.OnJourney.start_time", false]], "staticshipping (class in mable.shipping_market)": [[1, "mable.shipping_market.StaticShipping", false]], "status (mable.shipping_market.trade attribute)": [[1, "mable.shipping_market.Trade.status", false]], "task_metrics_overview() (in module mable.cli)": [[1, "mable.cli.task_metrics_overview", false]], "time (mable.event_management.event property)": [[1, "mable.event_management.Event.time", false]], "time (mable.event_management.eventitem attribute)": [[1, "mable.event_management.EventItem.time", false]], "time (mable.shipping_market.trade attribute)": [[1, "mable.shipping_market.Trade.time", false]], "time_window (mable.shipping_market.timewindowtrade attribute)": [[1, "mable.shipping_market.TimeWindowTrade.time_window", false]], "timewindowarrivalevent (class in mable.extensions.cargo_distributions)": [[4, "mable.extensions.cargo_distributions.TimeWindowArrivalEvent", false]], "timewindowtrade (class in mable.shipping_market)": [[1, "mable.shipping_market.TimeWindowTrade", false]], "to_json() (mable.extensions.fuel_emissions.consumptionrate method)": [[4, "mable.extensions.fuel_emissions.ConsumptionRate.to_json", false]], "to_json() (mable.extensions.fuel_emissions.fuel method)": [[4, "mable.extensions.fuel_emissions.Fuel.to_json", false]], "to_json() (mable.extensions.fuel_emissions.vesselengine method)": [[4, "mable.extensions.fuel_emissions.VesselEngine.to_json", false]], "to_json() (mable.extensions.fuel_emissions.vesselwithengine method)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.to_json", false]], "to_json() (mable.extensions.world_ports.latlongport method)": [[4, "mable.extensions.world_ports.LatLongPort.to_json", false]], "to_json() (mable.metrics.metricscollector method)": [[1, "mable.metrics.MetricsCollector.to_json", false]], "to_json() (mable.shipping_market.contract method)": [[1, "mable.shipping_market.Contract.to_json", false]], "to_json() (mable.shipping_market.trade method)": [[1, "mable.shipping_market.Trade.to_json", false]], "to_json() (mable.simulation_space.port method)": [[1, "mable.simulation_space.Port.to_json", false]], "to_json() (mable.transport_operation.cargocapacity method)": [[1, "mable.transport_operation.CargoCapacity.to_json", false]], "to_json() (mable.transport_operation.simplevessel method)": [[1, "mable.transport_operation.SimpleVessel.to_json", false]], "to_json() (mable.util.jsonable method)": [[1, "mable.util.JsonAble.to_json", false]], "trade (class in mable.shipping_market)": [[1, "mable.shipping_market.Trade", false]], "trade (mable.event_management.vesselcargoevent property)": [[1, "mable.event_management.VesselCargoEvent.trade", false]], "trade (mable.shipping_market.contract attribute)": [[1, "mable.shipping_market.Contract.trade", false]], "trade (mable.transport_operation.bid attribute)": [[1, "mable.transport_operation.Bid.trade", false]], "trade_occurrence_frequency (mable.shipping_market.shipping property)": [[1, "mable.shipping_market.Shipping.trade_occurrence_frequency", false]], "tradestatus (class in mable.shipping_market)": [[1, "mable.shipping_market.TradeStatus", false]], "tradingcompany (class in mable.cargo_bidding)": [[1, "mable.cargo_bidding.TradingCompany", false]], "transportationsourcedestinationindicator (class in mable.transportation_scheduling)": [[1, "mable.transportation_scheduling.TransportationSourceDestinationIndicator", false]], "transportationstartfinishindicator (class in mable.transportation_scheduling)": [[1, "mable.transportation_scheduling.TransportationStartFinishIndicator", false]], "travelevent (class in mable.event_management)": [[1, "mable.event_management.TravelEvent", false]], "unitshippingnetwork (class in mable.simulation_space)": [[1, "mable.simulation_space.UnitShippingNetwork", false]], "unknown (mable.shipping_market.tradestatus attribute)": [[1, "mable.shipping_market.TradeStatus.UNKNOWN", false]], "unload_cargo() (mable.transport_operation.cargohold method)": [[1, "mable.transport_operation.CargoHold.unload_cargo", false]], "unload_cargo() (mable.transport_operation.vessel method)": [[1, "mable.transport_operation.Vessel.unload_cargo", false]], "unloading_consumption (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.unloading_consumption", false]], "unregister_event_observer() (mable.engine.simulationengine method)": [[1, "mable.engine.SimulationEngine.unregister_event_observer", false]], "verify_schedule() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.verify_schedule", false]], "verify_schedule_cargo() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.verify_schedule_cargo", false]], "verify_schedule_time() (mable.transportation_scheduling.schedule method)": [[1, "mable.transportation_scheduling.Schedule.verify_schedule_time", false]], "vessel (class in mable.transport_operation)": [[1, "mable.transport_operation.Vessel", false]], "vessel (mable.event_management.vesselevent property)": [[1, "mable.event_management.VesselEvent.vessel", false]], "vessel (mable.transportation_scheduling.currentstate attribute)": [[1, "mable.transportation_scheduling.CurrentState.vessel", false]], "vessel.data (class in mable.transport_operation)": [[1, "mable.transport_operation.Vessel.Data", false]], "vessel.data.schema (class in mable.transport_operation)": [[1, "mable.transport_operation.Vessel.Data.Schema", false]], "vessel_id (mable.metrics.vesselkey property)": [[1, "mable.metrics.VesselKey.vessel_id", false]], "vesselcargoevent (class in mable.event_management)": [[1, "mable.event_management.VesselCargoEvent", false]], "vesselengine (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.VesselEngine", false]], "vesselengine.data (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data", false]], "vesselengine.data.schema (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.VesselEngine.Data.Schema", false]], "vesselevent (class in mable.event_management)": [[1, "mable.event_management.VesselEvent", false]], "vesselkey (class in mable.metrics)": [[1, "mable.metrics.VesselKey", false]], "vessellocationinformationevent (class in mable.event_management)": [[1, "mable.event_management.VesselLocationInformationEvent", false]], "vesselwithengine (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine", false]], "vesselwithengine.data (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.Data", false]], "vesselwithengine.data.schema (class in mable.extensions.fuel_emissions)": [[4, "mable.extensions.fuel_emissions.VesselWithEngine.Data.Schema", false]], "world (class in mable.simulation_environment)": [[1, "mable.simulation_environment.World", false]], "world (mable.engine.simulationengine property)": [[1, "mable.engine.SimulationEngine.world", false]], "world_graph (mable.extensions.world_ports.latlongshippingnetwork property)": [[4, "mable.extensions.world_ports.LatLongShippingNetwork.world_graph", false]], "worldvessel (class in mable.extensions.world_ports)": [[4, "mable.extensions.world_ports.WorldVessel", false]], "x (mable.simulation_space.location property)": [[1, "mable.simulation_space.Location.x", false]], "y (mable.simulation_space.location property)": [[1, "mable.simulation_space.Location.y", false]]}, "objects": {"": [[1, 0, 0, "-", "mable"]], "mable": [[1, 0, 0, "-", "cargo_bidding"], [1, 0, 0, "-", "cli"], [2, 0, 0, "-", "competition"], [1, 0, 0, "-", "engine"], [1, 0, 0, "-", "event_management"], [3, 0, 0, "-", "examples"], [4, 0, 0, "-", "extensions"], [1, 0, 0, "-", "global_setup"], [1, 0, 0, "-", "instructions"], [5, 0, 0, "-", "io"], [1, 0, 0, "-", "metrics"], [1, 0, 0, "-", "observers"], [1, 0, 0, "-", "shipping_market"], [1, 0, 0, "-", "simulation_de_serialisation"], [1, 0, 0, "-", "simulation_environment"], [1, 0, 0, "-", "simulation_generation"], [1, 0, 0, "-", "simulation_space"], [1, 0, 0, "-", "transport_operation"], [1, 0, 0, "-", "transportation_scheduling"], [1, 0, 0, "-", "util"]], "mable.cargo_bidding": [[1, 1, 1, "", "MCSTCompany"], [1, 1, 1, "", "MeansCompany"], [1, 1, 1, "", "TradingCompany"]], "mable.cargo_bidding.MCSTCompany": [[1, 2, 1, "", "inform"]], "mable.cargo_bidding.MeansCompany": [[1, 2, 1, "", "inform"]], "mable.cargo_bidding.TradingCompany": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "fleet"], [1, 3, 1, "", "headquarters"], [1, 2, 1, "", "inform"], [1, 2, 1, "", "receive"]], "mable.cli": [[1, 1, 1, "", "ArgumentParserExtensions"], [1, 4, 1, "", "handle_exception"], [1, 4, 1, "", "main"], [1, 4, 1, "", "select_task"], [1, 4, 1, "", "task_metrics_overview"]], "mable.cli.ArgumentParserExtensions": [[1, 2, 1, "", "is_positive_integer"], [1, 2, 1, "", "is_valid_file"]], "mable.competition": [[2, 0, 0, "-", "generation"]], "mable.competition.generation": [[2, 1, 1, "", "AuctionCargoEvent"], [2, 1, 1, "", "AuctionClassFactory"], [2, 1, 1, "", "AuctionSimulationEngine"], [2, 1, 1, "", "CompetitionBuilder"]], "mable.competition.generation.AuctionCargoEvent": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "allocation_result"], [2, 2, 1, "", "event_action"]], "mable.competition.generation.AuctionClassFactory": [[2, 2, 1, "", "generate_engine"], [2, 2, 1, "", "generate_event_cargo"], [2, 2, 1, "", "generate_market"]], "mable.competition.generation.CompetitionBuilder": [[2, 2, 1, "", "generate_fleet"], [2, 2, 1, "", "generate_shipping_companies"], [2, 2, 1, "", "set_engines"]], "mable.engine": [[1, 1, 1, "", "CompanyHeadquarters"], [1, 1, 1, "", "EnginePrePostRunner"], [1, 1, 1, "", "SimulationEngine"], [1, 4, 1, "", "pre_run_inform_vessel_locations"]], "mable.engine.CompanyHeadquarters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "current_time"], [1, 2, 1, "", "get_network_distance"], [1, 2, 1, "", "get_network_port_or_default"]], "mable.engine.EnginePrePostRunner": [[1, 2, 1, "", "run"]], "mable.engine.SimulationEngine": [[1, 5, 1, "", "POST_RUN_CMDS"], [1, 5, 1, "", "PRE_RUN_CMDS"], [1, 2, 1, "", "__init__"], [1, 3, 1, "", "class_factory"], [1, 3, 1, "", "event_queue"], [1, 2, 1, "", "get_event_observers"], [1, 3, 1, "", "headquarters"], [1, 3, 1, "", "market"], [1, 2, 1, "", "notify_event_observer"], [1, 3, 1, "", "output_directory"], [1, 2, 1, "", "register_event_observer"], [1, 2, 1, "", "run"], [1, 3, 1, "", "shipping"], [1, 3, 1, "", "shipping_companies"], [1, 2, 1, "", "unregister_event_observer"], [1, 3, 1, "", "world"]], "mable.event_management": [[1, 1, 1, "", "ArrivalEvent"], [1, 1, 1, "", "CargoAnnouncementEvent"], [1, 1, 1, "", "CargoEvent"], [1, 1, 1, "", "CargoTransferEvent"], [1, 1, 1, "", "DurationEvent"], [1, 1, 1, "", "Event"], [1, 1, 1, "", "EventExecutionData"], [1, 1, 1, "", "EventItem"], [1, 1, 1, "", "EventObserver"], [1, 1, 1, "", "EventQueue"], [1, 1, 1, "", "IdleEvent"], [1, 1, 1, "", "TravelEvent"], [1, 1, 1, "", "VesselCargoEvent"], [1, 1, 1, "", "VesselEvent"], [1, 1, 1, "", "VesselLocationInformationEvent"]], "mable.event_management.ArrivalEvent": [[1, 2, 1, "", "distance"]], "mable.event_management.CargoAnnouncementEvent": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "event_action"]], "mable.event_management.CargoEvent": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "event_action"]], "mable.event_management.CargoTransferEvent": [[1, 2, 1, "", "distance"], [1, 2, 1, "", "event_action"]], "mable.event_management.DurationEvent": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "added_to_queue"], [1, 2, 1, "", "has_started"], [1, 2, 1, "", "performed_time"]], "mable.event_management.Event": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "added_to_queue"], [1, 2, 1, "", "event_action"], [1, 2, 1, "", "format_time"], [1, 3, 1, "", "time"]], "mable.event_management.EventExecutionData": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "action_data"], [1, 5, 1, "", "other_data"]], "mable.event_management.EventItem": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "event"], [1, 5, 1, "", "time"]], "mable.event_management.EventObserver": [[1, 2, 1, "", "notify"]], "mable.event_management.EventQueue": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "get"], [1, 2, 1, "", "put"], [1, 2, 1, "", "remove"]], "mable.event_management.IdleEvent": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "distance"], [1, 3, 1, "", "location"]], "mable.event_management.TravelEvent": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "added_to_queue"], [1, 2, 1, "", "distance"], [1, 2, 1, "", "event_action"], [1, 3, 1, "", "is_laden"], [1, 3, 1, "", "location"]], "mable.event_management.VesselCargoEvent": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "distance"], [1, 3, 1, "", "is_drop_off"], [1, 3, 1, "", "is_pickup"], [1, 3, 1, "", "location"], [1, 3, 1, "", "trade"]], "mable.event_management.VesselEvent": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "distance"], [1, 2, 1, "", "event_action"], [1, 3, 1, "", "location"], [1, 3, 1, "", "vessel"]], "mable.event_management.VesselLocationInformationEvent": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "distance"], [1, 3, 1, "", "location"]], "mable.examples": [[3, 0, 0, "-", "environment"], [3, 0, 0, "-", "fleets"]], "mable.examples.environment": [[3, 4, 1, "", "generate_simulation"], [3, 4, 1, "", "get_specification_builder"]], "mable.examples.fleets": [[3, 4, 1, "", "default_laden_balast_consumption"], [3, 4, 1, "", "example_fleet_1"], [3, 4, 1, "", "example_fleet_2"], [3, 4, 1, "", "get_fuel_mfo"]], "mable.extensions": [[4, 0, 0, "-", "cargo_distributions"], [4, 0, 0, "-", "fuel_emissions"], [4, 0, 0, "-", "world_ports"]], "mable.extensions.cargo_distributions": [[4, 1, 1, "", "DistributionClassFactory"], [4, 1, 1, "", "DistributionShipping"], [4, 1, 1, "", "DistributionSimulationBuilder"], [4, 1, 1, "", "TimeWindowArrivalEvent"]], "mable.extensions.cargo_distributions.DistributionClassFactory": [[4, 2, 1, "", "generate_event_arrival"], [4, 2, 1, "", "generate_shipping"], [4, 2, 1, "", "generate_trade"]], "mable.extensions.cargo_distributions.DistributionShipping": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "filter_out_outliers"], [4, 2, 1, "", "initialise_trades"], [4, 2, 1, "", "load_distributions"], [4, 2, 1, "", "sample_cargo_weight"], [4, 2, 1, "", "sample_cargoes_from_port_distributions"], [4, 2, 1, "", "sample_time_windows"]], "mable.extensions.cargo_distributions.DistributionSimulationBuilder": [[4, 2, 1, "", "generate_shipping"]], "mable.extensions.fuel_emissions": [[4, 1, 1, "", "ConsumptionRate"], [4, 1, 1, "", "Fuel"], [4, 1, 1, "", "FuelClassFactory"], [4, 1, 1, "", "FuelSimulationFactory"], [4, 1, 1, "", "FuelSpecsBuilder"], [4, 1, 1, "", "GlobalSetup"], [4, 1, 1, "", "VesselEngine"], [4, 1, 1, "", "VesselWithEngine"]], "mable.extensions.fuel_emissions.ConsumptionRate": [[4, 1, 1, "", "Data"], [4, 2, 1, "", "__init__"], [4, 5, 1, "", "base"], [4, 5, 1, "", "factor"], [4, 5, 1, "", "speed_power"], [4, 2, 1, "", "to_json"]], "mable.extensions.fuel_emissions.ConsumptionRate.Data": [[4, 1, 1, "", "Schema"], [4, 2, 1, "", "__init__"], [4, 5, 1, "", "base"], [4, 5, 1, "", "factor"], [4, 5, 1, "", "speed_power"]], "mable.extensions.fuel_emissions.ConsumptionRate.Data.Schema": [[4, 5, 1, "", "opts"]], "mable.extensions.fuel_emissions.Fuel": [[4, 2, 1, "", "__init__"], [4, 5, 1, "", "co2_coefficient"], [4, 5, 1, "", "energy_coefficient"], [4, 2, 1, "", "get_co2_emissions"], [4, 2, 1, "", "get_cost"], [4, 5, 1, "", "name"], [4, 5, 1, "", "price"], [4, 2, 1, "", "to_json"]], "mable.extensions.fuel_emissions.FuelClassFactory": [[4, 2, 1, "", "generate_consumption_rate"], [4, 2, 1, "", "generate_fuel"], [4, 2, 1, "", "generate_vessel"], [4, 2, 1, "", "generate_vessel_engine"]], "mable.extensions.fuel_emissions.FuelSimulationFactory": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "generate_consumption_rate"], [4, 2, 1, "", "generate_engine"], [4, 2, 1, "", "generate_fuels"], [4, 2, 1, "", "generate_vessel"], [4, 2, 1, "", "generate_vessel_engine"]], "mable.extensions.fuel_emissions.FuelSpecsBuilder": [[4, 2, 1, "", "add_fuel"]], "mable.extensions.fuel_emissions.GlobalSetup": [[4, 2, 1, "", "get_item"], [4, 2, 1, "", "get_keys"], [4, 2, 1, "", "set_item"]], "mable.extensions.fuel_emissions.VesselEngine": [[4, 1, 1, "", "Data"], [4, 2, 1, "", "__init__"], [4, 3, 1, "", "fuel"], [4, 2, 1, "", "get_ballast_consumption"], [4, 2, 1, "", "get_idle_consumption"], [4, 2, 1, "", "get_laden_consumption"], [4, 2, 1, "", "get_loading_consumption"], [4, 2, 1, "", "get_unloading_consumption"], [4, 2, 1, "", "to_json"]], "mable.extensions.fuel_emissions.VesselEngine.Data": [[4, 1, 1, "", "Schema"], [4, 2, 1, "", "__init__"], [4, 5, 1, "", "ballast_consumption_rate"], [4, 5, 1, "", "fuel"], [4, 5, 1, "", "idle_consumption"], [4, 5, 1, "", "laden_consumption_rate"], [4, 5, 1, "", "loading_consumption"], [4, 5, 1, "", "unloading_consumption"]], "mable.extensions.fuel_emissions.VesselEngine.Data.Schema": [[4, 5, 1, "", "opts"]], "mable.extensions.fuel_emissions.VesselWithEngine": [[4, 1, 1, "", "Data"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "get_ballast_consumption"], [4, 2, 1, "", "get_co2_emissions"], [4, 2, 1, "", "get_cost"], [4, 2, 1, "", "get_idle_consumption"], [4, 2, 1, "", "get_laden_consumption"], [4, 2, 1, "", "get_loading_consumption"], [4, 2, 1, "", "get_unloading_consumption"], [4, 2, 1, "", "to_json"]], "mable.extensions.fuel_emissions.VesselWithEngine.Data": [[4, 1, 1, "", "Schema"], [4, 2, 1, "", "__init__"], [4, 5, 1, "", "propelling_engine"]], "mable.extensions.fuel_emissions.VesselWithEngine.Data.Schema": [[4, 5, 1, "", "opts"]], "mable.extensions.world_ports": [[4, 1, 1, "", "LatLongFactory"], [4, 1, 1, "", "LatLongLocation"], [4, 1, 1, "", "LatLongPort"], [4, 1, 1, "", "LatLongShippingNetwork"], [4, 6, 1, "", "NoPathsException"], [4, 1, 1, "", "Route"], [4, 1, 1, "", "WorldVessel"], [4, 4, 1, "", "get_index_or_default"], [4, 4, 1, "", "get_ports"]], "mable.extensions.world_ports.LatLongFactory": [[4, 2, 1, "", "generate_location"], [4, 2, 1, "", "generate_network"], [4, 2, 1, "", "generate_port"], [4, 2, 1, "", "generate_vessel"]], "mable.extensions.world_ports.LatLongLocation": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "latitude"], [4, 3, 1, "", "longitude"]], "mable.extensions.world_ports.LatLongPort": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "latitude"], [4, 3, 1, "", "longitude"], [4, 2, 1, "", "to_json"]], "mable.extensions.world_ports.LatLongShippingNetwork": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "add_canal_to_graph"], [4, 3, 1, "", "canals_nodes"], [4, 2, 1, "", "compute_all_routes_between_points"], [4, 2, 1, "", "compute_route_length"], [4, 2, 1, "", "create_canal_nodes"], [4, 2, 1, "", "create_world_canal_scenarios"], [4, 2, 1, "", "find_closest_node"], [4, 2, 1, "", "generate_route_graph_from_file"], [4, 2, 1, "", "get_all_routes_between_points"], [4, 2, 1, "", "get_all_stored_routes_between_points"], [4, 2, 1, "", "get_distance"], [4, 2, 1, "", "get_journey_location"], [4, 2, 1, "", "get_long_lat_dist"], [4, 2, 1, "", "get_shortest_grid_route_between_points"], [4, 2, 1, "", "get_shortest_path_between_points"], [4, 2, 1, "", "get_shortest_route_between_points"], [4, 2, 1, "", "remove_canals_from_graph"], [4, 3, 1, "", "scenarios"], [4, 2, 1, "", "smooth_route"], [4, 3, 1, "", "world_graph"]], "mable.extensions.world_ports.Route": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "as_tuple"]], "mable.extensions.world_ports.WorldVessel": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "get_travel_time"]], "mable.global_setup": [[1, 4, 1, "", "done"]], "mable.instructions": [[1, 1, 1, "", "Specifications"]], "mable.instructions.Specifications": [[1, 1, 1, "", "Builder"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "get"], [1, 2, 1, "", "init_from_json_string"]], "mable.instructions.Specifications.Builder": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_cargo_distribution"], [1, 2, 1, "", "add_cargo_generation"], [1, 2, 1, "", "add_company"], [1, 2, 1, "", "add_shipping_network"], [1, 2, 1, "", "build"]], "mable.io": [[5, 0, 0, "-", "logging_util"]], "mable.io.logging_util": [[5, 1, 1, "", "LoguruHandler"], [5, 4, 1, "", "let_loguru_handle_logging"]], "mable.io.logging_util.LoguruHandler": [[5, 2, 1, "", "emit"]], "mable.metrics": [[1, 1, 1, "", "GlobalMetricsCollector"], [1, 1, 1, "", "MetricDict"], [1, 1, 1, "", "MetricsCollector"], [1, 1, 1, "", "RegionalMetricsCollector"], [1, 1, 1, "", "VesselKey"]], "mable.metrics.GlobalMetricsCollector": [[1, 2, 1, "", "add_co2_emissions"], [1, 2, 1, "", "add_cost"], [1, 2, 1, "", "add_fuel_consumption"], [1, 2, 1, "", "add_route_point"]], "mable.metrics.MetricsCollector": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_company_numeric_metric"], [1, 2, 1, "", "add_dual_numeric_metric"], [1, 2, 1, "", "add_global_company_list_metric"], [1, 2, 1, "", "get_company_id"], [1, 2, 1, "", "get_vessel_id"], [1, 2, 1, "", "to_json"]], "mable.metrics.RegionalMetricsCollector": [[1, 2, 1, "", "add_fuel_consumption"]], "mable.metrics.VesselKey": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "company_id"], [1, 3, 1, "", "key_tuple"], [1, 3, 1, "", "vessel_id"]], "mable.observers": [[1, 1, 1, "", "AuctionMetricsObserver"], [1, 1, 1, "", "AuctionOutcomeObserver"], [1, 1, 1, "", "EventFuelPrintObserver"], [1, 1, 1, "", "LogRunner"], [1, 1, 1, "", "MetricsObserver"]], "mable.observers.AuctionMetricsObserver": [[1, 2, 1, "", "notify"]], "mable.observers.AuctionOutcomeObserver": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "notify"]], "mable.observers.EventFuelPrintObserver": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "notify"]], "mable.observers.LogRunner": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "run"]], "mable.observers.MetricsObserver": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_consumption"], [1, 3, 1, "", "metrics"], [1, 2, 1, "", "notify"]], "mable.shipping_market": [[1, 1, 1, "", "AuctionLedger"], [1, 1, 1, "", "AuctionMarket"], [1, 1, 1, "", "Contract"], [1, 1, 1, "", "Market"], [1, 1, 1, "", "Shipping"], [1, 1, 1, "", "SimpleMarket"], [1, 1, 1, "", "StaticShipping"], [1, 1, 1, "", "TimeWindowTrade"], [1, 1, 1, "", "Trade"], [1, 1, 1, "", "TradeStatus"]], "mable.shipping_market.AuctionLedger": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "get_trades_for_company_copy"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "sanitised_ledger"]], "mable.shipping_market.AuctionMarket": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "distribute_trades"], [1, 2, 1, "", "inform_future_trades"]], "mable.shipping_market.Contract": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "copy"], [1, 5, 1, "", "payment"], [1, 2, 1, "", "to_json"], [1, 5, 1, "", "trade"]], "mable.shipping_market.Market": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "distribute_trades"]], "mable.shipping_market.Shipping": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_to_all_trades"], [1, 2, 1, "", "get_trades"], [1, 2, 1, "", "get_trading_times"], [1, 2, 1, "", "initialise_trades"], [1, 3, 1, "", "trade_occurrence_frequency"]], "mable.shipping_market.SimpleMarket": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "distribute_trades"]], "mable.shipping_market.StaticShipping": [[1, 2, 1, "", "initialise_trades"]], "mable.shipping_market.TimeWindowTrade": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "clean_window"], [1, 3, 1, "", "earliest_drop_off"], [1, 3, 1, "", "earliest_drop_off_clean"], [1, 3, 1, "", "earliest_pickup"], [1, 3, 1, "", "earliest_pickup_clean"], [1, 3, 1, "", "latest_drop_off"], [1, 3, 1, "", "latest_drop_off_clean"], [1, 3, 1, "", "latest_pickup"], [1, 3, 1, "", "latest_pickup_clean"], [1, 5, 1, "", "time_window"]], "mable.shipping_market.Trade": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "amount"], [1, 5, 1, "", "cargo_type"], [1, 5, 1, "", "destination_port"], [1, 5, 1, "", "origin_port"], [1, 5, 1, "", "probability"], [1, 5, 1, "", "status"], [1, 5, 1, "", "time"], [1, 2, 1, "", "to_json"]], "mable.shipping_market.TradeStatus": [[1, 5, 1, "", "ACCEPTED"], [1, 5, 1, "", "NOT_REALISED"], [1, 5, 1, "", "REJECTED"], [1, 5, 1, "", "UNKNOWN"]], "mable.simulation_de_serialisation": [[1, 1, 1, "", "DataClass"], [1, 1, 1, "", "DataProtocol"], [1, 1, 1, "", "DataSchema"], [1, 1, 1, "", "DynamicNestedField"], [1, 1, 1, "", "SchemaProtocol"], [1, 1, 1, "", "SimulationSpecification"]], "mable.simulation_de_serialisation.DataClass": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "current_class"]], "mable.simulation_de_serialisation.DataProtocol": [[1, 5, 1, "", "Data"], [1, 2, 1, "", "__init__"]], "mable.simulation_de_serialisation.DataSchema": [[1, 5, 1, "", "opts"]], "mable.simulation_de_serialisation.SchemaProtocol": [[1, 5, 1, "", "Schema"], [1, 2, 1, "", "__init__"]], "mable.simulation_de_serialisation.SimulationSpecification": [[1, 2, 1, "", "get"], [1, 2, 1, "", "register"], [1, 2, 1, "", "register_by_type_name"]], "mable.simulation_environment": [[1, 1, 1, "", "SimulationEngineAware"], [1, 1, 1, "", "World"]], "mable.simulation_environment.SimulationEngineAware": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "set_engine"]], "mable.simulation_environment.World": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "current_time"], [1, 2, 1, "", "do_events_exists"], [1, 3, 1, "", "event_queue"], [1, 2, 1, "", "get_next_event"], [1, 3, 1, "", "network"], [1, 3, 1, "", "random"], [1, 2, 1, "", "set_engine"]], "mable.simulation_generation": [[1, 1, 1, "", "ClassFactory"], [1, 1, 1, "", "SimulationBuilder"]], "mable.simulation_generation.ClassFactory": [[1, 2, 1, "", "generate_cargo_capacity"], [1, 2, 1, "", "generate_company"], [1, 2, 1, "", "generate_engine"], [1, 2, 1, "", "generate_event_arrival"], [1, 2, 1, "", "generate_event_cargo"], [1, 2, 1, "", "generate_event_cargo_transfer"], [1, 2, 1, "", "generate_event_idling"], [1, 2, 1, "", "generate_event_location_info"], [1, 2, 1, "", "generate_event_queue"], [1, 2, 1, "", "generate_event_travel"], [1, 2, 1, "", "generate_location"], [1, 2, 1, "", "generate_market"], [1, 2, 1, "", "generate_network"], [1, 2, 1, "", "generate_port"], [1, 2, 1, "", "generate_random"], [1, 2, 1, "", "generate_shipping"], [1, 2, 1, "", "generate_trade"], [1, 2, 1, "", "generate_vessel"], [1, 2, 1, "", "generate_world"]], "mable.simulation_generation.SimulationBuilder": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "generate_engine"], [1, 2, 1, "", "generate_fleet"], [1, 2, 1, "", "generate_market"], [1, 2, 1, "", "generate_network"], [1, 2, 1, "", "generate_random"], [1, 2, 1, "", "generate_shipping"], [1, 2, 1, "", "generate_shipping_companies"], [1, 2, 1, "", "generate_vessel"], [1, 2, 1, "", "generate_world"], [1, 2, 1, "", "set_engines"]], "mable.simulation_space": [[1, 1, 1, "", "Location"], [1, 1, 1, "", "NetworkWithPortDict"], [1, 1, 1, "", "OnJourney"], [1, 1, 1, "", "Port"], [1, 1, 1, "", "ShippingNetwork"], [1, 1, 1, "", "UnitShippingNetwork"]], "mable.simulation_space.Location": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "name"], [1, 3, 1, "", "x"], [1, 3, 1, "", "y"]], "mable.simulation_space.NetworkWithPortDict": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "get_port"], [1, 2, 1, "", "get_port_or_default"]], "mable.simulation_space.OnJourney": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "destination"], [1, 5, 1, "", "origin"], [1, 5, 1, "", "start_time"]], "mable.simulation_space.Port": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "to_json"]], "mable.simulation_space.ShippingNetwork": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "get_distance"], [1, 2, 1, "", "get_journey_location"], [1, 2, 1, "", "get_port"], [1, 2, 1, "", "get_port_or_default"], [1, 2, 1, "", "get_vessel_location"]], "mable.simulation_space.UnitShippingNetwork": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "get_distance"], [1, 2, 1, "", "get_journey_location"]], "mable.transport_operation": [[1, 1, 1, "", "Bid"], [1, 1, 1, "", "CargoCapacity"], [1, 1, 1, "", "CargoContainer"], [1, 1, 1, "", "CargoHold"], [1, 1, 1, "", "CargoHoldSchema"], [1, 1, 1, "", "ScheduleProposal"], [1, 1, 1, "", "ShippingCompany"], [1, 1, 1, "", "SimpleCompany"], [1, 1, 1, "", "SimpleVessel"], [1, 1, 1, "", "Vessel"]], "mable.transport_operation.Bid": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "amount"], [1, 5, 1, "", "company"], [1, 5, 1, "", "trade"]], "mable.transport_operation.CargoCapacity": [[1, 1, 1, "", "Data"], [1, 2, 1, "", "__init__"], [1, 5, 1, "", "capacity"], [1, 5, 1, "", "cargo_type"], [1, 5, 1, "", "loading_rate"], [1, 2, 1, "", "to_json"]], "mable.transport_operation.CargoCapacity.Data": [[1, 1, 1, "", "Schema"], [1, 2, 1, "", "__init__"], [1, 5, 1, "", "capacity"], [1, 5, 1, "", "cargo_type"], [1, 5, 1, "", "loading_rate"]], "mable.transport_operation.CargoCapacity.Data.Schema": [[1, 5, 1, "", "opts"]], "mable.transport_operation.CargoContainer": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "amount"], [1, 3, 1, "", "capacity"], [1, 3, 1, "", "loading_rate"]], "mable.transport_operation.CargoHold": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "available_cargo_types"], [1, 2, 1, "", "get_capacity"], [1, 2, 1, "", "get_current_load"], [1, 2, 1, "", "get_loading_rate"], [1, 2, 1, "", "is_empty"], [1, 2, 1, "", "load_cargo"], [1, 2, 1, "", "unload_cargo"]], "mable.transport_operation.CargoHoldSchema": [[1, 5, 1, "", "opts"]], "mable.transport_operation.ScheduleProposal": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "costs"], [1, 5, 1, "", "scheduled_trades"], [1, 5, 1, "", "schedules"]], "mable.transport_operation.ShippingCompany": [[1, 1, 1, "", "Data"], [1, 2, 1, "", "__init__"], [1, 3, 1, "", "fleet"], [1, 2, 1, "", "get_class"], [1, 2, 1, "", "inform"], [1, 3, 1, "", "name"], [1, 2, 1, "", "pre_inform"], [1, 2, 1, "", "receive"], [1, 2, 1, "", "set_engine"]], "mable.transport_operation.ShippingCompany.Data": [[1, 1, 1, "", "Schema"], [1, 2, 1, "", "__init__"], [1, 5, 1, "", "fleet"], [1, 5, 1, "", "name"]], "mable.transport_operation.ShippingCompany.Data.Schema": [[1, 5, 1, "", "opts"]], "mable.transport_operation.SimpleCompany": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "apply_schedules"], [1, 2, 1, "", "get_arrival_time"], [1, 2, 1, "", "inform"], [1, 2, 1, "", "pre_inform"], [1, 2, 1, "", "propose_schedules"], [1, 2, 1, "", "receive"]], "mable.transport_operation.SimpleVessel": [[1, 1, 1, "", "Data"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "get_loading_time"], [1, 2, 1, "", "get_travel_time"], [1, 3, 1, "", "speed"], [1, 2, 1, "", "to_json"]], "mable.transport_operation.SimpleVessel.Data": [[1, 1, 1, "", "Schema"], [1, 2, 1, "", "__init__"], [1, 5, 1, "", "speed"]], "mable.transport_operation.SimpleVessel.Data.Schema": [[1, 5, 1, "", "opts"]], "mable.transport_operation.Vessel": [[1, 1, 1, "", "Data"], [1, 2, 1, "", "__init__"], [1, 3, 1, "", "capacities_and_loading_rates"], [1, 2, 1, "", "capacity"], [1, 2, 1, "", "copy_hold"], [1, 2, 1, "", "current_load"], [1, 2, 1, "", "event_occurrence"], [1, 2, 1, "", "get_loading_time"], [1, 2, 1, "", "get_travel_time"], [1, 2, 1, "", "has_any_load"], [1, 2, 1, "", "has_next_event"], [1, 3, 1, "", "journey_log"], [1, 2, 1, "", "load_cargo"], [1, 2, 1, "", "loadable_cargo_types"], [1, 3, 1, "", "location"], [1, 2, 1, "", "log_journey_log_event"], [1, 3, 1, "", "name"], [1, 3, 1, "", "schedule"], [1, 2, 1, "", "set_engine"], [1, 2, 1, "", "start_next_event"], [1, 2, 1, "", "unload_cargo"]], "mable.transport_operation.Vessel.Data": [[1, 1, 1, "", "Schema"], [1, 2, 1, "", "__init__"], [1, 5, 1, "", "capacities_and_loading_rates"], [1, 5, 1, "", "keep_journey_log"], [1, 5, 1, "", "location"], [1, 5, 1, "", "name"]], "mable.transport_operation.Vessel.Data.Schema": [[1, 5, 1, "", "opts"]], "mable.transportation_scheduling": [[1, 1, 1, "", "CurrentState"], [1, 1, 1, "", "Schedule"], [1, 1, 1, "", "TransportationSourceDestinationIndicator"], [1, 1, 1, "", "TransportationStartFinishIndicator"]], "mable.transportation_scheduling.CurrentState": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "current_cargo_hold"], [1, 5, 1, "", "current_location"], [1, 5, 1, "", "current_time"], [1, 5, 1, "", "engine"], [1, 5, 1, "", "is_valid"], [1, 5, 1, "", "vessel"]], "mable.transportation_scheduling.Schedule": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_relocation"], [1, 2, 1, "", "add_transportation"], [1, 2, 1, "", "completion_time"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "get"], [1, 2, 1, "", "get_insertion_points"], [1, 2, 1, "", "next"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "verify_schedule"], [1, 2, 1, "", "verify_schedule_cargo"], [1, 2, 1, "", "verify_schedule_time"]], "mable.transportation_scheduling.TransportationSourceDestinationIndicator": [[1, 5, 1, "", "DROP_OFF"], [1, 5, 1, "", "PICK_UP"]], "mable.transportation_scheduling.TransportationStartFinishIndicator": [[1, 5, 1, "", "FINISH"], [1, 5, 1, "", "START"]], "mable.util": [[1, 1, 1, "", "JsonAble"], [1, 1, 1, "", "JsonAbleEncoder"]], "mable.util.JsonAble": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "to_json"]], "mable.util.JsonAbleEncoder": [[1, 2, 1, "", "default"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception"}, "terms": {"": [1, 2, 4], "0": [1, 4, 5], "1": [1, 4], "11": 7, "19": [], "2": 1, "20": 5, "2014": [], "2015": [], "2024": 7, "3": [1, 7], "4": 1, "5": 4, "5yk8j2": [], "7": [], "A": [0, 1, 2, 3, 4, 7], "AND": 7, "AS": 7, "As": 1, "At": 1, "BE": 7, "BUT": 7, "But": [1, 2], "By": 1, "FOR": 7, "For": [1, 4], "IN": 7, "If": [1, 3, 4], "In": [], "It": 4, "NO": 7, "NOT": 7, "No": 1, "Not": 1, "OF": 7, "OR": 7, "On": 1, "One": 1, "Or": 7, "THE": 7, "TO": 7, "The": [1, 2, 3, 4], "To": 4, "WITH": 7, "__add__": 1, "__dict__": 1, "__iadd__": 1, "__init__": [1, 2, 4, 6], "__name__": 1, "abc": 1, "aberdeen": 3, "about": 1, "abov": [], "abstract": 1, "abstractset": [1, 4], "ac": [], "accept": [1, 6], "across": 4, "action": 7, "action_d": 1, "action_data": [1, 6], "activate_stats_collect": [], "actual": [1, 4, 5], "ad": 1, "add": [1, 4], "add_canal_to_graph": [1, 4], "add_cargo_distribut": 1, "add_cargo_gener": 1, "add_co2_emiss": [1, 6], "add_compani": 1, "add_company_numeric_metr": [1, 6], "add_cost": [1, 6], "add_dual_numeric_metr": [1, 6], "add_fuel": [1, 4], "add_fuel_consumpt": [1, 6], "add_global_company_list_metr": [1, 6], "add_reloc": [1, 6], "add_route_point": [1, 6], "add_shipping_network": 1, "add_to_all_trad": [1, 6], "add_transport": [1, 6], "added_to_queu": [1, 6], "addit": 1, "additional_metadata": 1, "address": [], "adjust": 4, "affect": [1, 4], "africa": 4, "after": 1, "agulha": 4, "algorithm": 4, "all": [1, 4, 7], "alloc": [1, 4], "allocation_result": [1, 2], "allow": [0, 1, 4], "allow_nan": 1, "allow_non": 1, "allow_url_fopen": [], "alreadi": [1, 4], "also": [1, 4], "altern": [], "alwai": 1, "among": 1, "amount": [1, 4, 6], "an": [0, 1, 2, 3, 4, 7], "ani": [1, 4, 7], "announc": 1, "anyth": 1, "app": 4, "appear": [1, 2], "appli": 1, "apply_schedul": [1, 6], "appreci": [], "appropri": 4, "ar": [1, 2, 4], "archiv": 3, "arg": [1, 2, 4], "argument": [1, 2], "argumentpars": 1, "argumentparserextens": [1, 6], "aris": 7, "aritim": 0, "around": 1, "arrai": 4, "arriv": [1, 4], "arrivalev": [1, 4, 6], "as_tupl": [1, 4], "ased": 0, "associ": [1, 4], "assum": [1, 4], "attempt": 1, "attr": [1, 4], "attribut": 1, "auction": [1, 2, 3], "auction_ledg": 1, "auctioncargoev": [1, 2], "auctionclassfactori": [1, 2], "auctionledg": [1, 2, 6], "auctionmarket": [1, 6], "auctionmetricsobserv": [1, 6], "auctionoutcomeobserv": [1, 6], "auctionsimulationengin": [1, 2], "author": 7, "autoload": [], "avail": [1, 2], "available_cargo_typ": [1, 6], "averag": 4, "b": 0, "balast": 3, "ballast": [1, 4], "ballast_consumption_r": 4, "base": [1, 2, 4, 5], "bash": [], "basi": 1, "becom": [1, 2], "been": [3, 4], "befor": [1, 4], "beforehand": 1, "being": [1, 4], "belong": 1, "besid": 1, "best": [], "between": [1, 4], "beyond": 1, "bid": [1, 6], "binari": 4, "block": 1, "bool": [1, 3, 4], "boolean": 4, "boundari": 1, "branch": [], "buermann": 7, "build": 1, "builder": [1, 3, 4, 6], "burn": 4, "c": 7, "calcul": [1, 4], "calculate_consumpt": [1, 6], "calculate_penalti": [], "call": [1, 4], "callabl": 1, "can": [1, 2, 4], "canal": 4, "canal_nam": 4, "canal_nod": 4, "canals_nod": [1, 4], "capabl": 4, "capac": [1, 4, 6], "capacities_and_loading_r": [1, 4, 6], "cape": 4, "cargo": [1, 2, 4], "cargo_available_tim": 1, "cargo_bid": 6, "cargo_distribut": [1, 6], "cargo_gener": [1, 2], "cargo_market": [1, 2], "cargo_typ": [1, 6], "cargo_weight": 4, "cargo_weight_dict": 4, "cargo_weight_distribut": 4, "cargoannouncementev": [1, 6], "cargocapac": [1, 4, 6], "cargocontain": [1, 6], "cargoev": [1, 2, 6], "cargohold": [1, 6], "cargoholdschema": [1, 6], "cargotransferev": [1, 6], "case": 1, "cd": [], "centr": 1, "chang": [1, 4], "charg": [], "check": 1, "check_circular": 1, "checkout": [], "claim": 7, "class": [1, 2, 4, 5], "class_factori": [1, 2, 4, 6], "classfactori": [1, 2, 4, 6], "classmethod": [1, 4], "clean": 1, "clean_window": [1, 6], "clear": 1, "cli": 6, "client": [], "clone": [], "closest": 4, "cmd": 1, "co2_coeffici": [1, 4], "co_2": 4, "code": [], "coeffici": 4, "collect": [1, 2], "collector": 1, "column": 4, "com": [], "combin": 1, "come": 1, "command": 1, "commun": [], "compani": [1, 2, 6], "company_id": [1, 6], "company_metr": 1, "companyheadquart": [1, 6], "competit": [1, 6], "competitionbuild": [1, 2], "compil": 1, "complet": 1, "completion_tim": [1, 6], "compon": 1, "component_cl": 1, "compos": [], "compound": 1, "compress": 4, "comput": [1, 4], "compute_all_routes_between_point": [1, 4], "compute_route_length": [1, 4], "concaten": 1, "concern": [], "concurr": [], "condit": [], "condition": [], "conduct": 1, "configur": [], "conjunct": 1, "connect": 7, "consid": 4, "consist": [1, 4], "consol": [], "constitut": [1, 2], "constructor": [1, 2, 4], "consum": 4, "consumpt": [1, 3, 4], "consumptionr": [1, 3, 4], "contain": [1, 4], "content": 6, "context": [1, 4], "contract": [1, 6, 7], "contribut": [], "conveni": 1, "convert": 4, "coordin": [1, 4], "copi": [1, 6], "copy_hold": [1, 6], "copyright": 7, "correct": [], "correspond": 1, "cost": [1, 4, 6], "could": 1, "creat": [1, 4], "create_both_ids_if_not_exist": 1, "create_canal_nod": [1, 4], "create_id_if_not_exist": 1, "create_world_canal_scenario": [1, 4], "creation": [1, 4], "cross": 1, "csv": 4, "curl": [], "current": [1, 4], "current_cargo_hold": [1, 6], "current_class": [1, 4, 6], "current_load": [1, 6], "current_loc": [1, 6], "current_tim": [1, 4, 6], "currentst": [1, 6], "curv": [3, 4], "cycl": 1, "d": 1, "dai": [1, 4], "damag": 7, "data": [1, 3, 4, 6], "data_kei": 1, "dataclass": [1, 4, 6], "datafram": 4, "dataprotocol": [1, 4, 6], "dataschema": [1, 4, 6], "deal": [1, 7], "decim": [1, 4], "declar": [], "deep": 1, "def": 1, "default": [1, 2, 4, 6], "default_laden_balast_consumpt": [1, 3], "defin": [], "degre": 4, "deliv": 4, "deliveri": [1, 4], "delivery_time_window": 4, "demand": 4, "depend": 4, "deploi": [], "descend": 1, "deseri": 1, "deserialis": 1, "desir": 1, "destin": [1, 6], "destination_port": [1, 6], "detail": [1, 3], "determin": [1, 4], "dev": 4, "develop": [], "deviat": 4, "df": 4, "dict": [1, 4], "dictionari": [1, 4], "dif": 1, "differ": 4, "direct": 4, "directli": 1, "directori": [1, 3], "disclos": [], "discov": [], "distanc": [1, 4, 6], "distribut": [1, 2, 4], "distribute_trad": [1, 6], "distributionclassfactori": [1, 4], "distributionship": [1, 4], "distributionsimulationbuild": [1, 4], "do": [1, 5], "do_events_exist": [1, 6], "dock": 3, "doctor": [], "document": [], "doe": [1, 3], "done": [1, 6], "dougla": 4, "dowl": [], "download": 7, "drop": 1, "drop_off": [1, 6], "dump": 1, "dump_default": 1, "dump_onli": [1, 4], "durat": [1, 4], "durationev": [1, 6], "dure": [], "dynamicnestedfield": [1, 6], "e": [0, 1, 3, 4], "each": [1, 4], "earli": 1, "earliest": 1, "earliest_drop_off": [1, 6], "earliest_drop_off_clean": [1, 6], "earliest_pickup": [1, 6], "earliest_pickup_clean": [1, 6], "earth": 4, "easi": 1, "edg": 4, "either": 1, "element": 4, "email": [], "emiss": [1, 4], "emit": [1, 4, 5], "empti": [1, 4], "enabl": [], "encod": [1, 4], "end": [1, 4], "end_lat": 4, "end_loc": 4, "end_long": 4, "end_nod": 4, "end_port": 4, "end_t": 4, "endpoint": 1, "energi": 4, "energy_coeffici": [1, 4], "engin": [2, 4, 6], "engineprepostrunn": [1, 6], "ensur": 1, "ensure_ascii": 1, "entir": 1, "entireti": 1, "entranc": 4, "entri": 1, "enum": 1, "environ": [1, 6], "environment_files_path": 3, "epsilon": 4, "error": [1, 7], "error_messag": 1, "etc": [1, 2], "euclidean": 1, "euclidian": 1, "event": [1, 2, 4, 6, 7], "event_": 1, "event_act": [1, 2, 6], "event_manag": [2, 4, 6], "event_occurr": [1, 6], "event_queu": [1, 6], "eventexecutiondata": [1, 6], "eventfuelprintobserv": [1, 6], "eventitem": [1, 6], "eventobserv": [1, 6], "eventqueu": [1, 6], "everi": [], "everyon": [], "exampl": [1, 6], "example_fleet_1": [1, 3], "example_fleet_2": [1, 3], "exc_traceback": 1, "exc_typ": 1, "exc_valu": 1, "except": [1, 4], "exchang": 1, "exclud": [1, 4], "execut": 1, "exist": [1, 3, 4], "exit": 1, "expect": 1, "export": 1, "export_stat": [], "express": 7, "extend": [1, 4], "extens": [1, 6], "factor": [1, 4], "factori": [1, 2, 4], "fals": [1, 3], "fast": [], "featur": [], "few": [], "ff": [], "field": 1, "file": [1, 3, 4], "filenam": 1, "filenotfounderror": 3, "filter_out_outli": [1, 4], "find": [1, 4], "find_closest_nod": [1, 4], "finish": [1, 4, 6], "first": [1, 2, 4], "fit": [1, 7], "fix": 1, "flag": 4, "flat": 4, "fleet": [1, 2, 6], "flexibl": 1, "float": [1, 2, 4], "follow": [], "form": 1, "format": [1, 4], "format_tim": [1, 6], "forward": 5, "found": 4, "four": 1, "framework": 1, "free": [], "frequenc": 4, "frequency_distribut": 4, "from": [1, 2, 3, 4, 7], "fuel": [1, 3, 4], "fuel_emiss": [1, 6], "fuelclassfactori": [1, 2, 4], "fuelsimulationfactori": [1, 2, 4], "fuelspecsbuild": [1, 3, 4], "full": 1, "fulli": [], "func": [1, 4], "function": 1, "furnish": [], "further": [1, 2], "futur": 1, "g": 1, "gener": [1, 3, 4, 6], "generate_": 1, "generate_cargo_capac": [1, 6], "generate_compani": [1, 2, 6], "generate_consumption_r": [1, 4], "generate_engin": [1, 2, 4, 6], "generate_event_arriv": [1, 4, 6], "generate_event_cargo": [1, 2, 6], "generate_event_cargo_transf": [1, 6], "generate_event_idl": [1, 6], "generate_event_location_info": [1, 6], "generate_event_queu": [1, 6], "generate_event_travel": [1, 6], "generate_fleet": [1, 2, 6], "generate_fuel": [1, 4], "generate_loc": [1, 4, 6], "generate_market": [1, 2, 6], "generate_network": [1, 4, 6], "generate_port": [1, 4, 6], "generate_random": [1, 6], "generate_route_graph_from_fil": [1, 4], "generate_ship": [1, 4, 6], "generate_shipping_compani": [1, 2, 6], "generate_simul": [1, 3], "generate_trad": [1, 4, 6], "generate_vessel": [1, 2, 4, 6], "generate_vessel_engin": [1, 4], "generate_world": [1, 6], "gent": 0, "get": [1, 4, 6], "get_all_routes_between_point": [1, 4], "get_all_stored_routes_between_point": [1, 4], "get_arrival_tim": [1, 6], "get_ballast_consumpt": [1, 4], "get_capac": [1, 6], "get_class": [1, 6], "get_co2_emiss": [1, 4], "get_company_id": [1, 6], "get_cost": [1, 4], "get_current_load": [1, 6], "get_dist": [1, 4, 6], "get_event_observ": [1, 6], "get_fuel_mfo": [1, 3], "get_idle_consumpt": [1, 4], "get_index_or_default": [1, 4], "get_insertion_point": [1, 6], "get_item": [1, 4], "get_journey_loc": [1, 4, 6], "get_kei": [1, 4], "get_laden_consumpt": [1, 4], "get_loading_consumpt": [1, 4], "get_loading_r": [1, 6], "get_loading_tim": [1, 6], "get_long_lat_dist": [1, 4], "get_network_dist": [1, 6], "get_network_port_or_default": [1, 6], "get_next_ev": [1, 6], "get_port": [1, 4, 6], "get_port_or_default": [1, 6], "get_shortest_grid_route_between_point": [1, 4], "get_shortest_path_between_point": [1, 4], "get_shortest_route_between_point": [1, 4], "get_specification_build": [1, 3], "get_trad": [1, 6], "get_trades_for_company_copi": [1, 6], "get_trading_tim": [1, 6], "get_travel_tim": [1, 4, 6], "get_unloading_consumpt": [1, 4], "get_vessel_id": [1, 6], "get_vessel_loc": [1, 6], "getcompos": [], "git": [], "github": [], "give": 1, "given": 4, "global": 1, "global_setup": 6, "globalmetricscollector": [1, 6], "globalsetup": [1, 4], "go": 1, "good": 4, "grant": [], "graph": 4, "graph_fil": 4, "graphx": 4, "greater": [], "grid": 4, "guid": [], "guzzl": [], "guzzlehttp": [], "guzzlephp": [], "h": 4, "ha": [1, 3, 4], "handle_except": [1, 6], "handler": 5, "happen": 1, "has_any_load": [1, 6], "has_next_ev": [1, 6], "has_start": [1, 6], "hashabl": 1, "hasn": 1, "have": [1, 4], "haversin": 4, "headquart": [1, 6], "help": 1, "helper": 1, "herebi": [], "highest": [], "hold": 1, "holder": 7, "hope": 4, "horn": 4, "hotfix": [], "hour": [1, 4], "how": 1, "howev": 1, "http": [], "i": [0, 1, 3, 4, 5, 7], "id": 1, "idl": [1, 4], "idle_consumpt": 4, "idleev": [1, 6], "idx": 1, "ignor": 4, "implement": [4, 5], "impli": 7, "import": 1, "includ": [1, 2, 4, 7], "indent": 1, "index": [1, 4], "indic": [1, 4], "individu": 4, "inf": [1, 4], "infin": 4, "infinit": 1, "info": [1, 2], "inform": [1, 2, 4, 6], "inform_auction_outcom": [], "inform_future_trad": [1, 6], "ini": [], "init_from_json_str": [1, 6], "initi": 1, "initialis": [1, 4], "initialise_trad": [1, 4, 6], "inner": 1, "insert": 1, "instal": 0, "instanc": [1, 3, 4], "instruct": [2, 4, 6], "int": [1, 4], "integ": 1, "integr": [], "intend": [1, 5], "intenum": 1, "interact": 1, "interest": [1, 4], "interfac": 1, "intern": 0, "internaltradingcompani": [], "interv": 4, "invalid": 1, "involv": 1, "io": [1, 6], "is_drop_off": [1, 6], "is_empti": [1, 6], "is_laden": [1, 6], "is_pickup": [1, 4, 6], "is_positive_integ": [1, 6], "is_valid": [1, 6], "is_valid_fil": [1, 6], "island": 4, "issu": [], "iter": 1, "its": 1, "itself": 1, "j": [], "jan": 7, "journei": [1, 4], "journey_log": [1, 6], "json": [1, 4], "jsonabl": [1, 4, 6], "jsonableencod": [1, 6], "jsonencod": 1, "jupyt": [], "keep": [1, 4], "keep_journey_log": [1, 4], "kei": [1, 4, 6], "key_tupl": [1, 6], "keyboardinterrupt": 1, "keyerror": 1, "keyword": [1, 2, 4], "kind": 7, "kn": 4, "knot": 4, "know": 1, "known": [1, 2], "kwarg": [1, 2, 4], "l": 0, "laden": [1, 3, 4], "laden_consumption_r": 4, "last": 1, "lat_": 4, "lat_a": 4, "lat_b": 4, "late": 1, "later": 1, "latest": 1, "latest_drop_off": [1, 6], "latest_drop_off_clean": [1, 6], "latest_pickup": [1, 6], "latest_pickup_clean": [1, 6], "latitud": [1, 4], "latlongfactori": [1, 4], "latlongloc": [1, 4], "latlongport": [1, 4], "latlongshippingnetwork": [1, 4], "lean": [], "least": 1, "ledger": [1, 2], "left": 1, "length": 4, "let_loguru_handle_log": [1, 5], "level": [1, 5], "lewi": 4, "liabil": 7, "liabl": 7, "librari": [], "licens": 0, "like": [1, 2], "limit": [1, 7], "list": [1, 2, 3, 4], "ll": [], "lng_a": 4, "lng_b": 4, "load": [1, 4], "load_cargo": [1, 6], "load_default": 1, "load_distribut": [1, 4], "load_onli": [1, 4], "loadabl": 1, "loadable_cargo_typ": [1, 6], "loading_consumpt": 4, "loading_r": [1, 6], "local": 7, "locat": [1, 3, 4, 6], "location_befor": [], "location_drop_off": 1, "location_end": 1, "location_on": [1, 4], "location_pick_up": 1, "location_start": 1, "location_two": [1, 4], "log": [1, 2, 3, 4, 5], "log_entri": 1, "log_journey_log_ev": [1, 6], "logger": [1, 5], "logging_util": [1, 6], "logrunn": [1, 6], "loguru": 5, "loguruhandl": [1, 5], "long": 1, "long_": 4, "longer": [], "longitud": [1, 4], "look": 4, "loop": 1, "lost": 1, "m": [0, 7], "mabl": 7, "made": 1, "mai": 4, "main": [1, 6], "major": [], "make": [1, 2], "makefil": [], "manag": 1, "mani": [1, 4], "manner": [], "map": 1, "maritim": 0, "maritime_simul": [1, 2, 4], "market": [1, 2, 4, 6], "marshmallow": [1, 4], "master": [], "match": 4, "math": [1, 4], "mcstcompani": [1, 6], "mean": [1, 4], "mean_cargo_weight_std": 4, "mean_transition_std": 4, "meanscompani": [1, 6], "meant": [], "merchant": 7, "merg": [], "messag": 1, "metadata": 1, "method": [1, 4], "metric": 6, "metricdict": [1, 6], "metricscollector": [1, 6], "metricsobserv": [1, 6], "mfo": 3, "michael": [], "might": 7, "mile": 4, "min_nod": 4, "mind": [], "minimum": [], "minut": 4, "miss": [1, 4], "mit": [], "modifi": [], "modul": 6, "more": [1, 4], "most": [1, 2], "move": 4, "mt": 4, "mtdowl": [], "mulat": 0, "must": 1, "name": [1, 4, 6], "nautic": 4, "navig": 4, "necessari": 1, "need": [1, 4], "neg": 1, "nest": 1, "network": [1, 4, 6], "networkwithportdict": [1, 4, 6], "networkx": 4, "new": 1, "newer": 7, "next": [1, 6], "nmi": 4, "node": 4, "non": 1, "none": [1, 2, 4, 7], "noninfring": 7, "nopathsexcept": [1, 4], "nor": 1, "normal": 4, "north": 4, "not_realis": [1, 6], "notebook": [], "noth": 1, "notic": [], "notifi": [1, 6], "notify_event_observ": [1, 6], "notimplementederror": 5, "num": 4, "number": [1, 4], "number_of_cargo": 4, "numer": 1, "obj": 1, "object": [1, 2, 4], "observ": 6, "obtain": [], "occur": [1, 4], "occurr": [1, 4], "off": 1, "ogist": 0, "onc": 1, "one": [1, 2, 3, 4], "onjournei": [1, 6], "onli": [1, 4], "open": 4, "openssl": [], "oper": [0, 1], "opportun": 1, "opt": [1, 4, 6], "option": [1, 4], "order": [1, 4], "org": [], "origin": [1, 6], "origin_port": [1, 6], "other": [1, 7], "other_data": [1, 6], "otherwis": [1, 4, 7], "our": [], "out": 7, "outcom": [1, 3], "output": [1, 3], "output_directori": [1, 2, 3, 6], "outsid": 1, "over": [1, 4], "overal": 1, "overridden": 1, "overview": [0, 1], "own": [], "packag": [0, 6], "paid": 1, "pair": 4, "panama": 4, "panda": 4, "param": [1, 2, 3, 4], "paramet": [1, 2, 3], "parent": 1, "pars": 1, "parsed_arg": 1, "parser": 1, "part": 1, "partial": [1, 4], "particular": 7, "pass": [1, 2, 4], "passag": 4, "path": 4, "payment": [1, 6], "peopl": [], "per": [1, 4], "perfect": 4, "perform": [1, 4], "performed_tim": [1, 6], "permiss": [], "permit": [], "person": [], "pertain": 1, "peucker": 4, "php": [], "phpunit": [], "pick": [1, 4], "pick_up": [1, 6], "pickup": [1, 4], "pickup_period": 4, "pickup_time_window": 4, "pip": 7, "place": 1, "pleas": [], "plu": 1, "point": [1, 4], "polynomi": 4, "pop": [1, 6], "port": [1, 4, 6], "port_cargo_weight_distribution_path": 4, "port_trade_frequency_distribution_path": 4, "port_transition_duration_distributions_path": 4, "portion": [], "posit": [1, 2, 4], "possibl": 1, "post_run_cmd": [1, 2, 6], "pow": 4, "practic": [], "pre_inform": [1, 6], "pre_run_cmd": [1, 2, 6], "pre_run_inform_vessel_loc": [1, 6], "preced": 1, "precomputed_routes_fil": 4, "present": 1, "prevent": [], "previous": 1, "price": [1, 4], "print": 1, "prioriti": 1, "priorityqueu": 1, "probabl": [1, 6], "process": 1, "produc": [1, 4, 7], "program": 1, "project": [], "propel": 4, "propelling_engin": 4, "properti": [1, 2, 4], "propos": 1, "propose_schedul": [1, 6], "protocol": 1, "provid": [1, 4, 7], "psr": [], "publicli": [], "publish": [], "pull": [], "purpos": [1, 7], "put": [1, 6], "py": [1, 2, 4], "py3": 7, "python": [5, 7], "qualnam": 1, "quantiti": 4, "queue": 1, "quickli": [], "rais": [1, 3, 5], "ramer": 4, "random": [1, 4, 6], "rate": [1, 4], "real": 4, "receiv": [1, 6], "recent": [], "recommend": [], "record": [4, 5], "refer": 1, "region": [1, 4], "regional_chang": 4, "regionalmetricscollector": [1, 6], "regist": [1, 6], "register_by_type_nam": [1, 6], "register_event_observ": [1, 6], "regress": [], "reject": [1, 6], "relat": 1, "releas": [], "reloc": 1, "remain": 1, "remov": [1, 4, 6], "remove_canals_from_graph": [1, 4], "replac": 1, "report": [], "repositori": [], "repres": [1, 4], "represent": 1, "request": 1, "requir": [0, 1], "reserv": 7, "resourc": 3, "respect": [1, 2], "respons": 1, "restrict": 1, "result": 1, "retriev": 4, "return": [1, 2, 3], "riau": 4, "right": 7, "risk": [], "robust": 1, "roughli": 1, "round": 1, "rout": [1, 4], "router": 4, "row": 4, "rtype": [1, 3], "run": [1, 4, 6], "run_logg": 1, "runnabl": 1, "sail": 4, "sampl": 4, "sample_cargo_weight": [1, 4], "sample_cargoes_from_port_distribut": [1, 4], "sample_time_window": [1, 4], "sanitised_ledg": [1, 6], "save": 3, "scenario": [1, 4], "schedul": [1, 6], "schedule_copi": 1, "scheduled_trad": [1, 6], "schedulepropos": [1, 6], "schema": [1, 4, 6], "schemaopt": [1, 4], "schemaprotocol": [1, 6], "scope": [], "sea": 1, "search": [1, 4], "search_list": 4, "search_term": 4, "second": [1, 4], "secur": [], "see": [1, 4], "seed": 1, "select_task": [1, 6], "selector": 1, "self": [1, 2], "sell": [], "send": [], "sent": [], "separ": 1, "sequenc": [1, 4], "serial": 1, "serv": 4, "set": [1, 2, 3, 5], "set_engin": [1, 2, 6], "set_item": [1, 4], "sever": 1, "shall": [1, 7], "ship": [0, 1, 2, 4, 6], "shippabl": 1, "shipping_compani": [1, 2, 4, 6], "shipping_market": [2, 4, 6], "shippingcompani": [1, 6], "shippingnetwork": [1, 6], "shortest": 4, "should": [1, 2, 4], "show_detailed_auction_outcom": 3, "similarli": 1, "simpl": 1, "simplecompani": [1, 6], "simplemarket": [1, 2, 6], "simplevessel": [1, 4, 6], "simpli": 1, "simplifi": 4, "simul": [0, 1, 2, 3, 4], "simulation_de_serialis": 6, "simulation_engin": 1, "simulation_environ": 6, "simulation_gener": 6, "simulation_spac": [4, 6], "simulationbuild": [1, 4, 6], "simulationcentr": [], "simulationengin": [1, 2, 3, 6], "simulationengineawar": [1, 6], "simulationfactori": [1, 2], "simulationspecif": [1, 6], "sinc": [1, 2], "singapor": 4, "skipkei": 1, "smooth": 4, "smooth_path": 4, "smooth_rout": [1, 4], "so": 5, "softwar": 7, "some": [1, 2], "soon": [], "sort_kei": 1, "sourc": [], "south": 4, "southampton": [], "space": [1, 4], "specif": [1, 2, 3, 4, 6], "specifi": [1, 3, 4, 5], "specifications_build": 3, "specs_str": 1, "speed": [1, 4, 6], "speed_pow": [1, 4], "sphere": 4, "ss": [], "standard": 4, "start": [1, 4, 6], "start_lat": 4, "start_loc": 4, "start_long": 4, "start_next_ev": [1, 6], "start_nod": 4, "start_port": 4, "start_t": 4, "start_tim": [1, 6], "state": 1, "static": [1, 2, 4], "staticship": [1, 4, 6], "statu": [1, 6], "std": 4, "stds_around_mean": 4, "step": 1, "still": 1, "stop": 1, "store": [1, 4], "str": [1, 2, 3, 4], "strait": 4, "stream": [], "string": [1, 4], "sub": 1, "subclass": [1, 5], "subdivis": 1, "subject": [], "sublicens": [], "submodul": 6, "subpackag": 6, "substanti": [], "subunit": 1, "suez": 4, "sum": 4, "suppli": 4, "supply_demand": 4, "supplydemand": 4, "support": 1, "suppos": 1, "sure": [], "system": 1, "t": 1, "take": [1, 4, 5], "task": 1, "task_metrics_overview": [1, 6], "term": 4, "tex": 1, "than": [], "thei": 1, "them": [1, 2, 4], "thi": [1, 4, 5], "thing": 1, "those": 4, "tidi": 1, "time": [1, 2, 4, 6], "time_transit_distribut": 4, "time_transition_dict": 4, "time_window": [1, 6], "time_windows_allow": 4, "timeout": 1, "timestep": 4, "timewindowarrivalev": [1, 4], "timewindowtrad": [1, 6], "to_json": [1, 4, 6], "todo": [1, 4], "tonn": [1, 4], "took": 1, "tool": [], "tort": 7, "track": 1, "trade": [1, 4, 6], "trade_occurrence_frequ": [1, 6], "tradestatu": [1, 6], "tradingcompani": [1, 6], "tramp": 0, "transfer": 1, "transform": 1, "transit": [1, 4], "translat": 1, "transport": [1, 4], "transport_oper": [4, 6], "transportation_schedul": 6, "transportationsourcedestinationind": [1, 6], "transportationstartfinishind": [1, 6], "travel": [1, 4], "travelev": [1, 6], "travers": 1, "tri": 1, "true": [1, 4], "tupl": [1, 3, 4], "turn": [1, 4], "two": [1, 4], "type": [1, 2, 3, 4], "u": [], "uk": [], "un": 1, "under": [1, 4], "understand": [], "union": 1, "unit": [1, 2, 4], "unitshippingnetwork": [1, 4, 6], "unknown": [1, 4, 6], "unladen": 4, "unless": [], "unload": [1, 4], "unload_cargo": [1, 6], "unloading_consumpt": 4, "unnecessari": 4, "unregister_event_observ": [1, 6], "unstart": 1, "until": [1, 4], "up": [1, 4, 5], "upcom": 1, "updat": 1, "upgrad": [], "us": [1, 2, 3, 4, 7], "util": 6, "v8": [], "valid": 1, "valu": [1, 4], "valueerror": [1, 3], "variabl": 4, "ve": [], "vendor": [], "veri": [], "verif": 1, "verifi": 1, "verify_schedul": [1, 6], "verify_schedule_cargo": [1, 6], "verify_schedule_tim": [1, 6], "version": [1, 5, 7], "vessel": [1, 2, 3, 4, 6], "vessel_id": [1, 6], "vessel_metr": 1, "vessel_typ": 4, "vesselcargoev": [1, 6], "vesselengin": [1, 4], "vesselev": [1, 6], "vesselkei": [1, 6], "vessellocationinformationev": [1, 6], "vesselwithengin": [1, 3, 4], "via": 1, "visit": 4, "voyag": 1, "vulner": [], "wa": 1, "wai": [], "want": 1, "warranti": 7, "we": 4, "web": 4, "weight": 4, "well": 4, "were": 1, "what": [], "whatev": [1, 5], "wheel": 7, "when": [1, 4], "where": [1, 4], "wherev": 1, "whether": [4, 7], "which": [1, 4], "while": 4, "whl": 7, "who": 4, "whom": [], "willing": 1, "window": [1, 4], "within": 1, "without": [1, 7], "work": 1, "world": [1, 2, 4, 6], "world_graph": [1, 4], "world_port": [1, 6], "worldvessel": [1, 4], "wrapper": 1, "wrong": 1, "www": [], "x": [1, 4, 6, 7], "y": [1, 4, 6, 7], "yet": 1, "you": [], "your": 7, "z": 7, "zero": 1, "zlib": []}, "titles": ["MABLE", "mable package", "mable.competition package", "mable.examples package", "mable.extensions package", "mable.io package", "mable", "Overview"], "titleterms": {"bash": 7, "bleed": [], "cargo_bid": 1, "cargo_distribut": 4, "cli": 1, "competit": 2, "consol": 7, "content": [0, 1, 2, 3, 4, 5], "contribut": [], "edg": [], "engin": 1, "environ": 3, "event_manag": 1, "exampl": 3, "extens": 4, "fleet": 3, "fuel_emiss": 4, "gener": 2, "global_setup": 1, "guidelin": [], "instal": 7, "instruct": 1, "io": 5, "jupyt": 7, "licens": 7, "logging_util": 5, "mabl": [0, 1, 2, 3, 4, 5, 6], "maritime_simul": [], "metric": 1, "modul": [1, 2, 3, 4, 5], "notebook": 7, "observ": 1, "overview": 7, "packag": [1, 2, 3, 4, 5], "paramet": 4, "report": [], "requir": 7, "return": 4, "run": [], "secur": [], "shipping_market": 1, "simulation_de_serialis": 1, "simulation_environ": 1, "simulation_gener": 1, "simulation_spac": 1, "submodul": [1, 2, 3, 4, 5], "subpackag": 1, "test": [], "transport_oper": 1, "transportation_schedul": 1, "upgrad": [], "util": 1, "vulner": [], "world_port": 4}})