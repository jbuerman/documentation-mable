Search.setIndex({"alltitles": {"Added": [[0, "added"], [0, "id5"], [0, "id9"], [0, "id18"]], "Baseclass and functions": [[10, "baseclass-and-functions"]], "Changed": [[0, "changed"], [0, "id7"], [0, "id12"], [0, "id15"]], "Changelog": [[0, null]], "Console/Bash": [[9, "console-bash"]], "Contents:": [[1, null]], "Creating a Trading Company": [[10, null]], "Default Implementation": [[10, "default-implementation"]], "Fixed": [[0, "fixed"], [0, "id3"], [0, "id10"], [0, "id13"], [0, "id16"]], "Installation": [[9, "installation"]], "Jupyter Notebook": [[9, "jupyter-notebook"]], "License": [[9, "license"]], "MABLE": [[1, null]], "Module contents": [[2, "module-mable"], [3, "module-mable.competition"], [4, "module-mable.examples"], [5, "module-mable.extensions"], [6, "module-mable.io"], [7, "module-mable.simulation_space"]], "Overview": [[9, null]], "Parameters": [[5, "parameters"], [5, "id1"], [5, "id2"], [5, "id3"], [5, "id4"], [5, "id5"], [5, "id8"], [5, "id10"], [5, "id12"], [5, "id14"], [5, "id16"], [5, "id18"], [5, "id20"], [5, "id22"]], "Removed": [[0, "removed"]], "Requirements": [[9, "requirements"]], "Returns": [[5, "returns"], [5, "id6"], [5, "id7"], [5, "id9"], [5, "id11"], [5, "id13"], [5, "id15"], [5, "id17"], [5, "id19"], [5, "id21"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"]], "Subpackages": [[2, "subpackages"]], "[0.0.10] - 2024-12-11": [[0, "id2"]], "[0.0.11] - 2024-12-29": [[0, "id1"]], "[0.0.4] - 2024-11-24": [[0, "id17"]], "[0.0.5] - 2024-11-26": [[0, "id14"]], "[0.0.6] - 2024-11-28": [[0, "id11"]], "[0.0.7] - 2024-12-3": [[0, "id8"]], "[0.0.8] - 2024-12-4": [[0, "id6"]], "[0.0.9] - 2024-12-09": [[0, "id4"]], "mable package": [[2, null]], "mable.cargo_bidding module": [[2, "module-mable.cargo_bidding"]], "mable.cli module": [[2, "module-mable.cli"]], "mable.competition package": [[3, null]], "mable.competition.generation module": [[3, "module-mable.competition.generation"]], "mable.competition.information module": [[3, "module-mable.competition.information"]], "mable.engine module": [[2, "module-mable.engine"]], "mable.event_management module": [[2, "module-mable.event_management"]], "mable.examples package": [[4, null]], "mable.examples.companies module": [[4, "module-mable.examples.companies"]], "mable.examples.environment module": [[4, "module-mable.examples.environment"]], "mable.examples.fleets module": [[4, "module-mable.examples.fleets"]], "mable.examples.shipping module": [[4, "module-mable.examples.shipping"]], "mable.extensions package": [[5, null]], "mable.extensions.cargo_distributions module": [[5, "module-mable.extensions.cargo_distributions"]], "mable.extensions.fuel_emissions module": [[5, "module-mable.extensions.fuel_emissions"]], "mable.extensions.world_ports module": [[5, "module-mable.extensions.world_ports"]], "mable.global_setup module": [[2, "module-mable.global_setup"]], "mable.instructions module": [[2, "module-mable.instructions"]], "mable.io package": [[6, null]], "mable.io.logging_util module": [[6, "module-mable.io.logging_util"]], "mable.metrics module": [[2, "module-mable.metrics"]], "mable.observers module": [[2, "module-mable.observers"]], "mable.shipping_market module": [[2, "module-mable.shipping_market"]], "mable.simulation_de_serialisation module": [[2, "module-mable.simulation_de_serialisation"]], "mable.simulation_environment module": [[2, "module-mable.simulation_environment"]], "mable.simulation_generation module": [[2, "module-mable.simulation_generation"]], "mable.simulation_space package": [[7, null]], "mable.simulation_space.structure module": [[7, "module-mable.simulation_space.structure"]], "mable.simulation_space.universe module": [[7, "module-mable.simulation_space.universe"]], "mable.transport_operation module": [[2, "module-mable.transport_operation"]], "mable.transportation_scheduling module": [[2, "module-mable.transportation_scheduling"]], "mable.util module": [[2, "module-mable.util"]], "maritime_simulator": [[8, null]]}, "docnames": ["changelog", "index", "mable", "mable.competition", "mable.examples", "mable.extensions", "mable.io", "mable.simulation_space", "modules", "overview", "tradingAgentIntroduction"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["changelog.rst", "index.rst", "mable.rst", "mable.competition.rst", "mable.examples.rst", "mable.extensions.rst", "mable.io.rst", "mable.simulation_space.rst", "modules.rst", "overview.rst", "tradingAgentIntroduction.rst"], "indexentries": {"__init__() (mable.cargo_bidding.tradingcompany method)": [[2, "mable.cargo_bidding.TradingCompany.__init__", false]], "__init__() (mable.competition.generation.auctioncargoevent method)": [[3, "mable.competition.generation.AuctionCargoEvent.__init__", false]], "__init__() (mable.competition.information.companyheadquarters method)": [[3, "mable.competition.information.CompanyHeadquarters.__init__", false]], "__init__() (mable.competition.information.marketauthority method)": [[3, "mable.competition.information.MarketAuthority.__init__", false]], "__init__() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.__init__", false]], "__init__() (mable.event_management.cargoannouncementevent method)": [[2, "mable.event_management.CargoAnnouncementEvent.__init__", false]], "__init__() (mable.event_management.cargoevent method)": [[2, "mable.event_management.CargoEvent.__init__", false]], "__init__() (mable.event_management.durationevent method)": [[2, "mable.event_management.DurationEvent.__init__", false]], "__init__() (mable.event_management.event method)": [[2, "mable.event_management.Event.__init__", false]], "__init__() (mable.event_management.eventexecutiondata method)": [[2, "mable.event_management.EventExecutionData.__init__", false]], "__init__() (mable.event_management.eventitem method)": [[2, "mable.event_management.EventItem.__init__", false]], "__init__() (mable.event_management.eventqueue method)": [[2, "mable.event_management.EventQueue.__init__", false]], "__init__() (mable.event_management.firstcargoannouncementevent method)": [[2, "mable.event_management.FirstCargoAnnouncementEvent.__init__", false]], "__init__() (mable.event_management.idleevent method)": [[2, "mable.event_management.IdleEvent.__init__", false]], "__init__() (mable.event_management.travelevent method)": [[2, "mable.event_management.TravelEvent.__init__", false]], "__init__() (mable.event_management.vesselcargoevent method)": [[2, "mable.event_management.VesselCargoEvent.__init__", false]], "__init__() (mable.event_management.vesselevent method)": [[2, "mable.event_management.VesselEvent.__init__", false]], "__init__() (mable.event_management.vessellocationinformationevent method)": [[2, "mable.event_management.VesselLocationInformationEvent.__init__", false]], "__init__() (mable.examples.companies.myarchenemy method)": [[4, "mable.examples.companies.MyArchEnemy.__init__", false]], "__init__() (mable.examples.companies.myarchenemy.data method)": [[4, "mable.examples.companies.MyArchEnemy.Data.__init__", false]], "__init__() (mable.examples.companies.thescheduler method)": [[4, "mable.examples.companies.TheScheduler.__init__", false]], "__init__() (mable.examples.companies.thescheduler.data method)": [[4, "mable.examples.companies.TheScheduler.Data.__init__", false]], "__init__() (mable.extensions.cargo_distributions.distributionshipping method)": [[5, "mable.extensions.cargo_distributions.DistributionShipping.__init__", false]], "__init__() (mable.extensions.fuel_emissions.consumptionrate method)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.__init__", false]], "__init__() (mable.extensions.fuel_emissions.consumptionrate.data method)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.Data.__init__", false]], "__init__() (mable.extensions.fuel_emissions.fuel method)": [[5, "mable.extensions.fuel_emissions.Fuel.__init__", false]], "__init__() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[5, "mable.extensions.fuel_emissions.FuelSimulationFactory.__init__", false]], "__init__() (mable.extensions.fuel_emissions.vesselengine method)": [[5, "mable.extensions.fuel_emissions.VesselEngine.__init__", false]], "__init__() (mable.extensions.fuel_emissions.vesselengine.data method)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.__init__", false]], "__init__() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.__init__", false]], "__init__() (mable.extensions.fuel_emissions.vesselwithengine.data method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.Data.__init__", false]], "__init__() (mable.extensions.world_ports.latlonglocation method)": [[5, "mable.extensions.world_ports.LatLongLocation.__init__", false]], "__init__() (mable.extensions.world_ports.latlongport method)": [[5, "mable.extensions.world_ports.LatLongPort.__init__", false]], "__init__() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.__init__", false]], "__init__() (mable.extensions.world_ports.route method)": [[5, "mable.extensions.world_ports.Route.__init__", false]], "__init__() (mable.extensions.world_ports.worldvessel method)": [[5, "mable.extensions.world_ports.WorldVessel.__init__", false]], "__init__() (mable.instructions.specifications method)": [[2, "mable.instructions.Specifications.__init__", false]], "__init__() (mable.instructions.specifications.builder method)": [[2, "mable.instructions.Specifications.Builder.__init__", false]], "__init__() (mable.metrics.metricscollector method)": [[2, "mable.metrics.MetricsCollector.__init__", false]], "__init__() (mable.metrics.vesselkey method)": [[2, "mable.metrics.VesselKey.__init__", false]], "__init__() (mable.observers.auctionoutcomeprintobserver method)": [[2, "mable.observers.AuctionOutcomePrintObserver.__init__", false]], "__init__() (mable.observers.eventfuelprintobserver method)": [[2, "mable.observers.EventFuelPrintObserver.__init__", false]], "__init__() (mable.observers.logrunner method)": [[2, "mable.observers.LogRunner.__init__", false]], "__init__() (mable.observers.metricsobserver method)": [[2, "mable.observers.MetricsObserver.__init__", false]], "__init__() (mable.shipping_market.auctionallocationresult method)": [[2, "mable.shipping_market.AuctionAllocationResult.__init__", false]], "__init__() (mable.shipping_market.auctionledger method)": [[2, "mable.shipping_market.AuctionLedger.__init__", false]], "__init__() (mable.shipping_market.auctionmarket method)": [[2, "mable.shipping_market.AuctionMarket.__init__", false]], "__init__() (mable.shipping_market.contract method)": [[2, "mable.shipping_market.Contract.__init__", false]], "__init__() (mable.shipping_market.market method)": [[2, "mable.shipping_market.Market.__init__", false]], "__init__() (mable.shipping_market.shipping method)": [[2, "mable.shipping_market.Shipping.__init__", false]], "__init__() (mable.shipping_market.simplemarket method)": [[2, "mable.shipping_market.SimpleMarket.__init__", false]], "__init__() (mable.shipping_market.timewindowtrade method)": [[2, "mable.shipping_market.TimeWindowTrade.__init__", false]], "__init__() (mable.shipping_market.trade method)": [[2, "mable.shipping_market.Trade.__init__", false]], "__init__() (mable.simulation_de_serialisation.dataclass method)": [[2, "mable.simulation_de_serialisation.DataClass.__init__", false]], "__init__() (mable.simulation_de_serialisation.dataprotocol method)": [[2, "mable.simulation_de_serialisation.DataProtocol.__init__", false]], "__init__() (mable.simulation_de_serialisation.schemaprotocol method)": [[2, "mable.simulation_de_serialisation.SchemaProtocol.__init__", false]], "__init__() (mable.simulation_environment.simulationengineaware method)": [[2, "mable.simulation_environment.SimulationEngineAware.__init__", false]], "__init__() (mable.simulation_environment.world method)": [[2, "mable.simulation_environment.World.__init__", false]], "__init__() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.__init__", false]], "__init__() (mable.simulation_space.structure.networkwithportdict method)": [[7, "mable.simulation_space.structure.NetworkWithPortDict.__init__", false]], "__init__() (mable.simulation_space.structure.shippingnetwork method)": [[7, "mable.simulation_space.structure.ShippingNetwork.__init__", false]], "__init__() (mable.simulation_space.structure.unitshippingnetwork method)": [[7, "mable.simulation_space.structure.UnitShippingNetwork.__init__", false]], "__init__() (mable.simulation_space.universe.location method)": [[7, "mable.simulation_space.universe.Location.__init__", false]], "__init__() (mable.simulation_space.universe.onjourney method)": [[7, "mable.simulation_space.universe.OnJourney.__init__", false]], "__init__() (mable.simulation_space.universe.port method)": [[7, "mable.simulation_space.universe.Port.__init__", false]], "__init__() (mable.transport_operation.bid method)": [[2, "mable.transport_operation.Bid.__init__", false]], "__init__() (mable.transport_operation.cargocapacity method)": [[2, "mable.transport_operation.CargoCapacity.__init__", false]], "__init__() (mable.transport_operation.cargocapacity.data method)": [[2, "mable.transport_operation.CargoCapacity.Data.__init__", false]], "__init__() (mable.transport_operation.cargocontainer method)": [[2, "mable.transport_operation.CargoContainer.__init__", false]], "__init__() (mable.transport_operation.cargohold method)": [[2, "mable.transport_operation.CargoHold.__init__", false]], "__init__() (mable.transport_operation.scheduleproposal method)": [[2, "mable.transport_operation.ScheduleProposal.__init__", false]], "__init__() (mable.transport_operation.shippingcompany method)": [[2, "mable.transport_operation.ShippingCompany.__init__", false]], "__init__() (mable.transport_operation.shippingcompany.data method)": [[2, "mable.transport_operation.ShippingCompany.Data.__init__", false]], "__init__() (mable.transport_operation.simplecompany method)": [[2, "mable.transport_operation.SimpleCompany.__init__", false]], "__init__() (mable.transport_operation.simplevessel method)": [[2, "mable.transport_operation.SimpleVessel.__init__", false]], "__init__() (mable.transport_operation.simplevessel.data method)": [[2, "mable.transport_operation.SimpleVessel.Data.__init__", false]], "__init__() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.__init__", false]], "__init__() (mable.transport_operation.vessel.data method)": [[2, "mable.transport_operation.Vessel.Data.__init__", false]], "__init__() (mable.transportation_scheduling.currentstate method)": [[2, "mable.transportation_scheduling.CurrentState.__init__", false]], "__init__() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.__init__", false]], "__init__() (mable.util.jsonable method)": [[2, "mable.util.JsonAble.__init__", false]], "accepted (mable.shipping_market.tradestatus attribute)": [[2, "mable.shipping_market.TradeStatus.ACCEPTED", false]], "action_data (mable.event_management.eventexecutiondata attribute)": [[2, "mable.event_management.EventExecutionData.action_data", false]], "add_allocation_results() (mable.competition.information.marketauthority method)": [[3, "mable.competition.information.MarketAuthority.add_allocation_results", false]], "add_canal_to_graph() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.add_canal_to_graph", false]], "add_cargo_distribution() (mable.instructions.specifications.builder method)": [[2, "mable.instructions.Specifications.Builder.add_cargo_distribution", false]], "add_cargo_generation() (mable.instructions.specifications.builder method)": [[2, "mable.instructions.Specifications.Builder.add_cargo_generation", false]], "add_co2_emissions() (mable.metrics.globalmetricscollector method)": [[2, "mable.metrics.GlobalMetricsCollector.add_co2_emissions", false]], "add_company() (mable.instructions.specifications.builder method)": [[2, "mable.instructions.Specifications.Builder.add_company", false]], "add_company_numeric_metric() (mable.metrics.metricscollector method)": [[2, "mable.metrics.MetricsCollector.add_company_numeric_metric", false]], "add_cost() (mable.metrics.globalmetricscollector method)": [[2, "mable.metrics.GlobalMetricsCollector.add_cost", false]], "add_dual_numeric_metric() (mable.metrics.metricscollector method)": [[2, "mable.metrics.MetricsCollector.add_dual_numeric_metric", false]], "add_fuel() (mable.extensions.fuel_emissions.fuelspecsbuilder method)": [[5, "mable.extensions.fuel_emissions.FuelSpecsBuilder.add_fuel", false]], "add_fuel_consumption() (mable.metrics.globalmetricscollector method)": [[2, "mable.metrics.GlobalMetricsCollector.add_fuel_consumption", false]], "add_fuel_consumption() (mable.metrics.regionalmetricscollector method)": [[2, "mable.metrics.RegionalMetricsCollector.add_fuel_consumption", false]], "add_global_company_list_metric() (mable.metrics.metricscollector method)": [[2, "mable.metrics.MetricsCollector.add_global_company_list_metric", false]], "add_new_schedules() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.add_new_schedules", false]], "add_random_specifications() (mable.instructions.specifications.builder method)": [[2, "mable.instructions.Specifications.Builder.add_random_specifications", false]], "add_relocation() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.add_relocation", false]], "add_route_point() (mable.metrics.globalmetricscollector method)": [[2, "mable.metrics.GlobalMetricsCollector.add_route_point", false]], "add_shipping_network() (mable.instructions.specifications.builder method)": [[2, "mable.instructions.Specifications.Builder.add_shipping_network", false]], "add_to_all_trades() (mable.shipping_market.shipping method)": [[2, "mable.shipping_market.Shipping.add_to_all_trades", false]], "add_transportation() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.add_transportation", false]], "added_to_queue() (mable.event_management.durationevent method)": [[2, "mable.event_management.DurationEvent.added_to_queue", false]], "added_to_queue() (mable.event_management.event method)": [[2, "mable.event_management.Event.added_to_queue", false]], "added_to_queue() (mable.event_management.travelevent method)": [[2, "mable.event_management.TravelEvent.added_to_queue", false]], "allocation_result (mable.competition.generation.auctioncargoevent property)": [[3, "mable.competition.generation.AuctionCargoEvent.allocation_result", false]], "amount (mable.shipping_market.trade attribute)": [[2, "mable.shipping_market.Trade.amount", false]], "amount (mable.transport_operation.bid attribute)": [[2, "mable.transport_operation.Bid.amount", false]], "amount (mable.transport_operation.cargocontainer property)": [[2, "mable.transport_operation.CargoContainer.amount", false]], "apply_new_schedules() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.apply_new_schedules", false]], "apply_schedules() (mable.transport_operation.simplecompany method)": [[2, "mable.transport_operation.SimpleCompany.apply_schedules", false]], "argumentparserextensions (class in mable.cli)": [[2, "mable.cli.ArgumentParserExtensions", false]], "arrivalevent (class in mable.event_management)": [[2, "mable.event_management.ArrivalEvent", false]], "as_tuple() (mable.extensions.world_ports.route method)": [[5, "mable.extensions.world_ports.Route.as_tuple", false]], "auctionallocationresult (class in mable.shipping_market)": [[2, "mable.shipping_market.AuctionAllocationResult", false]], "auctioncargoevent (class in mable.competition.generation)": [[3, "mable.competition.generation.AuctionCargoEvent", false]], "auctionclassfactory (class in mable.competition.generation)": [[3, "mable.competition.generation.AuctionClassFactory", false]], "auctionledger (class in mable.shipping_market)": [[2, "mable.shipping_market.AuctionLedger", false]], "auctionmarket (class in mable.shipping_market)": [[2, "mable.shipping_market.AuctionMarket", false]], "auctionmetricsobserver (class in mable.observers)": [[2, "mable.observers.AuctionMetricsObserver", false]], "auctionoutcomeobserver (class in mable.observers)": [[2, "mable.observers.AuctionOutcomeObserver", false]], "auctionoutcomeprintobserver (class in mable.observers)": [[2, "mable.observers.AuctionOutcomePrintObserver", false]], "auctionsimulationengine (class in mable.competition.generation)": [[3, "mable.competition.generation.AuctionSimulationEngine", false]], "available_cargo_types() (mable.transport_operation.cargohold method)": [[2, "mable.transport_operation.CargoHold.available_cargo_types", false]], "ballast_consumption_rate (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.ballast_consumption_rate", false]], "base (mable.extensions.fuel_emissions.consumptionrate attribute)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.base", false]], "base (mable.extensions.fuel_emissions.consumptionrate.data attribute)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.Data.base", false]], "bid (class in mable.transport_operation)": [[2, "mable.transport_operation.Bid", false]], "build() (mable.instructions.specifications.builder method)": [[2, "mable.instructions.Specifications.Builder.build", false]], "calculate_consumption() (mable.observers.metricsobserver static method)": [[2, "mable.observers.MetricsObserver.calculate_consumption", false]], "canals_nodes (mable.extensions.world_ports.latlongshippingnetwork property)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.canals_nodes", false]], "capacities_and_loading_rates (mable.transport_operation.vessel property)": [[2, "mable.transport_operation.Vessel.capacities_and_loading_rates", false]], "capacities_and_loading_rates (mable.transport_operation.vessel.data attribute)": [[2, "mable.transport_operation.Vessel.Data.capacities_and_loading_rates", false]], "capacity (mable.transport_operation.cargocapacity attribute)": [[2, "mable.transport_operation.CargoCapacity.capacity", false]], "capacity (mable.transport_operation.cargocapacity.data attribute)": [[2, "mable.transport_operation.CargoCapacity.Data.capacity", false]], "capacity (mable.transport_operation.cargocontainer property)": [[2, "mable.transport_operation.CargoContainer.capacity", false]], "capacity() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.capacity", false]], "cargo_type (mable.shipping_market.trade attribute)": [[2, "mable.shipping_market.Trade.cargo_type", false]], "cargo_type (mable.transport_operation.cargocapacity attribute)": [[2, "mable.transport_operation.CargoCapacity.cargo_type", false]], "cargo_type (mable.transport_operation.cargocapacity.data attribute)": [[2, "mable.transport_operation.CargoCapacity.Data.cargo_type", false]], "cargoannouncementevent (class in mable.event_management)": [[2, "mable.event_management.CargoAnnouncementEvent", false]], "cargocapacity (class in mable.transport_operation)": [[2, "mable.transport_operation.CargoCapacity", false]], "cargocapacity.data (class in mable.transport_operation)": [[2, "mable.transport_operation.CargoCapacity.Data", false]], "cargocapacity.data.schema (class in mable.transport_operation)": [[2, "mable.transport_operation.CargoCapacity.Data.Schema", false]], "cargocontainer (class in mable.transport_operation)": [[2, "mable.transport_operation.CargoContainer", false]], "cargoevent (class in mable.event_management)": [[2, "mable.event_management.CargoEvent", false]], "cargohold (class in mable.transport_operation)": [[2, "mable.transport_operation.CargoHold", false]], "cargoholdschema (class in mable.transport_operation)": [[2, "mable.transport_operation.CargoHoldSchema", false]], "cargotransferevent (class in mable.event_management)": [[2, "mable.event_management.CargoTransferEvent", false]], "class_factory (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.class_factory", false]], "classfactory (class in mable.simulation_generation)": [[2, "mable.simulation_generation.ClassFactory", false]], "clean_window() (mable.shipping_market.timewindowtrade method)": [[2, "mable.shipping_market.TimeWindowTrade.clean_window", false]], "co2_coefficient (mable.extensions.fuel_emissions.fuel attribute)": [[5, "mable.extensions.fuel_emissions.Fuel.co2_coefficient", false]], "company (mable.transport_operation.bid attribute)": [[2, "mable.transport_operation.Bid.company", false]], "company_id (mable.metrics.vesselkey property)": [[2, "mable.metrics.VesselKey.company_id", false]], "companyheadquarters (class in mable.competition.information)": [[3, "mable.competition.information.CompanyHeadquarters", false]], "competitionbuilder (class in mable.competition.generation)": [[3, "mable.competition.generation.CompetitionBuilder", false]], "completion_time() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.completion_time", false]], "compute_all_routes_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.compute_all_routes_between_points", false]], "compute_route_length() (mable.extensions.world_ports.latlongshippingnetwork static method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.compute_route_length", false]], "consumptionrate (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate", false]], "consumptionrate.data (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.Data", false]], "consumptionrate.data.schema (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.Data.Schema", false]], "contract (class in mable.shipping_market)": [[2, "mable.shipping_market.Contract", false]], "contracts_per_company (mable.competition.information.marketauthority property)": [[3, "mable.competition.information.MarketAuthority.contracts_per_company", false]], "copy() (mable.shipping_market.contract method)": [[2, "mable.shipping_market.Contract.copy", false]], "copy() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.copy", false]], "copy_hold() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.copy_hold", false]], "costs (mable.transport_operation.scheduleproposal attribute)": [[2, "mable.transport_operation.ScheduleProposal.costs", false]], "create_canal_nodes() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.create_canal_nodes", false]], "create_world_canal_scenarios() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.create_world_canal_scenarios", false]], "current_cargo_hold (mable.transportation_scheduling.currentstate attribute)": [[2, "mable.transportation_scheduling.CurrentState.current_cargo_hold", false]], "current_class (mable.simulation_de_serialisation.dataclass attribute)": [[2, "mable.simulation_de_serialisation.DataClass.current_class", false]], "current_load() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.current_load", false]], "current_location (mable.transportation_scheduling.currentstate attribute)": [[2, "mable.transportation_scheduling.CurrentState.current_location", false]], "current_time (mable.competition.information.companyheadquarters property)": [[3, "mable.competition.information.CompanyHeadquarters.current_time", false]], "current_time (mable.simulation_environment.world property)": [[2, "mable.simulation_environment.World.current_time", false]], "current_time (mable.transportation_scheduling.currentstate attribute)": [[2, "mable.transportation_scheduling.CurrentState.current_time", false]], "currentstate (class in mable.transportation_scheduling)": [[2, "mable.transportation_scheduling.CurrentState", false]], "data (mable.simulation_de_serialisation.dataprotocol attribute)": [[2, "mable.simulation_de_serialisation.DataProtocol.Data", false]], "dataclass (class in mable.simulation_de_serialisation)": [[2, "mable.simulation_de_serialisation.DataClass", false]], "dataprotocol (class in mable.simulation_de_serialisation)": [[2, "mable.simulation_de_serialisation.DataProtocol", false]], "dataschema (class in mable.simulation_de_serialisation)": [[2, "mable.simulation_de_serialisation.DataSchema", false]], "default() (mable.util.jsonableencoder method)": [[2, "mable.util.JsonAbleEncoder.default", false]], "default_laden_balast_consumption() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.default_laden_balast_consumption", false]], "default_suezmax_aframax_laden_balast_consumption() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.default_suezmax_aframax_laden_balast_consumption", false]], "default_vlcc_laden_balast_consumption() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.default_vlcc_laden_balast_consumption", false]], "destination (mable.simulation_space.universe.onjourney attribute)": [[7, "mable.simulation_space.universe.OnJourney.destination", false]], "destination_port (mable.shipping_market.trade attribute)": [[2, "mable.shipping_market.Trade.destination_port", false]], "distance() (mable.event_management.arrivalevent method)": [[2, "mable.event_management.ArrivalEvent.distance", false]], "distance() (mable.event_management.cargotransferevent method)": [[2, "mable.event_management.CargoTransferEvent.distance", false]], "distance() (mable.event_management.idleevent method)": [[2, "mable.event_management.IdleEvent.distance", false]], "distance() (mable.event_management.travelevent method)": [[2, "mable.event_management.TravelEvent.distance", false]], "distance() (mable.event_management.vesselcargoevent method)": [[2, "mable.event_management.VesselCargoEvent.distance", false]], "distance() (mable.event_management.vesselevent method)": [[2, "mable.event_management.VesselEvent.distance", false]], "distance() (mable.event_management.vessellocationinformationevent method)": [[2, "mable.event_management.VesselLocationInformationEvent.distance", false]], "distribute_trades() (mable.shipping_market.auctionmarket static method)": [[2, "mable.shipping_market.AuctionMarket.distribute_trades", false]], "distribute_trades() (mable.shipping_market.market static method)": [[2, "mable.shipping_market.Market.distribute_trades", false]], "distribute_trades() (mable.shipping_market.simplemarket static method)": [[2, "mable.shipping_market.SimpleMarket.distribute_trades", false]], "distributionclassfactory (class in mable.extensions.cargo_distributions)": [[5, "mable.extensions.cargo_distributions.DistributionClassFactory", false]], "distributionshipping (class in mable.extensions.cargo_distributions)": [[5, "mable.extensions.cargo_distributions.DistributionShipping", false]], "distributionsimulationbuilder (class in mable.extensions.cargo_distributions)": [[5, "mable.extensions.cargo_distributions.DistributionSimulationBuilder", false]], "do_events_exists() (mable.simulation_environment.world method)": [[2, "mable.simulation_environment.World.do_events_exists", false]], "done() (in module mable.global_setup)": [[2, "mable.global_setup.done", false]], "drop_off (mable.transportation_scheduling.transportationsourcedestinationindicator attribute)": [[2, "mable.transportation_scheduling.TransportationSourceDestinationIndicator.DROP_OFF", false]], "durationevent (class in mable.event_management)": [[2, "mable.event_management.DurationEvent", false]], "dynamicnestedfield (class in mable.simulation_de_serialisation)": [[2, "mable.simulation_de_serialisation.DynamicNestedField", false]], "earliest_drop_off (mable.shipping_market.timewindowtrade property)": [[2, "mable.shipping_market.TimeWindowTrade.earliest_drop_off", false]], "earliest_drop_off_clean (mable.shipping_market.timewindowtrade property)": [[2, "mable.shipping_market.TimeWindowTrade.earliest_drop_off_clean", false]], "earliest_pickup (mable.shipping_market.timewindowtrade property)": [[2, "mable.shipping_market.TimeWindowTrade.earliest_pickup", false]], "earliest_pickup_clean (mable.shipping_market.timewindowtrade property)": [[2, "mable.shipping_market.TimeWindowTrade.earliest_pickup_clean", false]], "emit() (mable.io.logging_util.loguruhandler method)": [[6, "mable.io.logging_util.LoguruHandler.emit", false]], "energy_coefficient (mable.extensions.fuel_emissions.fuel attribute)": [[5, "mable.extensions.fuel_emissions.Fuel.energy_coefficient", false]], "engine (mable.transportation_scheduling.currentstate attribute)": [[2, "mable.transportation_scheduling.CurrentState.engine", false]], "engineprepostrunner (class in mable.engine)": [[2, "mable.engine.EnginePrePostRunner", false]], "event (class in mable.event_management)": [[2, "mable.event_management.Event", false]], "event (mable.event_management.eventitem attribute)": [[2, "mable.event_management.EventItem.event", false]], "event_action() (mable.competition.generation.auctioncargoevent method)": [[3, "mable.competition.generation.AuctionCargoEvent.event_action", false]], "event_action() (mable.event_management.arrivalevent method)": [[2, "mable.event_management.ArrivalEvent.event_action", false]], "event_action() (mable.event_management.cargoannouncementevent method)": [[2, "mable.event_management.CargoAnnouncementEvent.event_action", false]], "event_action() (mable.event_management.cargoevent method)": [[2, "mable.event_management.CargoEvent.event_action", false]], "event_action() (mable.event_management.cargotransferevent method)": [[2, "mable.event_management.CargoTransferEvent.event_action", false]], "event_action() (mable.event_management.event method)": [[2, "mable.event_management.Event.event_action", false]], "event_action() (mable.event_management.firstcargoannouncementevent method)": [[2, "mable.event_management.FirstCargoAnnouncementEvent.event_action", false]], "event_action() (mable.event_management.travelevent method)": [[2, "mable.event_management.TravelEvent.event_action", false]], "event_action() (mable.event_management.vesselevent method)": [[2, "mable.event_management.VesselEvent.event_action", false]], "event_occurrence() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.event_occurrence", false]], "event_queue (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.event_queue", false]], "event_queue (mable.simulation_environment.world property)": [[2, "mable.simulation_environment.World.event_queue", false]], "eventexecutiondata (class in mable.event_management)": [[2, "mable.event_management.EventExecutionData", false]], "eventfuelprintobserver (class in mable.observers)": [[2, "mable.observers.EventFuelPrintObserver", false]], "eventitem (class in mable.event_management)": [[2, "mable.event_management.EventItem", false]], "eventobserver (class in mable.event_management)": [[2, "mable.event_management.EventObserver", false]], "eventqueue (class in mable.event_management)": [[2, "mable.event_management.EventQueue", false]], "example_fleet_1() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.example_fleet_1", false]], "example_fleet_2() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.example_fleet_2", false]], "example_fleet_3() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.example_fleet_3", false]], "example_trades_1() (in module mable.examples.shipping)": [[4, "mable.examples.shipping.example_trades_1", false]], "factor (mable.extensions.fuel_emissions.consumptionrate attribute)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.factor", false]], "factor (mable.extensions.fuel_emissions.consumptionrate.data attribute)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.Data.factor", false]], "filter_out_outliers() (mable.extensions.cargo_distributions.distributionshipping static method)": [[5, "mable.extensions.cargo_distributions.DistributionShipping.filter_out_outliers", false]], "find_closest_node() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.find_closest_node", false]], "find_company_for_vessel() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.find_company_for_vessel", false]], "finish (mable.transportation_scheduling.transportationstartfinishindicator attribute)": [[2, "mable.transportation_scheduling.TransportationStartFinishIndicator.FINISH", false]], "firstcargoannouncementevent (class in mable.event_management)": [[2, "mable.event_management.FirstCargoAnnouncementEvent", false]], "fleet (mable.cargo_bidding.tradingcompany property)": [[2, "mable.cargo_bidding.TradingCompany.fleet", false]], "fleet (mable.transport_operation.shippingcompany property)": [[2, "mable.transport_operation.ShippingCompany.fleet", false]], "fleet (mable.transport_operation.shippingcompany.data attribute)": [[2, "mable.transport_operation.ShippingCompany.Data.fleet", false]], "format_time() (in module mable.util)": [[2, "mable.util.format_time", false]], "fuel (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.Fuel", false]], "fuel (mable.extensions.fuel_emissions.vesselengine property)": [[5, "mable.extensions.fuel_emissions.VesselEngine.fuel", false]], "fuel (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.fuel", false]], "fuelclassfactory (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.FuelClassFactory", false]], "fuelsimulationfactory (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.FuelSimulationFactory", false]], "fuelspecsbuilder (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.FuelSpecsBuilder", false]], "fulfilled (mable.shipping_market.contract attribute)": [[2, "mable.shipping_market.Contract.fulfilled", false]], "generate_cargo_capacity() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_cargo_capacity", false]], "generate_company() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_company", false]], "generate_consumption_rate() (mable.extensions.fuel_emissions.fuelclassfactory static method)": [[5, "mable.extensions.fuel_emissions.FuelClassFactory.generate_consumption_rate", false]], "generate_consumption_rate() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[5, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_consumption_rate", false]], "generate_engine() (mable.competition.generation.auctionclassfactory static method)": [[3, "mable.competition.generation.AuctionClassFactory.generate_engine", false]], "generate_engine() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[5, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_engine", false]], "generate_engine() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_engine", false]], "generate_engine() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_engine", false]], "generate_event_arrival() (mable.extensions.cargo_distributions.distributionclassfactory static method)": [[5, "mable.extensions.cargo_distributions.DistributionClassFactory.generate_event_arrival", false]], "generate_event_arrival() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_event_arrival", false]], "generate_event_cargo() (mable.competition.generation.auctionclassfactory static method)": [[3, "mable.competition.generation.AuctionClassFactory.generate_event_cargo", false]], "generate_event_cargo() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_event_cargo", false]], "generate_event_cargo_transfer() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_event_cargo_transfer", false]], "generate_event_idling() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_event_idling", false]], "generate_event_location_info() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_event_location_info", false]], "generate_event_queue() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_event_queue", false]], "generate_event_travel() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_event_travel", false]], "generate_fleet() (mable.competition.generation.competitionbuilder method)": [[3, "mable.competition.generation.CompetitionBuilder.generate_fleet", false]], "generate_fleet() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_fleet", false]], "generate_fuel() (mable.extensions.fuel_emissions.fuelclassfactory static method)": [[5, "mable.extensions.fuel_emissions.FuelClassFactory.generate_fuel", false]], "generate_fuels() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[5, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_fuels", false]], "generate_location() (mable.extensions.world_ports.latlongfactory static method)": [[5, "mable.extensions.world_ports.LatLongFactory.generate_location", false]], "generate_location() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_location", false]], "generate_market() (mable.competition.generation.auctionclassfactory static method)": [[3, "mable.competition.generation.AuctionClassFactory.generate_market", false]], "generate_market() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_market", false]], "generate_market() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_market", false]], "generate_network() (mable.extensions.world_ports.latlongfactory static method)": [[5, "mable.extensions.world_ports.LatLongFactory.generate_network", false]], "generate_network() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_network", false]], "generate_network() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_network", false]], "generate_port() (mable.extensions.world_ports.latlongfactory static method)": [[5, "mable.extensions.world_ports.LatLongFactory.generate_port", false]], "generate_port() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_port", false]], "generate_random() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_random", false]], "generate_random() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_random", false]], "generate_route_graph_from_file() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.generate_route_graph_from_file", false]], "generate_shipping() (mable.competition.generation.auctionclassfactory static method)": [[3, "mable.competition.generation.AuctionClassFactory.generate_shipping", false]], "generate_shipping() (mable.extensions.cargo_distributions.distributionclassfactory static method)": [[5, "mable.extensions.cargo_distributions.DistributionClassFactory.generate_shipping", false]], "generate_shipping() (mable.extensions.cargo_distributions.distributionsimulationbuilder method)": [[5, "mable.extensions.cargo_distributions.DistributionSimulationBuilder.generate_shipping", false]], "generate_shipping() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_shipping", false]], "generate_shipping() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_shipping", false]], "generate_shipping_companies() (mable.competition.generation.competitionbuilder method)": [[3, "mable.competition.generation.CompetitionBuilder.generate_shipping_companies", false]], "generate_shipping_companies() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_shipping_companies", false]], "generate_simulation() (in module mable.examples.environment)": [[4, "mable.examples.environment.generate_simulation", false]], "generate_trade() (mable.extensions.cargo_distributions.distributionclassfactory static method)": [[5, "mable.extensions.cargo_distributions.DistributionClassFactory.generate_trade", false]], "generate_trade() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_trade", false]], "generate_vessel() (mable.extensions.fuel_emissions.fuelclassfactory static method)": [[5, "mable.extensions.fuel_emissions.FuelClassFactory.generate_vessel", false]], "generate_vessel() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[5, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_vessel", false]], "generate_vessel() (mable.extensions.world_ports.latlongfactory static method)": [[5, "mable.extensions.world_ports.LatLongFactory.generate_vessel", false]], "generate_vessel() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_vessel", false]], "generate_vessel() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_vessel", false]], "generate_vessel_engine() (mable.extensions.fuel_emissions.fuelclassfactory static method)": [[5, "mable.extensions.fuel_emissions.FuelClassFactory.generate_vessel_engine", false]], "generate_vessel_engine() (mable.extensions.fuel_emissions.fuelsimulationfactory method)": [[5, "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_vessel_engine", false]], "generate_world() (mable.simulation_generation.classfactory static method)": [[2, "mable.simulation_generation.ClassFactory.generate_world", false]], "generate_world() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.generate_world", false]], "get() (mable.event_management.eventqueue method)": [[2, "mable.event_management.EventQueue.get", false]], "get() (mable.instructions.specifications method)": [[2, "mable.instructions.Specifications.get", false]], "get() (mable.simulation_de_serialisation.simulationspecification class method)": [[2, "mable.simulation_de_serialisation.SimulationSpecification.get", false]], "get() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.get", false]], "get_all_routes_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.get_all_routes_between_points", false]], "get_all_stored_routes_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.get_all_stored_routes_between_points", false]], "get_arrival_time() (mable.transport_operation.simplecompany method)": [[2, "mable.transport_operation.SimpleCompany.get_arrival_time", false]], "get_ballast_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[5, "mable.extensions.fuel_emissions.VesselEngine.get_ballast_consumption", false]], "get_ballast_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.get_ballast_consumption", false]], "get_capacity() (mable.transport_operation.cargohold method)": [[2, "mable.transport_operation.CargoHold.get_capacity", false]], "get_class() (mable.transport_operation.shippingcompany class method)": [[2, "mable.transport_operation.ShippingCompany.get_class", false]], "get_co2_emissions() (mable.extensions.fuel_emissions.fuel method)": [[5, "mable.extensions.fuel_emissions.Fuel.get_co2_emissions", false]], "get_co2_emissions() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.get_co2_emissions", false]], "get_companies() (mable.competition.information.companyheadquarters method)": [[3, "mable.competition.information.CompanyHeadquarters.get_companies", false]], "get_company_id() (mable.metrics.metricscollector method)": [[2, "mable.metrics.MetricsCollector.get_company_id", false]], "get_cost() (mable.extensions.fuel_emissions.fuel method)": [[5, "mable.extensions.fuel_emissions.Fuel.get_cost", false]], "get_cost() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.get_cost", false]], "get_current_load() (mable.transport_operation.cargohold method)": [[2, "mable.transport_operation.CargoHold.get_current_load", false]], "get_distance() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.get_distance", false]], "get_distance() (mable.simulation_space.structure.shippingnetwork static method)": [[7, "mable.simulation_space.structure.ShippingNetwork.get_distance", false]], "get_distance() (mable.simulation_space.structure.unitshippingnetwork method)": [[7, "mable.simulation_space.structure.UnitShippingNetwork.get_distance", false]], "get_event_observers() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.get_event_observers", false]], "get_fuel_mfo() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.get_fuel_mfo", false]], "get_idle_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[5, "mable.extensions.fuel_emissions.VesselEngine.get_idle_consumption", false]], "get_idle_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.get_idle_consumption", false]], "get_index_or_default() (in module mable.extensions.world_ports)": [[5, "mable.extensions.world_ports.get_index_or_default", false]], "get_insertion_points() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.get_insertion_points", false]], "get_item() (mable.extensions.fuel_emissions.globalsetup class method)": [[5, "mable.extensions.fuel_emissions.GlobalSetup.get_item", false]], "get_journey_location() (mable.competition.information.companyheadquarters method)": [[3, "mable.competition.information.CompanyHeadquarters.get_journey_location", false]], "get_journey_location() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.get_journey_location", false]], "get_journey_location() (mable.simulation_space.structure.shippingnetwork method)": [[7, "mable.simulation_space.structure.ShippingNetwork.get_journey_location", false]], "get_journey_location() (mable.simulation_space.structure.unitshippingnetwork method)": [[7, "mable.simulation_space.structure.UnitShippingNetwork.get_journey_location", false]], "get_keys() (mable.extensions.fuel_emissions.globalsetup class method)": [[5, "mable.extensions.fuel_emissions.GlobalSetup.get_keys", false]], "get_laden_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[5, "mable.extensions.fuel_emissions.VesselEngine.get_laden_consumption", false]], "get_laden_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.get_laden_consumption", false]], "get_loading_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[5, "mable.extensions.fuel_emissions.VesselEngine.get_loading_consumption", false]], "get_loading_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.get_loading_consumption", false]], "get_loading_rate() (mable.transport_operation.cargohold method)": [[2, "mable.transport_operation.CargoHold.get_loading_rate", false]], "get_loading_time() (mable.transport_operation.simplevessel method)": [[2, "mable.transport_operation.SimpleVessel.get_loading_time", false]], "get_loading_time() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.get_loading_time", false]], "get_long_lat_dist() (mable.extensions.world_ports.latlongshippingnetwork static method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.get_long_lat_dist", false]], "get_network_distance() (mable.competition.information.companyheadquarters method)": [[3, "mable.competition.information.CompanyHeadquarters.get_network_distance", false]], "get_network_port_or_default() (mable.competition.information.companyheadquarters method)": [[3, "mable.competition.information.CompanyHeadquarters.get_network_port_or_default", false]], "get_next_event() (mable.simulation_environment.world method)": [[2, "mable.simulation_environment.World.get_next_event", false]], "get_port() (mable.simulation_space.structure.networkwithportdict method)": [[7, "mable.simulation_space.structure.NetworkWithPortDict.get_port", false]], "get_port() (mable.simulation_space.structure.shippingnetwork method)": [[7, "mable.simulation_space.structure.ShippingNetwork.get_port", false]], "get_port_or_default() (mable.simulation_space.structure.networkwithportdict method)": [[7, "mable.simulation_space.structure.NetworkWithPortDict.get_port_or_default", false]], "get_port_or_default() (mable.simulation_space.structure.shippingnetwork method)": [[7, "mable.simulation_space.structure.ShippingNetwork.get_port_or_default", false]], "get_ports() (in module mable.extensions.world_ports)": [[5, "mable.extensions.world_ports.get_ports", false]], "get_scheduled_trades() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.get_scheduled_trades", false]], "get_shortest_grid_route_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.get_shortest_grid_route_between_points", false]], "get_shortest_path_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.get_shortest_path_between_points", false]], "get_shortest_route_between_points() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.get_shortest_route_between_points", false]], "get_simple_schedule() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.get_simple_schedule", false]], "get_specification_builder() (in module mable.examples.environment)": [[4, "mable.examples.environment.get_specification_builder", false]], "get_trades() (mable.shipping_market.shipping method)": [[2, "mable.shipping_market.Shipping.get_trades", false]], "get_trades_for_company_copy() (mable.shipping_market.auctionledger method)": [[2, "mable.shipping_market.AuctionLedger.get_trades_for_company_copy", false]], "get_trading_times() (mable.shipping_market.shipping method)": [[2, "mable.shipping_market.Shipping.get_trading_times", false]], "get_travel_time() (mable.extensions.world_ports.worldvessel method)": [[5, "mable.extensions.world_ports.WorldVessel.get_travel_time", false]], "get_travel_time() (mable.transport_operation.simplevessel method)": [[2, "mable.transport_operation.SimpleVessel.get_travel_time", false]], "get_travel_time() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.get_travel_time", false]], "get_unloading_consumption() (mable.extensions.fuel_emissions.vesselengine method)": [[5, "mable.extensions.fuel_emissions.VesselEngine.get_unloading_consumption", false]], "get_unloading_consumption() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.get_unloading_consumption", false]], "get_vessel() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.get_vessel", false]], "get_vessel_aframax() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.get_vessel_aframax", false]], "get_vessel_id() (mable.metrics.metricscollector method)": [[2, "mable.metrics.MetricsCollector.get_vessel_id", false]], "get_vessel_location() (mable.simulation_space.structure.shippingnetwork method)": [[7, "mable.simulation_space.structure.ShippingNetwork.get_vessel_location", false]], "get_vessel_suezmax() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.get_vessel_suezmax", false]], "get_vessel_vlcc() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.get_vessel_vlcc", false]], "global_agent_timeout (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.global_agent_timeout", false]], "globalmetricscollector (class in mable.metrics)": [[2, "mable.metrics.GlobalMetricsCollector", false]], "globalsetup (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.GlobalSetup", false]], "handle_exception() (in module mable.cli)": [[2, "mable.cli.handle_exception", false]], "has_any_load() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.has_any_load", false]], "has_next_event() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.has_next_event", false]], "has_started() (mable.event_management.durationevent method)": [[2, "mable.event_management.DurationEvent.has_started", false]], "headquarters (mable.cargo_bidding.tradingcompany property)": [[2, "mable.cargo_bidding.TradingCompany.headquarters", false]], "headquarters (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.headquarters", false]], "idle_consumption (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.idle_consumption", false]], "idleevent (class in mable.event_management)": [[2, "mable.event_management.IdleEvent", false]], "info (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.info", false]], "inform() (mable.cargo_bidding.mcstcompany method)": [[2, "mable.cargo_bidding.MCSTCompany.inform", false]], "inform() (mable.cargo_bidding.meanscompany method)": [[2, "mable.cargo_bidding.MeansCompany.inform", false]], "inform() (mable.cargo_bidding.tradingcompany method)": [[2, "mable.cargo_bidding.TradingCompany.inform", false]], "inform() (mable.transport_operation.shippingcompany method)": [[2, "mable.transport_operation.ShippingCompany.inform", false]], "inform() (mable.transport_operation.simplecompany method)": [[2, "mable.transport_operation.SimpleCompany.inform", false]], "inform_future_trades() (mable.shipping_market.auctionmarket static method)": [[2, "mable.shipping_market.AuctionMarket.inform_future_trades", false]], "init_from_json_string() (mable.instructions.specifications class method)": [[2, "mable.instructions.Specifications.init_from_json_string", false]], "init_with_engine() (mable.transportation_scheduling.schedule class method)": [[2, "mable.transportation_scheduling.Schedule.init_with_engine", false]], "initialise_trades() (mable.extensions.cargo_distributions.distributionshipping method)": [[5, "mable.extensions.cargo_distributions.DistributionShipping.initialise_trades", false]], "initialise_trades() (mable.shipping_market.shipping method)": [[2, "mable.shipping_market.Shipping.initialise_trades", false]], "initialise_trades() (mable.shipping_market.staticshipping method)": [[2, "mable.shipping_market.StaticShipping.initialise_trades", false]], "is_drop_off (mable.event_management.vesselcargoevent property)": [[2, "mable.event_management.VesselCargoEvent.is_drop_off", false]], "is_empty() (mable.transport_operation.cargohold method)": [[2, "mable.transport_operation.CargoHold.is_empty", false]], "is_laden (mable.event_management.travelevent property)": [[2, "mable.event_management.TravelEvent.is_laden", false]], "is_pickup (mable.event_management.vesselcargoevent property)": [[2, "mable.event_management.VesselCargoEvent.is_pickup", false]], "is_positive_integer() (mable.cli.argumentparserextensions static method)": [[2, "mable.cli.ArgumentParserExtensions.is_positive_integer", false]], "is_valid (mable.transportation_scheduling.currentstate attribute)": [[2, "mable.transportation_scheduling.CurrentState.is_valid", false]], "is_valid_file() (mable.cli.argumentparserextensions static method)": [[2, "mable.cli.ArgumentParserExtensions.is_valid_file", false]], "journey_log (mable.transport_operation.vessel property)": [[2, "mable.transport_operation.Vessel.journey_log", false]], "jsonable (class in mable.util)": [[2, "mable.util.JsonAble", false]], "jsonableencoder (class in mable.util)": [[2, "mable.util.JsonAbleEncoder", false]], "keep_journey_log (mable.transport_operation.vessel.data attribute)": [[2, "mable.transport_operation.Vessel.Data.keep_journey_log", false]], "key_tuple (mable.metrics.vesselkey property)": [[2, "mable.metrics.VesselKey.key_tuple", false]], "keys (mable.shipping_market.auctionledger property)": [[2, "mable.shipping_market.AuctionLedger.keys", false]], "laden_consumption_rate (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.laden_consumption_rate", false]], "latest_drop_off (mable.shipping_market.timewindowtrade property)": [[2, "mable.shipping_market.TimeWindowTrade.latest_drop_off", false]], "latest_drop_off_clean (mable.shipping_market.timewindowtrade property)": [[2, "mable.shipping_market.TimeWindowTrade.latest_drop_off_clean", false]], "latest_pickup (mable.shipping_market.timewindowtrade property)": [[2, "mable.shipping_market.TimeWindowTrade.latest_pickup", false]], "latest_pickup_clean (mable.shipping_market.timewindowtrade property)": [[2, "mable.shipping_market.TimeWindowTrade.latest_pickup_clean", false]], "latitude (mable.extensions.world_ports.latlonglocation property)": [[5, "mable.extensions.world_ports.LatLongLocation.latitude", false]], "latitude (mable.extensions.world_ports.latlongport property)": [[5, "mable.extensions.world_ports.LatLongPort.latitude", false]], "latlongfactory (class in mable.extensions.world_ports)": [[5, "mable.extensions.world_ports.LatLongFactory", false]], "latlonglocation (class in mable.extensions.world_ports)": [[5, "mable.extensions.world_ports.LatLongLocation", false]], "latlongport (class in mable.extensions.world_ports)": [[5, "mable.extensions.world_ports.LatLongPort", false]], "latlongshippingnetwork (class in mable.extensions.world_ports)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork", false]], "ledger (mable.shipping_market.auctionallocationresult attribute)": [[2, "mable.shipping_market.AuctionAllocationResult.ledger", false]], "ledger (mable.shipping_market.auctionledger property)": [[2, "mable.shipping_market.AuctionLedger.ledger", false]], "let_loguru_handle_logging() (in module mable.io.logging_util)": [[6, "mable.io.logging_util.let_loguru_handle_logging", false]], "load_cargo() (mable.transport_operation.cargohold method)": [[2, "mable.transport_operation.CargoHold.load_cargo", false]], "load_cargo() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.load_cargo", false]], "load_distributions() (mable.extensions.cargo_distributions.distributionshipping method)": [[5, "mable.extensions.cargo_distributions.DistributionShipping.load_distributions", false]], "load_module_from_file() (in module mable.competition.generation)": [[3, "mable.competition.generation.load_module_from_file", false]], "loadable_cargo_types() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.loadable_cargo_types", false]], "loading_consumption (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.loading_consumption", false]], "loading_rate (mable.transport_operation.cargocapacity attribute)": [[2, "mable.transport_operation.CargoCapacity.loading_rate", false]], "loading_rate (mable.transport_operation.cargocapacity.data attribute)": [[2, "mable.transport_operation.CargoCapacity.Data.loading_rate", false]], "loading_rate (mable.transport_operation.cargocontainer property)": [[2, "mable.transport_operation.CargoContainer.loading_rate", false]], "location (class in mable.simulation_space.universe)": [[7, "mable.simulation_space.universe.Location", false]], "location (mable.event_management.idleevent property)": [[2, "mable.event_management.IdleEvent.location", false]], "location (mable.event_management.travelevent property)": [[2, "mable.event_management.TravelEvent.location", false]], "location (mable.event_management.vesselcargoevent property)": [[2, "mable.event_management.VesselCargoEvent.location", false]], "location (mable.event_management.vesselevent property)": [[2, "mable.event_management.VesselEvent.location", false]], "location (mable.event_management.vessellocationinformationevent property)": [[2, "mable.event_management.VesselLocationInformationEvent.location", false]], "location (mable.transport_operation.vessel property)": [[2, "mable.transport_operation.Vessel.location", false]], "location (mable.transport_operation.vessel.data attribute)": [[2, "mable.transport_operation.Vessel.Data.location", false]], "log_journey_log_event() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.log_journey_log_event", false]], "logrunner (class in mable.observers)": [[2, "mable.observers.LogRunner", false]], "loguruhandler (class in mable.io.logging_util)": [[6, "mable.io.logging_util.LoguruHandler", false]], "longitude (mable.extensions.world_ports.latlonglocation property)": [[5, "mable.extensions.world_ports.LatLongLocation.longitude", false]], "longitude (mable.extensions.world_ports.latlongport property)": [[5, "mable.extensions.world_ports.LatLongPort.longitude", false]], "mable": [[1, "module-mable", false], [2, "module-mable", false]], "mable.cargo_bidding": [[2, "module-mable.cargo_bidding", false]], "mable.cli": [[2, "module-mable.cli", false]], "mable.competition": [[3, "module-mable.competition", false]], "mable.competition.generation": [[3, "module-mable.competition.generation", false]], "mable.competition.information": [[3, "module-mable.competition.information", false]], "mable.engine": [[2, "module-mable.engine", false]], "mable.event_management": [[2, "module-mable.event_management", false]], "mable.examples": [[4, "module-mable.examples", false]], "mable.examples.companies": [[4, "module-mable.examples.companies", false]], "mable.examples.environment": [[4, "module-mable.examples.environment", false]], "mable.examples.fleets": [[4, "module-mable.examples.fleets", false]], "mable.examples.shipping": [[4, "module-mable.examples.shipping", false]], "mable.extensions": [[5, "module-mable.extensions", false]], "mable.extensions.cargo_distributions": [[5, "module-mable.extensions.cargo_distributions", false]], "mable.extensions.fuel_emissions": [[5, "module-mable.extensions.fuel_emissions", false]], "mable.extensions.world_ports": [[5, "module-mable.extensions.world_ports", false]], "mable.global_setup": [[2, "module-mable.global_setup", false]], "mable.instructions": [[2, "module-mable.instructions", false]], "mable.io": [[6, "module-mable.io", false]], "mable.io.logging_util": [[6, "module-mable.io.logging_util", false]], "mable.metrics": [[2, "module-mable.metrics", false]], "mable.observers": [[2, "module-mable.observers", false]], "mable.shipping_market": [[2, "module-mable.shipping_market", false]], "mable.simulation_de_serialisation": [[2, "module-mable.simulation_de_serialisation", false]], "mable.simulation_environment": [[2, "module-mable.simulation_environment", false]], "mable.simulation_generation": [[2, "module-mable.simulation_generation", false]], "mable.simulation_space": [[7, "module-mable.simulation_space", false]], "mable.simulation_space.structure": [[7, "module-mable.simulation_space.structure", false]], "mable.simulation_space.universe": [[7, "module-mable.simulation_space.universe", false]], "mable.transport_operation": [[2, "module-mable.transport_operation", false]], "mable.transportation_scheduling": [[2, "module-mable.transportation_scheduling", false]], "mable.util": [[2, "module-mable.util", false]], "main() (in module mable.cli)": [[2, "mable.cli.main", false]], "market (class in mable.shipping_market)": [[2, "mable.shipping_market.Market", false]], "market (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.market", false]], "market_authority (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.market_authority", false]], "marketauthority (class in mable.competition.information)": [[3, "mable.competition.information.MarketAuthority", false]], "mcstcompany (class in mable.cargo_bidding)": [[2, "mable.cargo_bidding.MCSTCompany", false]], "meanscompany (class in mable.cargo_bidding)": [[2, "mable.cargo_bidding.MeansCompany", false]], "metricdict (class in mable.metrics)": [[2, "mable.metrics.MetricDict", false]], "metrics (mable.observers.metricsobserver property)": [[2, "mable.observers.MetricsObserver.metrics", false]], "metricscollector (class in mable.metrics)": [[2, "mable.metrics.MetricsCollector", false]], "metricsobserver (class in mable.observers)": [[2, "mable.observers.MetricsObserver", false]], "mixed_fleet() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.mixed_fleet", false]], "module": [[1, "module-mable", false], [2, "module-mable", false], [2, "module-mable.cargo_bidding", false], [2, "module-mable.cli", false], [2, "module-mable.engine", false], [2, "module-mable.event_management", false], [2, "module-mable.global_setup", false], [2, "module-mable.instructions", false], [2, "module-mable.metrics", false], [2, "module-mable.observers", false], [2, "module-mable.shipping_market", false], [2, "module-mable.simulation_de_serialisation", false], [2, "module-mable.simulation_environment", false], [2, "module-mable.simulation_generation", false], [2, "module-mable.transport_operation", false], [2, "module-mable.transportation_scheduling", false], [2, "module-mable.util", false], [3, "module-mable.competition", false], [3, "module-mable.competition.generation", false], [3, "module-mable.competition.information", false], [4, "module-mable.examples", false], [4, "module-mable.examples.companies", false], [4, "module-mable.examples.environment", false], [4, "module-mable.examples.fleets", false], [4, "module-mable.examples.shipping", false], [5, "module-mable.extensions", false], [5, "module-mable.extensions.cargo_distributions", false], [5, "module-mable.extensions.fuel_emissions", false], [5, "module-mable.extensions.world_ports", false], [6, "module-mable.io", false], [6, "module-mable.io.logging_util", false], [7, "module-mable.simulation_space", false], [7, "module-mable.simulation_space.structure", false], [7, "module-mable.simulation_space.universe", false]], "myarchenemy (class in mable.examples.companies)": [[4, "mable.examples.companies.MyArchEnemy", false]], "myarchenemy.data (class in mable.examples.companies)": [[4, "mable.examples.companies.MyArchEnemy.Data", false]], "myarchenemy.data.schema (class in mable.examples.companies)": [[4, "mable.examples.companies.MyArchEnemy.Data.Schema", false]], "name (mable.extensions.fuel_emissions.fuel attribute)": [[5, "mable.extensions.fuel_emissions.Fuel.name", false]], "name (mable.simulation_space.universe.location property)": [[7, "mable.simulation_space.universe.Location.name", false]], "name (mable.transport_operation.shippingcompany property)": [[2, "mable.transport_operation.ShippingCompany.name", false]], "name (mable.transport_operation.shippingcompany.data attribute)": [[2, "mable.transport_operation.ShippingCompany.Data.name", false]], "name (mable.transport_operation.vessel property)": [[2, "mable.transport_operation.Vessel.name", false]], "name (mable.transport_operation.vessel.data attribute)": [[2, "mable.transport_operation.Vessel.Data.name", false]], "network (mable.simulation_environment.world property)": [[2, "mable.simulation_environment.World.network", false]], "networkwithportdict (class in mable.simulation_space.structure)": [[7, "mable.simulation_space.structure.NetworkWithPortDict", false]], "next() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.next", false]], "nopathsexception": [[5, "mable.extensions.world_ports.NoPathsException", false]], "not_realised (mable.shipping_market.tradestatus attribute)": [[2, "mable.shipping_market.TradeStatus.NOT_REALISED", false]], "notify() (mable.event_management.eventobserver method)": [[2, "mable.event_management.EventObserver.notify", false]], "notify() (mable.observers.auctionmetricsobserver method)": [[2, "mable.observers.AuctionMetricsObserver.notify", false]], "notify() (mable.observers.auctionoutcomeobserver method)": [[2, "mable.observers.AuctionOutcomeObserver.notify", false]], "notify() (mable.observers.auctionoutcomeprintobserver method)": [[2, "mable.observers.AuctionOutcomePrintObserver.notify", false]], "notify() (mable.observers.eventfuelprintobserver method)": [[2, "mable.observers.EventFuelPrintObserver.notify", false]], "notify() (mable.observers.metricsobserver method)": [[2, "mable.observers.MetricsObserver.notify", false]], "notify() (mable.observers.tradedeliveryobserver method)": [[2, "mable.observers.TradeDeliveryObserver.notify", false]], "notify_event_observer() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.notify_event_observer", false]], "onjourney (class in mable.simulation_space.universe)": [[7, "mable.simulation_space.universe.OnJourney", false]], "opts (mable.examples.companies.myarchenemy.data.schema attribute)": [[4, "mable.examples.companies.MyArchEnemy.Data.Schema.opts", false]], "opts (mable.examples.companies.thescheduler.data.schema attribute)": [[4, "mable.examples.companies.TheScheduler.Data.Schema.opts", false]], "opts (mable.extensions.fuel_emissions.consumptionrate.data.schema attribute)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.Data.Schema.opts", false]], "opts (mable.extensions.fuel_emissions.vesselengine.data.schema attribute)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.Schema.opts", false]], "opts (mable.extensions.fuel_emissions.vesselwithengine.data.schema attribute)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.Data.Schema.opts", false]], "opts (mable.simulation_de_serialisation.dataschema attribute)": [[2, "mable.simulation_de_serialisation.DataSchema.opts", false]], "opts (mable.transport_operation.cargocapacity.data.schema attribute)": [[2, "mable.transport_operation.CargoCapacity.Data.Schema.opts", false]], "opts (mable.transport_operation.cargoholdschema attribute)": [[2, "mable.transport_operation.CargoHoldSchema.opts", false]], "opts (mable.transport_operation.shippingcompany.data.schema attribute)": [[2, "mable.transport_operation.ShippingCompany.Data.Schema.opts", false]], "opts (mable.transport_operation.simplevessel.data.schema attribute)": [[2, "mable.transport_operation.SimpleVessel.Data.Schema.opts", false]], "opts (mable.transport_operation.vessel.data.schema attribute)": [[2, "mable.transport_operation.Vessel.Data.Schema.opts", false]], "origin (mable.simulation_space.universe.onjourney attribute)": [[7, "mable.simulation_space.universe.OnJourney.origin", false]], "origin_port (mable.shipping_market.trade attribute)": [[2, "mable.shipping_market.Trade.origin_port", false]], "other_data (mable.event_management.eventexecutiondata attribute)": [[2, "mable.event_management.EventExecutionData.other_data", false]], "output_directory (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.output_directory", false]], "payment (mable.shipping_market.contract attribute)": [[2, "mable.shipping_market.Contract.payment", false]], "performed_time() (mable.event_management.durationevent method)": [[2, "mable.event_management.DurationEvent.performed_time", false]], "pick_up (mable.transportation_scheduling.transportationsourcedestinationindicator attribute)": [[2, "mable.transportation_scheduling.TransportationSourceDestinationIndicator.PICK_UP", false]], "pondplayer (class in mable.examples.companies)": [[4, "mable.examples.companies.PondPlayer", false]], "pop() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.pop", false]], "port (class in mable.simulation_space.universe)": [[7, "mable.simulation_space.universe.Port", false]], "ports (mable.simulation_space.structure.networkwithportdict property)": [[7, "mable.simulation_space.structure.NetworkWithPortDict.ports", false]], "post_run_cmds (mable.engine.simulationengine attribute)": [[2, "mable.engine.SimulationEngine.POST_RUN_CMDS", false]], "pre_inform() (mable.transport_operation.shippingcompany method)": [[2, "mable.transport_operation.ShippingCompany.pre_inform", false]], "pre_inform() (mable.transport_operation.simplecompany method)": [[2, "mable.transport_operation.SimpleCompany.pre_inform", false]], "pre_run_cmds (mable.engine.simulationengine attribute)": [[2, "mable.engine.SimulationEngine.PRE_RUN_CMDS", false]], "pre_run_inform_vessel_locations() (in module mable.engine)": [[2, "mable.engine.pre_run_inform_vessel_locations", false]], "pre_run_place_vessels() (in module mable.engine)": [[2, "mable.engine.pre_run_place_vessels", false]], "predict_cost() (mable.examples.companies.thescheduler method)": [[4, "mable.examples.companies.TheScheduler.predict_cost", false]], "price (mable.extensions.fuel_emissions.fuel attribute)": [[5, "mable.extensions.fuel_emissions.Fuel.price", false]], "probability (mable.shipping_market.trade attribute)": [[2, "mable.shipping_market.Trade.probability", false]], "profit_factor (mable.examples.companies.myarchenemy.data attribute)": [[4, "mable.examples.companies.MyArchEnemy.Data.profit_factor", false]], "profit_factor (mable.examples.companies.thescheduler.data attribute)": [[4, "mable.examples.companies.TheScheduler.Data.profit_factor", false]], "propelling_engine (mable.extensions.fuel_emissions.vesselwithengine property)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.propelling_engine", false]], "propelling_engine (mable.extensions.fuel_emissions.vesselwithengine.data attribute)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.Data.propelling_engine", false]], "propose_schedules() (mable.examples.companies.myarchenemy method)": [[4, "mable.examples.companies.MyArchEnemy.propose_schedules", false]], "propose_schedules() (mable.examples.companies.thescheduler method)": [[4, "mable.examples.companies.TheScheduler.propose_schedules", false]], "propose_schedules() (mable.transport_operation.simplecompany method)": [[2, "mable.transport_operation.SimpleCompany.propose_schedules", false]], "put() (mable.event_management.eventqueue method)": [[2, "mable.event_management.EventQueue.put", false]], "random (mable.simulation_environment.world property)": [[2, "mable.simulation_environment.World.random", false]], "receive() (mable.cargo_bidding.tradingcompany method)": [[2, "mable.cargo_bidding.TradingCompany.receive", false]], "receive() (mable.examples.companies.pondplayer method)": [[4, "mable.examples.companies.PondPlayer.receive", false]], "receive() (mable.examples.companies.thescheduler method)": [[4, "mable.examples.companies.TheScheduler.receive", false]], "receive() (mable.transport_operation.shippingcompany method)": [[2, "mable.transport_operation.ShippingCompany.receive", false]], "receive() (mable.transport_operation.simplecompany method)": [[2, "mable.transport_operation.SimpleCompany.receive", false]], "regionalmetricscollector (class in mable.metrics)": [[2, "mable.metrics.RegionalMetricsCollector", false]], "register() (mable.simulation_de_serialisation.simulationspecification class method)": [[2, "mable.simulation_de_serialisation.SimulationSpecification.register", false]], "register_by_type_name() (mable.simulation_de_serialisation.simulationspecification class method)": [[2, "mable.simulation_de_serialisation.SimulationSpecification.register_by_type_name", false]], "register_event_observer() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.register_event_observer", false]], "rejected (mable.shipping_market.tradestatus attribute)": [[2, "mable.shipping_market.TradeStatus.REJECTED", false]], "remove() (mable.event_management.eventqueue method)": [[2, "mable.event_management.EventQueue.remove", false]], "remove_canals_from_graph() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.remove_canals_from_graph", false]], "route (class in mable.extensions.world_ports)": [[5, "mable.extensions.world_ports.Route", false]], "run() (mable.engine.engineprepostrunner method)": [[2, "mable.engine.EnginePrePostRunner.run", false]], "run() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.run", false]], "run() (mable.observers.logrunner method)": [[2, "mable.observers.LogRunner.run", false]], "sample_cargo_weight() (mable.extensions.cargo_distributions.distributionshipping static method)": [[5, "mable.extensions.cargo_distributions.DistributionShipping.sample_cargo_weight", false]], "sample_cargoes_from_port_distributions() (mable.extensions.cargo_distributions.distributionshipping method)": [[5, "mable.extensions.cargo_distributions.DistributionShipping.sample_cargoes_from_port_distributions", false]], "sample_time_windows() (mable.extensions.cargo_distributions.distributionshipping static method)": [[5, "mable.extensions.cargo_distributions.DistributionShipping.sample_time_windows", false]], "sanitised_ledger (mable.shipping_market.auctionledger property)": [[2, "mable.shipping_market.AuctionLedger.sanitised_ledger", false]], "scenarios (mable.extensions.world_ports.latlongshippingnetwork property)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.scenarios", false]], "schedule (class in mable.transportation_scheduling)": [[2, "mable.transportation_scheduling.Schedule", false]], "schedule (mable.transport_operation.vessel property)": [[2, "mable.transport_operation.Vessel.schedule", false]], "scheduled_trades (mable.transport_operation.scheduleproposal attribute)": [[2, "mable.transport_operation.ScheduleProposal.scheduled_trades", false]], "scheduleproposal (class in mable.transport_operation)": [[2, "mable.transport_operation.ScheduleProposal", false]], "schedules (mable.transport_operation.scheduleproposal attribute)": [[2, "mable.transport_operation.ScheduleProposal.schedules", false]], "schema (mable.simulation_de_serialisation.schemaprotocol attribute)": [[2, "mable.simulation_de_serialisation.SchemaProtocol.Schema", false]], "schemaprotocol (class in mable.simulation_de_serialisation)": [[2, "mable.simulation_de_serialisation.SchemaProtocol", false]], "select_task() (in module mable.cli)": [[2, "mable.cli.select_task", false]], "set_engine() (mable.simulation_environment.simulationengineaware method)": [[2, "mable.simulation_environment.SimulationEngineAware.set_engine", false]], "set_engine() (mable.simulation_environment.world method)": [[2, "mable.simulation_environment.World.set_engine", false]], "set_engine() (mable.transport_operation.shippingcompany method)": [[2, "mable.transport_operation.ShippingCompany.set_engine", false]], "set_engine() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.set_engine", false]], "set_engines() (mable.competition.generation.competitionbuilder method)": [[3, "mable.competition.generation.CompetitionBuilder.set_engines", false]], "set_engines() (mable.simulation_generation.simulationbuilder method)": [[2, "mable.simulation_generation.SimulationBuilder.set_engines", false]], "set_item() (mable.extensions.fuel_emissions.globalsetup class method)": [[5, "mable.extensions.fuel_emissions.GlobalSetup.set_item", false]], "shipping (class in mable.shipping_market)": [[2, "mable.shipping_market.Shipping", false]], "shipping (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.shipping", false]], "shipping_companies (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.shipping_companies", false]], "shippingcompany (class in mable.transport_operation)": [[2, "mable.transport_operation.ShippingCompany", false]], "shippingcompany.data (class in mable.transport_operation)": [[2, "mable.transport_operation.ShippingCompany.Data", false]], "shippingcompany.data.schema (class in mable.transport_operation)": [[2, "mable.transport_operation.ShippingCompany.Data.Schema", false]], "shippingnetwork (class in mable.simulation_space.structure)": [[7, "mable.simulation_space.structure.ShippingNetwork", false]], "simplecompany (class in mable.transport_operation)": [[2, "mable.transport_operation.SimpleCompany", false]], "simplemarket (class in mable.shipping_market)": [[2, "mable.shipping_market.SimpleMarket", false]], "simplevessel (class in mable.transport_operation)": [[2, "mable.transport_operation.SimpleVessel", false]], "simplevessel.data (class in mable.transport_operation)": [[2, "mable.transport_operation.SimpleVessel.Data", false]], "simplevessel.data.schema (class in mable.transport_operation)": [[2, "mable.transport_operation.SimpleVessel.Data.Schema", false]], "simulationbuilder (class in mable.simulation_generation)": [[2, "mable.simulation_generation.SimulationBuilder", false]], "simulationengine (class in mable.engine)": [[2, "mable.engine.SimulationEngine", false]], "simulationengineaware (class in mable.simulation_environment)": [[2, "mable.simulation_environment.SimulationEngineAware", false]], "simulationspecification (class in mable.simulation_de_serialisation)": [[2, "mable.simulation_de_serialisation.SimulationSpecification", false]], "smooth_route() (mable.extensions.world_ports.latlongshippingnetwork method)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.smooth_route", false]], "specifications (class in mable.instructions)": [[2, "mable.instructions.Specifications", false]], "specifications.builder (class in mable.instructions)": [[2, "mable.instructions.Specifications.Builder", false]], "specified_laden_balast_consumption() (in module mable.examples.fleets)": [[4, "mable.examples.fleets.specified_laden_balast_consumption", false]], "speed (mable.transport_operation.simplevessel property)": [[2, "mable.transport_operation.SimpleVessel.speed", false]], "speed (mable.transport_operation.simplevessel.data attribute)": [[2, "mable.transport_operation.SimpleVessel.Data.speed", false]], "speed_power (mable.extensions.fuel_emissions.consumptionrate attribute)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.speed_power", false]], "speed_power (mable.extensions.fuel_emissions.consumptionrate.data attribute)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.Data.speed_power", false]], "start (mable.transportation_scheduling.transportationstartfinishindicator attribute)": [[2, "mable.transportation_scheduling.TransportationStartFinishIndicator.START", false]], "start_next_event() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.start_next_event", false]], "start_time (mable.simulation_space.universe.onjourney attribute)": [[7, "mable.simulation_space.universe.OnJourney.start_time", false]], "staticshipping (class in mable.shipping_market)": [[2, "mable.shipping_market.StaticShipping", false]], "status (mable.shipping_market.trade attribute)": [[2, "mable.shipping_market.Trade.status", false]], "task_metrics_overview() (in module mable.cli)": [[2, "mable.cli.task_metrics_overview", false]], "thescheduler (class in mable.examples.companies)": [[4, "mable.examples.companies.TheScheduler", false]], "thescheduler.data (class in mable.examples.companies)": [[4, "mable.examples.companies.TheScheduler.Data", false]], "thescheduler.data.schema (class in mable.examples.companies)": [[4, "mable.examples.companies.TheScheduler.Data.Schema", false]], "time (mable.event_management.event property)": [[2, "mable.event_management.Event.time", false]], "time (mable.event_management.eventitem attribute)": [[2, "mable.event_management.EventItem.time", false]], "time (mable.shipping_market.trade attribute)": [[2, "mable.shipping_market.Trade.time", false]], "time_started (mable.event_management.durationevent property)": [[2, "mable.event_management.DurationEvent.time_started", false]], "time_window (mable.shipping_market.timewindowtrade attribute)": [[2, "mable.shipping_market.TimeWindowTrade.time_window", false]], "timewindowarrivalevent (class in mable.extensions.cargo_distributions)": [[5, "mable.extensions.cargo_distributions.TimeWindowArrivalEvent", false]], "timewindowtrade (class in mable.shipping_market)": [[2, "mable.shipping_market.TimeWindowTrade", false]], "to_json() (mable.extensions.fuel_emissions.consumptionrate method)": [[5, "mable.extensions.fuel_emissions.ConsumptionRate.to_json", false]], "to_json() (mable.extensions.fuel_emissions.fuel method)": [[5, "mable.extensions.fuel_emissions.Fuel.to_json", false]], "to_json() (mable.extensions.fuel_emissions.vesselengine method)": [[5, "mable.extensions.fuel_emissions.VesselEngine.to_json", false]], "to_json() (mable.extensions.fuel_emissions.vesselwithengine method)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.to_json", false]], "to_json() (mable.extensions.world_ports.latlongport method)": [[5, "mable.extensions.world_ports.LatLongPort.to_json", false]], "to_json() (mable.metrics.metricscollector method)": [[2, "mable.metrics.MetricsCollector.to_json", false]], "to_json() (mable.shipping_market.contract method)": [[2, "mable.shipping_market.Contract.to_json", false]], "to_json() (mable.shipping_market.trade method)": [[2, "mable.shipping_market.Trade.to_json", false]], "to_json() (mable.simulation_space.universe.port method)": [[7, "mable.simulation_space.universe.Port.to_json", false]], "to_json() (mable.transport_operation.cargocapacity method)": [[2, "mable.transport_operation.CargoCapacity.to_json", false]], "to_json() (mable.transport_operation.simplevessel method)": [[2, "mable.transport_operation.SimpleVessel.to_json", false]], "to_json() (mable.util.jsonable method)": [[2, "mable.util.JsonAble.to_json", false]], "trade (class in mable.shipping_market)": [[2, "mable.shipping_market.Trade", false]], "trade (mable.event_management.vesselcargoevent property)": [[2, "mable.event_management.VesselCargoEvent.trade", false]], "trade (mable.shipping_market.contract attribute)": [[2, "mable.shipping_market.Contract.trade", false]], "trade (mable.transport_operation.bid attribute)": [[2, "mable.transport_operation.Bid.trade", false]], "trade_fulfilled() (mable.competition.information.marketauthority method)": [[3, "mable.competition.information.MarketAuthority.trade_fulfilled", false]], "trade_occurrence_frequency (mable.extensions.cargo_distributions.distributionshipping property)": [[5, "mable.extensions.cargo_distributions.DistributionShipping.trade_occurrence_frequency", false]], "tradedeliveryobserver (class in mable.observers)": [[2, "mable.observers.TradeDeliveryObserver", false]], "tradestatus (class in mable.shipping_market)": [[2, "mable.shipping_market.TradeStatus", false]], "tradingcompany (class in mable.cargo_bidding)": [[2, "mable.cargo_bidding.TradingCompany", false]], "transportationsourcedestinationindicator (class in mable.transportation_scheduling)": [[2, "mable.transportation_scheduling.TransportationSourceDestinationIndicator", false]], "transportationstartfinishindicator (class in mable.transportation_scheduling)": [[2, "mable.transportation_scheduling.TransportationStartFinishIndicator", false]], "travelevent (class in mable.event_management)": [[2, "mable.event_management.TravelEvent", false]], "unallocated_trades (mable.shipping_market.auctionallocationresult attribute)": [[2, "mable.shipping_market.AuctionAllocationResult.unallocated_trades", false]], "unitshippingnetwork (class in mable.simulation_space.structure)": [[7, "mable.simulation_space.structure.UnitShippingNetwork", false]], "unknown (mable.shipping_market.tradestatus attribute)": [[2, "mable.shipping_market.TradeStatus.UNKNOWN", false]], "unload_cargo() (mable.transport_operation.cargohold method)": [[2, "mable.transport_operation.CargoHold.unload_cargo", false]], "unload_cargo() (mable.transport_operation.vessel method)": [[2, "mable.transport_operation.Vessel.unload_cargo", false]], "unloading_consumption (mable.extensions.fuel_emissions.vesselengine.data attribute)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.unloading_consumption", false]], "unregister_event_observer() (mable.engine.simulationengine method)": [[2, "mable.engine.SimulationEngine.unregister_event_observer", false]], "verify_schedule() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.verify_schedule", false]], "verify_schedule_cargo() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.verify_schedule_cargo", false]], "verify_schedule_time() (mable.transportation_scheduling.schedule method)": [[2, "mable.transportation_scheduling.Schedule.verify_schedule_time", false]], "vessel (class in mable.transport_operation)": [[2, "mable.transport_operation.Vessel", false]], "vessel (mable.event_management.vesselevent property)": [[2, "mable.event_management.VesselEvent.vessel", false]], "vessel (mable.transportation_scheduling.currentstate attribute)": [[2, "mable.transportation_scheduling.CurrentState.vessel", false]], "vessel.data (class in mable.transport_operation)": [[2, "mable.transport_operation.Vessel.Data", false]], "vessel.data.schema (class in mable.transport_operation)": [[2, "mable.transport_operation.Vessel.Data.Schema", false]], "vessel_id (mable.metrics.vesselkey property)": [[2, "mable.metrics.VesselKey.vessel_id", false]], "vesselcargoevent (class in mable.event_management)": [[2, "mable.event_management.VesselCargoEvent", false]], "vesselengine (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.VesselEngine", false]], "vesselengine.data (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data", false]], "vesselengine.data.schema (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.VesselEngine.Data.Schema", false]], "vesselevent (class in mable.event_management)": [[2, "mable.event_management.VesselEvent", false]], "vesselkey (class in mable.metrics)": [[2, "mable.metrics.VesselKey", false]], "vessellocationinformationevent (class in mable.event_management)": [[2, "mable.event_management.VesselLocationInformationEvent", false]], "vesselwithengine (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine", false]], "vesselwithengine.data (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.Data", false]], "vesselwithengine.data.schema (class in mable.extensions.fuel_emissions)": [[5, "mable.extensions.fuel_emissions.VesselWithEngine.Data.Schema", false]], "world (class in mable.simulation_environment)": [[2, "mable.simulation_environment.World", false]], "world (mable.engine.simulationengine property)": [[2, "mable.engine.SimulationEngine.world", false]], "world_graph (mable.extensions.world_ports.latlongshippingnetwork property)": [[5, "mable.extensions.world_ports.LatLongShippingNetwork.world_graph", false]], "worldvessel (class in mable.extensions.world_ports)": [[5, "mable.extensions.world_ports.WorldVessel", false]], "x (mable.simulation_space.universe.location property)": [[7, "mable.simulation_space.universe.Location.x", false]], "y (mable.simulation_space.universe.location property)": [[7, "mable.simulation_space.universe.Location.y", false]]}, "objects": {"": [[2, 0, 0, "-", "mable"]], "mable": [[2, 0, 0, "-", "cargo_bidding"], [2, 0, 0, "-", "cli"], [3, 0, 0, "-", "competition"], [2, 0, 0, "-", "engine"], [2, 0, 0, "-", "event_management"], [4, 0, 0, "-", "examples"], [5, 0, 0, "-", "extensions"], [2, 0, 0, "-", "global_setup"], [2, 0, 0, "-", "instructions"], [6, 0, 0, "-", "io"], [2, 0, 0, "-", "metrics"], [2, 0, 0, "-", "observers"], [2, 0, 0, "-", "shipping_market"], [2, 0, 0, "-", "simulation_de_serialisation"], [2, 0, 0, "-", "simulation_environment"], [2, 0, 0, "-", "simulation_generation"], [7, 0, 0, "-", "simulation_space"], [2, 0, 0, "-", "transport_operation"], [2, 0, 0, "-", "transportation_scheduling"], [2, 0, 0, "-", "util"]], "mable.cargo_bidding": [[2, 1, 1, "", "MCSTCompany"], [2, 1, 1, "", "MeansCompany"], [2, 1, 1, "", "TradingCompany"]], "mable.cargo_bidding.MCSTCompany": [[2, 2, 1, "", "inform"]], "mable.cargo_bidding.MCSTCompany.inform.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "auction_ledger"], [2, 3, 1, "", "kwargs"], [2, 3, 1, "", "trades"]], "mable.cargo_bidding.MeansCompany": [[2, 2, 1, "", "inform"]], "mable.cargo_bidding.MeansCompany.inform.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "auction_ledger"], [2, 3, 1, "", "kwargs"], [2, 3, 1, "", "trades"]], "mable.cargo_bidding.TradingCompany": [[2, 2, 1, "", "__init__"], [2, 4, 1, "", "fleet"], [2, 4, 1, "", "headquarters"], [2, 2, 1, "", "inform"], [2, 2, 1, "", "receive"]], "mable.cargo_bidding.TradingCompany.inform.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"], [2, 3, 1, "", "trades"]], "mable.cargo_bidding.TradingCompany.params": [[2, 3, 1, "", "fleet"], [2, 3, 1, "", "name"]], "mable.cargo_bidding.TradingCompany.receive.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "auction_ledger"], [2, 3, 1, "", "contracts"], [2, 3, 1, "", "kwargs"]], "mable.cli": [[2, 1, 1, "", "ArgumentParserExtensions"], [2, 5, 1, "", "handle_exception"], [2, 5, 1, "", "main"], [2, 5, 1, "", "select_task"], [2, 5, 1, "", "task_metrics_overview"]], "mable.cli.ArgumentParserExtensions": [[2, 2, 1, "", "is_positive_integer"], [2, 2, 1, "", "is_valid_file"]], "mable.cli.ArgumentParserExtensions.is_positive_integer.params": [[2, 3, 1, "", "parser"], [2, 3, 1, "", "value"]], "mable.cli.ArgumentParserExtensions.is_valid_file.params": [[2, 3, 1, "", "filename"], [2, 3, 1, "", "parser"]], "mable.cli.select_task.params": [[2, 3, 1, "", "parsed_args"]], "mable.cli.task_metrics_overview.params": [[2, 3, 1, "", "parsed_args"]], "mable.competition": [[3, 0, 0, "-", "generation"], [3, 0, 0, "-", "information"]], "mable.competition.generation": [[3, 1, 1, "", "AuctionCargoEvent"], [3, 1, 1, "", "AuctionClassFactory"], [3, 1, 1, "", "AuctionSimulationEngine"], [3, 1, 1, "", "CompetitionBuilder"], [3, 5, 1, "", "load_module_from_file"]], "mable.competition.generation.AuctionCargoEvent": [[3, 2, 1, "", "__init__"], [3, 4, 1, "", "allocation_result"], [3, 2, 1, "", "event_action"]], "mable.competition.generation.AuctionCargoEvent.event_action.params": [[3, 3, 1, "", "engine"]], "mable.competition.generation.AuctionCargoEvent.params": [[3, 3, 1, "", "info"], [3, 3, 1, "", "time"]], "mable.competition.generation.AuctionClassFactory": [[3, 2, 1, "", "generate_engine"], [3, 2, 1, "", "generate_event_cargo"], [3, 2, 1, "", "generate_market"], [3, 2, 1, "", "generate_shipping"]], "mable.competition.generation.AuctionClassFactory.generate_engine.params": [[3, 3, 1, "", "args"], [3, 3, 1, "", "kwargs"]], "mable.competition.generation.AuctionClassFactory.generate_event_cargo.params": [[3, 3, 1, "", "args"], [3, 3, 1, "", "kwargs"]], "mable.competition.generation.AuctionClassFactory.generate_market.params": [[3, 3, 1, "", "args"], [3, 3, 1, "", "kwargs"]], "mable.competition.generation.AuctionClassFactory.generate_shipping.params": [[3, 3, 1, "", "args"], [3, 3, 1, "", "kwargs"]], "mable.competition.generation.CompetitionBuilder": [[3, 2, 1, "", "generate_fleet"], [3, 2, 1, "", "generate_shipping_companies"], [3, 2, 1, "", "set_engines"]], "mable.competition.generation.CompetitionBuilder.generate_fleet.params": [[3, 3, 1, "", "args"], [3, 3, 1, "", "kwargs"]], "mable.competition.generation.CompetitionBuilder.generate_shipping_companies.params": [[3, 3, 1, "", "args"], [3, 3, 1, "", "kwargs"]], "mable.competition.information": [[3, 1, 1, "", "CompanyHeadquarters"], [3, 1, 1, "", "MarketAuthority"]], "mable.competition.information.CompanyHeadquarters": [[3, 2, 1, "", "__init__"], [3, 4, 1, "", "current_time"], [3, 2, 1, "", "get_companies"], [3, 2, 1, "", "get_journey_location"], [3, 2, 1, "", "get_network_distance"], [3, 2, 1, "", "get_network_port_or_default"]], "mable.competition.information.CompanyHeadquarters.get_journey_location.params": [[3, 3, 1, "", "journey"], [3, 3, 1, "", "time"], [3, 3, 1, "", "vessel"]], "mable.competition.information.CompanyHeadquarters.get_network_distance.params": [[3, 3, 1, "", "location_one"], [3, 3, 1, "", "location_two"]], "mable.competition.information.CompanyHeadquarters.get_network_port_or_default.params": [[3, 3, 1, "", "default"], [3, 3, 1, "", "port_name"]], "mable.competition.information.CompanyHeadquarters.params": [[3, 3, 1, "", "simulation_engine"]], "mable.competition.information.MarketAuthority": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_allocation_results"], [3, 4, 1, "", "contracts_per_company"], [3, 2, 1, "", "trade_fulfilled"]], "mable.competition.information.MarketAuthority.add_allocation_results.params": [[3, 3, 1, "", "allocation_results"]], "mable.competition.information.MarketAuthority.trade_fulfilled.params": [[3, 3, 1, "", "company"], [3, 3, 1, "", "trade"]], "mable.engine": [[2, 1, 1, "", "EnginePrePostRunner"], [2, 1, 1, "", "SimulationEngine"], [2, 5, 1, "", "pre_run_inform_vessel_locations"], [2, 5, 1, "", "pre_run_place_vessels"]], "mable.engine.EnginePrePostRunner": [[2, 2, 1, "", "run"]], "mable.engine.SimulationEngine": [[2, 6, 1, "", "POST_RUN_CMDS"], [2, 6, 1, "", "PRE_RUN_CMDS"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_new_schedules"], [2, 2, 1, "", "apply_new_schedules"], [2, 4, 1, "", "class_factory"], [2, 4, 1, "", "event_queue"], [2, 2, 1, "", "find_company_for_vessel"], [2, 2, 1, "", "get_event_observers"], [2, 4, 1, "", "global_agent_timeout"], [2, 4, 1, "", "headquarters"], [2, 4, 1, "", "info"], [2, 4, 1, "", "market"], [2, 4, 1, "", "market_authority"], [2, 2, 1, "", "notify_event_observer"], [2, 4, 1, "", "output_directory"], [2, 2, 1, "", "register_event_observer"], [2, 2, 1, "", "run"], [2, 4, 1, "", "shipping"], [2, 4, 1, "", "shipping_companies"], [2, 2, 1, "", "unregister_event_observer"], [2, 4, 1, "", "world"]], "mable.engine.SimulationEngine.add_new_schedules.params": [[2, 3, 1, "", "company"], [2, 3, 1, "", "schedules"]], "mable.engine.SimulationEngine.apply_new_schedules.params": [[2, 3, 1, "", "distribution_ledger"]], "mable.engine.SimulationEngine.find_company_for_vessel.params": [[2, 3, 1, "", "vessel"]], "mable.engine.SimulationEngine.notify_event_observer.params": [[2, 3, 1, "", "data"], [2, 3, 1, "", "event"]], "mable.engine.SimulationEngine.params": [[2, 3, 1, "", "cargo_generation"], [2, 3, 1, "", "cargo_market"], [2, 3, 1, "", "class_factory"], [2, 3, 1, "", "global_agent_timeout"], [2, 3, 1, "", "info"], [2, 3, 1, "", "output_directory"], [2, 3, 1, "", "post_run_cmds"], [2, 3, 1, "", "pre_run_cmds"], [2, 3, 1, "", "shipping_companies"], [2, 3, 1, "", "world"]], "mable.engine.SimulationEngine.register_event_observer.params": [[2, 3, 1, "", "observer"]], "mable.engine.SimulationEngine.unregister_event_observer.params": [[2, 3, 1, "", "observer"]], "mable.event_management": [[2, 1, 1, "", "ArrivalEvent"], [2, 1, 1, "", "CargoAnnouncementEvent"], [2, 1, 1, "", "CargoEvent"], [2, 1, 1, "", "CargoTransferEvent"], [2, 1, 1, "", "DurationEvent"], [2, 1, 1, "", "Event"], [2, 1, 1, "", "EventExecutionData"], [2, 1, 1, "", "EventItem"], [2, 1, 1, "", "EventObserver"], [2, 1, 1, "", "EventQueue"], [2, 1, 1, "", "FirstCargoAnnouncementEvent"], [2, 1, 1, "", "IdleEvent"], [2, 1, 1, "", "TravelEvent"], [2, 1, 1, "", "VesselCargoEvent"], [2, 1, 1, "", "VesselEvent"], [2, 1, 1, "", "VesselLocationInformationEvent"]], "mable.event_management.ArrivalEvent": [[2, 2, 1, "", "distance"], [2, 2, 1, "", "event_action"]], "mable.event_management.ArrivalEvent.distance.params": [[2, 3, 1, "", "engine"]], "mable.event_management.ArrivalEvent.event_action.params": [[2, 3, 1, "", "engine"]], "mable.event_management.CargoAnnouncementEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "event_action"]], "mable.event_management.CargoAnnouncementEvent.event_action.params": [[2, 3, 1, "", "engine"]], "mable.event_management.CargoAnnouncementEvent.params": [[2, 3, 1, "", "info"], [2, 3, 1, "", "time"]], "mable.event_management.CargoEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "event_action"]], "mable.event_management.CargoEvent.event_action.params": [[2, 3, 1, "", "engine"]], "mable.event_management.CargoEvent.params": [[2, 3, 1, "", "info"], [2, 3, 1, "", "time"]], "mable.event_management.CargoTransferEvent": [[2, 2, 1, "", "distance"], [2, 2, 1, "", "event_action"]], "mable.event_management.CargoTransferEvent.distance.params": [[2, 3, 1, "", "engine"]], "mable.event_management.CargoTransferEvent.event_action.params": [[2, 3, 1, "", "engine"]], "mable.event_management.DurationEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "added_to_queue"], [2, 2, 1, "", "has_started"], [2, 2, 1, "", "performed_time"], [2, 4, 1, "", "time_started"]], "mable.event_management.DurationEvent.added_to_queue.params": [[2, 3, 1, "", "engine"]], "mable.event_management.DurationEvent.params": [[2, 3, 1, "", "time"]], "mable.event_management.Event": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "added_to_queue"], [2, 2, 1, "", "event_action"], [2, 4, 1, "", "time"]], "mable.event_management.Event.added_to_queue.params": [[2, 3, 1, "", "engine"]], "mable.event_management.Event.event_action.params": [[2, 3, 1, "", "engine"]], "mable.event_management.Event.params": [[2, 3, 1, "", "info"], [2, 3, 1, "", "time"]], "mable.event_management.EventExecutionData": [[2, 2, 1, "", "__init__"], [2, 6, 1, "", "action_data"], [2, 6, 1, "", "other_data"]], "mable.event_management.EventExecutionData.params": [[2, 3, 1, "", "action_data"], [2, 3, 1, "", "other_data"]], "mable.event_management.EventItem": [[2, 2, 1, "", "__init__"], [2, 6, 1, "", "event"], [2, 6, 1, "", "time"]], "mable.event_management.EventObserver": [[2, 2, 1, "", "notify"]], "mable.event_management.EventObserver.notify.params": [[2, 3, 1, "", "data"], [2, 3, 1, "", "engine"], [2, 3, 1, "", "event"]], "mable.event_management.EventQueue": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get"], [2, 2, 1, "", "put"], [2, 2, 1, "", "remove"]], "mable.event_management.EventQueue.get.params": [[2, 3, 1, "", "block"], [2, 3, 1, "", "timeout"]], "mable.event_management.EventQueue.put.params": [[2, 3, 1, "", "block"], [2, 3, 1, "", "event"], [2, 3, 1, "", "timeout"]], "mable.event_management.EventQueue.remove.params": [[2, 3, 1, "", "event_s"]], "mable.event_management.FirstCargoAnnouncementEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "event_action"]], "mable.event_management.FirstCargoAnnouncementEvent.event_action.params": [[2, 3, 1, "", "engine"]], "mable.event_management.FirstCargoAnnouncementEvent.params": [[2, 3, 1, "", "info"], [2, 3, 1, "", "time"]], "mable.event_management.IdleEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "distance"], [2, 4, 1, "", "location"]], "mable.event_management.IdleEvent.distance.params": [[2, 3, 1, "", "engine"]], "mable.event_management.IdleEvent.params": [[2, 3, 1, "", "location"], [2, 3, 1, "", "time"], [2, 3, 1, "", "vessel"]], "mable.event_management.TravelEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "added_to_queue"], [2, 2, 1, "", "distance"], [2, 2, 1, "", "event_action"], [2, 4, 1, "", "is_laden"], [2, 4, 1, "", "location"]], "mable.event_management.TravelEvent.added_to_queue.params": [[2, 3, 1, "", "engine"]], "mable.event_management.TravelEvent.distance.params": [[2, 3, 1, "", "engine"]], "mable.event_management.TravelEvent.event_action.params": [[2, 3, 1, "", "engine"]], "mable.event_management.TravelEvent.params": [[2, 3, 1, "", "destination"], [2, 3, 1, "", "origin"], [2, 3, 1, "", "time"], [2, 3, 1, "", "vessel"]], "mable.event_management.VesselCargoEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "distance"], [2, 4, 1, "", "is_drop_off"], [2, 4, 1, "", "is_pickup"], [2, 4, 1, "", "location"], [2, 4, 1, "", "trade"]], "mable.event_management.VesselCargoEvent.distance.params": [[2, 3, 1, "", "engine"]], "mable.event_management.VesselCargoEvent.params": [[2, 3, 1, "", "is_pickup"], [2, 3, 1, "", "time"], [2, 3, 1, "", "trade"], [2, 3, 1, "", "vessel"]], "mable.event_management.VesselEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "distance"], [2, 2, 1, "", "event_action"], [2, 4, 1, "", "location"], [2, 4, 1, "", "vessel"]], "mable.event_management.VesselEvent.distance.params": [[2, 3, 1, "", "engine"]], "mable.event_management.VesselEvent.event_action.params": [[2, 3, 1, "", "engine"]], "mable.event_management.VesselEvent.params": [[2, 3, 1, "", "time"], [2, 3, 1, "", "vessel"]], "mable.event_management.VesselLocationInformationEvent": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "distance"], [2, 4, 1, "", "location"]], "mable.event_management.VesselLocationInformationEvent.distance.params": [[2, 3, 1, "", "engine"]], "mable.event_management.VesselLocationInformationEvent.params": [[2, 3, 1, "", "location"], [2, 3, 1, "", "time"], [2, 3, 1, "", "vessel"]], "mable.examples": [[4, 0, 0, "-", "companies"], [4, 0, 0, "-", "environment"], [4, 0, 0, "-", "fleets"], [4, 0, 0, "-", "shipping"]], "mable.examples.companies": [[4, 1, 1, "", "MyArchEnemy"], [4, 1, 1, "", "PondPlayer"], [4, 1, 1, "", "TheScheduler"]], "mable.examples.companies.MyArchEnemy": [[4, 1, 1, "", "Data"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "propose_schedules"]], "mable.examples.companies.MyArchEnemy.Data": [[4, 1, 1, "", "Schema"], [4, 2, 1, "", "__init__"], [4, 6, 1, "", "profit_factor"]], "mable.examples.companies.MyArchEnemy.Data.Schema": [[4, 6, 1, "", "opts"]], "mable.examples.companies.MyArchEnemy.params": [[4, 3, 1, "", "fleet"], [4, 3, 1, "", "name"], [4, 3, 1, "", "profit_factor"]], "mable.examples.companies.MyArchEnemy.propose_schedules.params": [[4, 3, 1, "", "trades"]], "mable.examples.companies.PondPlayer": [[4, 2, 1, "", "receive"]], "mable.examples.companies.PondPlayer.receive.params": [[4, 3, 1, "", "args"], [4, 3, 1, "", "auction_ledger"], [4, 3, 1, "", "contracts"], [4, 3, 1, "", "kwargs"]], "mable.examples.companies.TheScheduler": [[4, 1, 1, "", "Data"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "predict_cost"], [4, 2, 1, "", "propose_schedules"], [4, 2, 1, "", "receive"]], "mable.examples.companies.TheScheduler.Data": [[4, 1, 1, "", "Schema"], [4, 2, 1, "", "__init__"], [4, 6, 1, "", "profit_factor"]], "mable.examples.companies.TheScheduler.Data.Schema": [[4, 6, 1, "", "opts"]], "mable.examples.companies.TheScheduler.params": [[4, 3, 1, "", "fleet"], [4, 3, 1, "", "name"], [4, 3, 1, "", "profit_factor"]], "mable.examples.companies.TheScheduler.propose_schedules.params": [[4, 3, 1, "", "trades"]], "mable.examples.companies.TheScheduler.receive.params": [[4, 3, 1, "", "args"], [4, 3, 1, "", "auction_ledger"], [4, 3, 1, "", "contracts"], [4, 3, 1, "", "kwargs"]], "mable.examples.environment": [[4, 5, 1, "", "generate_simulation"], [4, 5, 1, "", "get_specification_builder"]], "mable.examples.environment.generate_simulation.params": [[4, 3, 1, "", "global_agent_timeout"], [4, 3, 1, "", "info"], [4, 3, 1, "", "output_directory"], [4, 3, 1, "", "show_detailed_auction_outcome"], [4, 3, 1, "", "specifications_builder"]], "mable.examples.environment.get_specification_builder.params": [[4, 3, 1, "", "environment_files_path"], [4, 3, 1, "", "fixed_trades"], [4, 3, 1, "", "num_auctions"], [4, 3, 1, "", "trade_occurrence_frequency"], [4, 3, 1, "", "trades_per_occurrence"], [4, 3, 1, "", "use_only_precomputed_routes"]], "mable.examples.fleets": [[4, 5, 1, "", "default_laden_balast_consumption"], [4, 5, 1, "", "default_suezmax_aframax_laden_balast_consumption"], [4, 5, 1, "", "default_vlcc_laden_balast_consumption"], [4, 5, 1, "", "example_fleet_1"], [4, 5, 1, "", "example_fleet_2"], [4, 5, 1, "", "example_fleet_3"], [4, 5, 1, "", "get_fuel_mfo"], [4, 5, 1, "", "get_vessel"], [4, 5, 1, "", "get_vessel_aframax"], [4, 5, 1, "", "get_vessel_suezmax"], [4, 5, 1, "", "get_vessel_vlcc"], [4, 5, 1, "", "mixed_fleet"], [4, 5, 1, "", "specified_laden_balast_consumption"]], "mable.examples.fleets.get_vessel.params": [[4, 3, 1, "", "ballast_consumption_rate"], [4, 3, 1, "", "capacity"], [4, 3, 1, "", "idle_consumption"], [4, 3, 1, "", "laden_consumption_rate"], [4, 3, 1, "", "loading_consumption"], [4, 3, 1, "", "name"], [4, 3, 1, "", "port"], [4, 3, 1, "", "unloading_consumption"]], "mable.examples.fleets.get_vessel_aframax.params": [[4, 3, 1, "", "name"], [4, 3, 1, "", "port"]], "mable.examples.fleets.get_vessel_suezmax.params": [[4, 3, 1, "", "name"], [4, 3, 1, "", "port"]], "mable.examples.fleets.get_vessel_vlcc.params": [[4, 3, 1, "", "name"], [4, 3, 1, "", "port"]], "mable.examples.fleets.mixed_fleet.params": [[4, 3, 1, "", "num_aframax"], [4, 3, 1, "", "num_suezmax"], [4, 3, 1, "", "num_vlcc"]], "mable.examples.shipping": [[4, 5, 1, "", "example_trades_1"]], "mable.extensions": [[5, 0, 0, "-", "cargo_distributions"], [5, 0, 0, "-", "fuel_emissions"], [5, 0, 0, "-", "world_ports"]], "mable.extensions.cargo_distributions": [[5, 1, 1, "", "DistributionClassFactory"], [5, 1, 1, "", "DistributionShipping"], [5, 1, 1, "", "DistributionSimulationBuilder"], [5, 1, 1, "", "TimeWindowArrivalEvent"]], "mable.extensions.cargo_distributions.DistributionClassFactory": [[5, 2, 1, "", "generate_event_arrival"], [5, 2, 1, "", "generate_shipping"], [5, 2, 1, "", "generate_trade"]], "mable.extensions.cargo_distributions.DistributionClassFactory.generate_event_arrival.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.cargo_distributions.DistributionClassFactory.generate_shipping.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.cargo_distributions.DistributionClassFactory.generate_trade.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.cargo_distributions.DistributionShipping": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "filter_out_outliers"], [5, 2, 1, "", "initialise_trades"], [5, 2, 1, "", "load_distributions"], [5, 2, 1, "", "sample_cargo_weight"], [5, 2, 1, "", "sample_cargoes_from_port_distributions"], [5, 2, 1, "", "sample_time_windows"], [5, 4, 1, "", "trade_occurrence_frequency"]], "mable.extensions.cargo_distributions.DistributionShipping.initialise_trades.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.cargo_distributions.DistributionShipping.load_distributions.params": [[5, 3, 1, "", "port_cargo_weight_distribution_path"], [5, 3, 1, "", "port_trade_frequency_distribution_path"], [5, 3, 1, "", "port_transition_duration_distributions_path"]], "mable.extensions.cargo_distributions.DistributionShipping.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.cargo_distributions.DistributionShipping.sample_time_windows.params": [[5, 3, 1, "", "cargo_weight "], [5, 3, 1, "", "end_port "], [5, 3, 1, "", "mean_transition_std"], [5, 3, 1, "", "pickup_period "], [5, 3, 1, "", "start_port "], [5, 3, 1, "", "time_transit_distribution "], [5, 3, 1, "", "time_transition_dict"], [5, 3, 1, "", "time_windows_allowance "], [5, 3, 1, "", "world"]], "mable.extensions.cargo_distributions.DistributionSimulationBuilder": [[5, 2, 1, "", "generate_shipping"]], "mable.extensions.fuel_emissions": [[5, 1, 1, "", "ConsumptionRate"], [5, 1, 1, "", "Fuel"], [5, 1, 1, "", "FuelClassFactory"], [5, 1, 1, "", "FuelSimulationFactory"], [5, 1, 1, "", "FuelSpecsBuilder"], [5, 1, 1, "", "GlobalSetup"], [5, 1, 1, "", "VesselEngine"], [5, 1, 1, "", "VesselWithEngine"]], "mable.extensions.fuel_emissions.ConsumptionRate": [[5, 1, 1, "", "Data"], [5, 2, 1, "", "__init__"], [5, 6, 1, "", "base"], [5, 6, 1, "", "factor"], [5, 6, 1, "", "speed_power"], [5, 2, 1, "", "to_json"]], "mable.extensions.fuel_emissions.ConsumptionRate.Data": [[5, 1, 1, "", "Schema"], [5, 2, 1, "", "__init__"], [5, 6, 1, "", "base"], [5, 6, 1, "", "factor"], [5, 6, 1, "", "speed_power"]], "mable.extensions.fuel_emissions.ConsumptionRate.Data.Schema": [[5, 6, 1, "", "opts"]], "mable.extensions.fuel_emissions.Fuel": [[5, 2, 1, "", "__init__"], [5, 6, 1, "", "co2_coefficient"], [5, 6, 1, "", "energy_coefficient"], [5, 2, 1, "", "get_co2_emissions"], [5, 2, 1, "", "get_cost"], [5, 6, 1, "", "name"], [5, 6, 1, "", "price"], [5, 2, 1, "", "to_json"]], "mable.extensions.fuel_emissions.Fuel.get_cost.params": [[5, 3, 1, "", "amount"]], "mable.extensions.fuel_emissions.Fuel.params": [[5, 3, 1, "", "co2_coefficient"], [5, 3, 1, "", "energy_coefficient"], [5, 3, 1, "", "name"], [5, 3, 1, "", "price"]], "mable.extensions.fuel_emissions.FuelClassFactory": [[5, 2, 1, "", "generate_consumption_rate"], [5, 2, 1, "", "generate_fuel"], [5, 2, 1, "", "generate_vessel"], [5, 2, 1, "", "generate_vessel_engine"]], "mable.extensions.fuel_emissions.FuelClassFactory.generate_vessel.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.fuel_emissions.FuelSimulationFactory": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "generate_consumption_rate"], [5, 2, 1, "", "generate_engine"], [5, 2, 1, "", "generate_fuels"], [5, 2, 1, "", "generate_vessel"], [5, 2, 1, "", "generate_vessel_engine"]], "mable.extensions.fuel_emissions.FuelSimulationFactory.generate_vessel.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.fuel_emissions.FuelSimulationFactory.params": [[5, 3, 1, "", "class_factory"], [5, 3, 1, "", "specifications"]], "mable.extensions.fuel_emissions.FuelSpecsBuilder": [[5, 2, 1, "", "add_fuel"]], "mable.extensions.fuel_emissions.GlobalSetup": [[5, 2, 1, "", "get_item"], [5, 2, 1, "", "get_keys"], [5, 2, 1, "", "set_item"]], "mable.extensions.fuel_emissions.VesselEngine": [[5, 1, 1, "", "Data"], [5, 2, 1, "", "__init__"], [5, 4, 1, "", "fuel"], [5, 2, 1, "", "get_ballast_consumption"], [5, 2, 1, "", "get_idle_consumption"], [5, 2, 1, "", "get_laden_consumption"], [5, 2, 1, "", "get_loading_consumption"], [5, 2, 1, "", "get_unloading_consumption"], [5, 2, 1, "", "to_json"]], "mable.extensions.fuel_emissions.VesselEngine.Data": [[5, 1, 1, "", "Schema"], [5, 2, 1, "", "__init__"], [5, 6, 1, "", "ballast_consumption_rate"], [5, 6, 1, "", "fuel"], [5, 6, 1, "", "idle_consumption"], [5, 6, 1, "", "laden_consumption_rate"], [5, 6, 1, "", "loading_consumption"], [5, 6, 1, "", "unloading_consumption"]], "mable.extensions.fuel_emissions.VesselEngine.Data.Schema": [[5, 6, 1, "", "opts"]], "mable.extensions.fuel_emissions.VesselEngine.params": [[5, 3, 1, "", "ballast_consumption_rate"], [5, 3, 1, "", "fuel"], [5, 3, 1, "", "idle_consumption"], [5, 3, 1, "", "laden_consumption_rate"], [5, 3, 1, "", "loading_consumption"], [5, 3, 1, "", "unloading_consumption"]], "mable.extensions.fuel_emissions.VesselWithEngine": [[5, 1, 1, "", "Data"], [5, 2, 1, "", "__init__"], [5, 2, 1, "", "get_ballast_consumption"], [5, 2, 1, "", "get_co2_emissions"], [5, 2, 1, "", "get_cost"], [5, 2, 1, "", "get_idle_consumption"], [5, 2, 1, "", "get_laden_consumption"], [5, 2, 1, "", "get_loading_consumption"], [5, 2, 1, "", "get_unloading_consumption"], [5, 4, 1, "", "propelling_engine"], [5, 2, 1, "", "to_json"]], "mable.extensions.fuel_emissions.VesselWithEngine.Data": [[5, 1, 1, "", "Schema"], [5, 2, 1, "", "__init__"], [5, 6, 1, "", "propelling_engine"]], "mable.extensions.fuel_emissions.VesselWithEngine.Data.Schema": [[5, 6, 1, "", "opts"]], "mable.extensions.fuel_emissions.VesselWithEngine.get_ballast_consumption.params": [[5, 3, 1, "", "speed"], [5, 3, 1, "", "time"]], "mable.extensions.fuel_emissions.VesselWithEngine.get_co2_emissions.params": [[5, 3, 1, "", "amount"]], "mable.extensions.fuel_emissions.VesselWithEngine.get_cost.params": [[5, 3, 1, "", "amount"]], "mable.extensions.fuel_emissions.VesselWithEngine.get_idle_consumption.params": [[5, 3, 1, "", "time"]], "mable.extensions.fuel_emissions.VesselWithEngine.get_laden_consumption.params": [[5, 3, 1, "", "speed"], [5, 3, 1, "", "time"]], "mable.extensions.fuel_emissions.VesselWithEngine.get_loading_consumption.params": [[5, 3, 1, "", "time"]], "mable.extensions.fuel_emissions.VesselWithEngine.get_unloading_consumption.params": [[5, 3, 1, "", "time"]], "mable.extensions.fuel_emissions.VesselWithEngine.params": [[5, 3, 1, "", "capacities_and_loading_rates"], [5, 3, 1, "", "company"], [5, 3, 1, "", "keep_journey_log"], [5, 3, 1, "", "location"], [5, 3, 1, "", "name"], [5, 3, 1, "", "propelling_engine"], [5, 3, 1, "", "speed"]], "mable.extensions.world_ports": [[5, 1, 1, "", "LatLongFactory"], [5, 1, 1, "", "LatLongLocation"], [5, 1, 1, "", "LatLongPort"], [5, 1, 1, "", "LatLongShippingNetwork"], [5, 7, 1, "", "NoPathsException"], [5, 1, 1, "", "Route"], [5, 1, 1, "", "WorldVessel"], [5, 5, 1, "", "get_index_or_default"], [5, 5, 1, "", "get_ports"]], "mable.extensions.world_ports.LatLongFactory": [[5, 2, 1, "", "generate_location"], [5, 2, 1, "", "generate_network"], [5, 2, 1, "", "generate_port"], [5, 2, 1, "", "generate_vessel"]], "mable.extensions.world_ports.LatLongFactory.generate_location.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.world_ports.LatLongFactory.generate_network.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.world_ports.LatLongFactory.generate_port.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.world_ports.LatLongFactory.generate_vessel.params": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kwargs"]], "mable.extensions.world_ports.LatLongLocation": [[5, 2, 1, "", "__init__"], [5, 4, 1, "", "latitude"], [5, 4, 1, "", "longitude"]], "mable.extensions.world_ports.LatLongLocation.params": [[5, 3, 1, "", "name"], [5, 3, 1, "", "x"], [5, 3, 1, "", "y"]], "mable.extensions.world_ports.LatLongPort": [[5, 2, 1, "", "__init__"], [5, 4, 1, "", "latitude"], [5, 4, 1, "", "longitude"], [5, 2, 1, "", "to_json"]], "mable.extensions.world_ports.LatLongPort.params": [[5, 3, 1, "", "latitude"], [5, 3, 1, "", "longitude"], [5, 3, 1, "", "name"]], "mable.extensions.world_ports.LatLongShippingNetwork": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "add_canal_to_graph"], [5, 4, 1, "", "canals_nodes"], [5, 2, 1, "", "compute_all_routes_between_points"], [5, 2, 1, "", "compute_route_length"], [5, 2, 1, "", "create_canal_nodes"], [5, 2, 1, "", "create_world_canal_scenarios"], [5, 2, 1, "", "find_closest_node"], [5, 2, 1, "", "generate_route_graph_from_file"], [5, 2, 1, "", "get_all_routes_between_points"], [5, 2, 1, "", "get_all_stored_routes_between_points"], [5, 2, 1, "", "get_distance"], [5, 2, 1, "", "get_journey_location"], [5, 2, 1, "", "get_long_lat_dist"], [5, 2, 1, "", "get_shortest_grid_route_between_points"], [5, 2, 1, "", "get_shortest_path_between_points"], [5, 2, 1, "", "get_shortest_route_between_points"], [5, 2, 1, "", "remove_canals_from_graph"], [5, 4, 1, "", "scenarios"], [5, 2, 1, "", "smooth_route"], [5, 4, 1, "", "world_graph"]], "mable.extensions.world_ports.LatLongShippingNetwork.add_canal_to_graph.params": [[5, 3, 1, "", "canal_name"]], "mable.extensions.world_ports.LatLongShippingNetwork.get_distance.params": [[5, 3, 1, "", "location_one"], [5, 3, 1, "", "location_two"]], "mable.extensions.world_ports.LatLongShippingNetwork.get_journey_location.params": [[5, 3, 1, "", "current_time"], [5, 3, 1, "", "journey"], [5, 3, 1, "", "vessel"]], "mable.extensions.world_ports.Route": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "as_tuple"]], "mable.extensions.world_ports.WorldVessel": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "get_travel_time"]], "mable.extensions.world_ports.WorldVessel.get_travel_time.params": [[5, 3, 1, "", "distance"]], "mable.extensions.world_ports.WorldVessel.params": [[5, 3, 1, "", "capacities_and_loading_rates"], [5, 3, 1, "", "company"], [5, 3, 1, "", "keep_journey_log"], [5, 3, 1, "", "location"], [5, 3, 1, "", "name"], [5, 3, 1, "", "speed"]], "mable.extensions.world_ports.get_index_or_default.params": [[5, 3, 1, "", "default"], [5, 3, 1, "", "search_list"], [5, 3, 1, "", "search_term"]], "mable.extensions.world_ports.get_ports.params": [[5, 3, 1, "", "path"]], "mable.global_setup": [[2, 5, 1, "", "done"]], "mable.instructions": [[2, 1, 1, "", "Specifications"]], "mable.instructions.Specifications": [[2, 1, 1, "", "Builder"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "get"], [2, 2, 1, "", "init_from_json_string"]], "mable.instructions.Specifications.Builder": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_cargo_distribution"], [2, 2, 1, "", "add_cargo_generation"], [2, 2, 1, "", "add_company"], [2, 2, 1, "", "add_random_specifications"], [2, 2, 1, "", "add_shipping_network"], [2, 2, 1, "", "build"]], "mable.instructions.Specifications.Builder.add_cargo_distribution.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.instructions.Specifications.Builder.add_cargo_generation.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.instructions.Specifications.Builder.add_company.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.instructions.Specifications.Builder.add_random_specifications.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.instructions.Specifications.Builder.add_shipping_network.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.instructions.Specifications.get.params": [[2, 3, 1, "", "key"]], "mable.instructions.Specifications.init_from_json_string.params": [[2, 3, 1, "", "specs_string"]], "mable.io": [[6, 0, 0, "-", "logging_util"]], "mable.io.logging_util": [[6, 1, 1, "", "LoguruHandler"], [6, 5, 1, "", "let_loguru_handle_logging"]], "mable.io.logging_util.LoguruHandler": [[6, 2, 1, "", "emit"]], "mable.metrics": [[2, 1, 1, "", "GlobalMetricsCollector"], [2, 1, 1, "", "MetricDict"], [2, 1, 1, "", "MetricsCollector"], [2, 1, 1, "", "RegionalMetricsCollector"], [2, 1, 1, "", "VesselKey"]], "mable.metrics.GlobalMetricsCollector": [[2, 2, 1, "", "add_co2_emissions"], [2, 2, 1, "", "add_cost"], [2, 2, 1, "", "add_fuel_consumption"], [2, 2, 1, "", "add_route_point"]], "mable.metrics.GlobalMetricsCollector.add_co2_emissions.params": [[2, 3, 1, "", "emissions"], [2, 3, 1, "", "vessel"]], "mable.metrics.GlobalMetricsCollector.add_cost.params": [[2, 3, 1, "", "cost"], [2, 3, 1, "", "vessel"]], "mable.metrics.GlobalMetricsCollector.add_fuel_consumption.params": [[2, 3, 1, "", "consumption"], [2, 3, 1, "", "vessel"]], "mable.metrics.MetricsCollector": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_company_numeric_metric"], [2, 2, 1, "", "add_dual_numeric_metric"], [2, 2, 1, "", "add_global_company_list_metric"], [2, 2, 1, "", "get_company_id"], [2, 2, 1, "", "get_vessel_id"], [2, 2, 1, "", "to_json"]], "mable.metrics.MetricsCollector.add_company_numeric_metric.params": [[2, 3, 1, "", "company"], [2, 3, 1, "", "key"], [2, 3, 1, "", "value"]], "mable.metrics.MetricsCollector.add_dual_numeric_metric.params": [[2, 3, 1, "", "key"], [2, 3, 1, "", "value"], [2, 3, 1, "", "vessel"]], "mable.metrics.MetricsCollector.add_global_company_list_metric.params": [[2, 3, 1, "", "key"], [2, 3, 1, "", "value"]], "mable.metrics.MetricsCollector.get_company_id.params": [[2, 3, 1, "", "company"], [2, 3, 1, "", "create_id_if_not_exists"]], "mable.metrics.MetricsCollector.get_vessel_id.params": [[2, 3, 1, "", "company"], [2, 3, 1, "", "create_both_ids_if_not_exists"], [2, 3, 1, "", "vessel"]], "mable.metrics.RegionalMetricsCollector": [[2, 2, 1, "", "add_fuel_consumption"]], "mable.metrics.VesselKey": [[2, 2, 1, "", "__init__"], [2, 4, 1, "", "company_id"], [2, 4, 1, "", "key_tuple"], [2, 4, 1, "", "vessel_id"]], "mable.metrics.VesselKey.params": [[2, 3, 1, "", "company_id"], [2, 3, 1, "", "vessel_id"]], "mable.observers": [[2, 1, 1, "", "AuctionMetricsObserver"], [2, 1, 1, "", "AuctionOutcomeObserver"], [2, 1, 1, "", "AuctionOutcomePrintObserver"], [2, 1, 1, "", "EventFuelPrintObserver"], [2, 1, 1, "", "LogRunner"], [2, 1, 1, "", "MetricsObserver"], [2, 1, 1, "", "TradeDeliveryObserver"]], "mable.observers.AuctionMetricsObserver": [[2, 2, 1, "", "notify"]], "mable.observers.AuctionMetricsObserver.notify.params": [[2, 3, 1, "", "data"], [2, 3, 1, "", "engine"], [2, 3, 1, "", "event"]], "mable.observers.AuctionOutcomeObserver": [[2, 2, 1, "", "notify"]], "mable.observers.AuctionOutcomeObserver.notify.params": [[2, 3, 1, "", "data"], [2, 3, 1, "", "engine"], [2, 3, 1, "", "event"]], "mable.observers.AuctionOutcomePrintObserver": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "notify"]], "mable.observers.AuctionOutcomePrintObserver.notify.params": [[2, 3, 1, "", "data"], [2, 3, 1, "", "engine"], [2, 3, 1, "", "event"]], "mable.observers.EventFuelPrintObserver": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "notify"]], "mable.observers.EventFuelPrintObserver.notify.params": [[2, 3, 1, "", "data"], [2, 3, 1, "", "engine"], [2, 3, 1, "", "event"]], "mable.observers.LogRunner": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "run"]], "mable.observers.MetricsObserver": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "calculate_consumption"], [2, 4, 1, "", "metrics"], [2, 2, 1, "", "notify"]], "mable.observers.MetricsObserver.notify.params": [[2, 3, 1, "", "data"], [2, 3, 1, "", "engine"], [2, 3, 1, "", "event"]], "mable.observers.TradeDeliveryObserver": [[2, 2, 1, "", "notify"]], "mable.observers.TradeDeliveryObserver.notify.params": [[2, 3, 1, "", "data"], [2, 3, 1, "", "engine"], [2, 3, 1, "", "event"]], "mable.shipping_market": [[2, 1, 1, "", "AuctionAllocationResult"], [2, 1, 1, "", "AuctionLedger"], [2, 1, 1, "", "AuctionMarket"], [2, 1, 1, "", "Contract"], [2, 1, 1, "", "Market"], [2, 1, 1, "", "Shipping"], [2, 1, 1, "", "SimpleMarket"], [2, 1, 1, "", "StaticShipping"], [2, 1, 1, "", "TimeWindowTrade"], [2, 1, 1, "", "Trade"], [2, 1, 1, "", "TradeStatus"]], "mable.shipping_market.AuctionAllocationResult": [[2, 2, 1, "", "__init__"], [2, 6, 1, "", "ledger"], [2, 6, 1, "", "unallocated_trades"]], "mable.shipping_market.AuctionLedger": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_trades_for_company_copy"], [2, 4, 1, "", "keys"], [2, 4, 1, "", "ledger"], [2, 4, 1, "", "sanitised_ledger"]], "mable.shipping_market.AuctionLedger.get_trades_for_company_copy.params": [[2, 3, 1, "", "shipping_company"]], "mable.shipping_market.AuctionLedger.params": [[2, 3, 1, "", "shipping_companies"]], "mable.shipping_market.AuctionMarket": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "distribute_trades"], [2, 2, 1, "", "inform_future_trades"]], "mable.shipping_market.AuctionMarket.distribute_trades.params": [[2, 3, 1, "", "shipping_companies"], [2, 3, 1, "", "time"], [2, 3, 1, "", "timeout"], [2, 3, 1, "", "trades"]], "mable.shipping_market.AuctionMarket.inform_future_trades.params": [[2, 3, 1, "", "shipping_companies"], [2, 3, 1, "", "time"], [2, 3, 1, "", "timeout"], [2, 3, 1, "", "trades"]], "mable.shipping_market.Contract": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "copy"], [2, 6, 1, "", "fulfilled"], [2, 6, 1, "", "payment"], [2, 2, 1, "", "to_json"], [2, 6, 1, "", "trade"]], "mable.shipping_market.Contract.params": [[2, 3, 1, "", "payment"], [2, 3, 1, "", "trade"]], "mable.shipping_market.Market": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "distribute_trades"]], "mable.shipping_market.Market.distribute_trades.params": [[2, 3, 1, "", "shipping_companies"], [2, 3, 1, "", "time"], [2, 3, 1, "", "trades"]], "mable.shipping_market.Shipping": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_to_all_trades"], [2, 2, 1, "", "get_trades"], [2, 2, 1, "", "get_trading_times"], [2, 2, 1, "", "initialise_trades"]], "mable.shipping_market.Shipping.add_to_all_trades.params": [[2, 3, 1, "", "trades"]], "mable.shipping_market.Shipping.get_trades.params": [[2, 3, 1, "", "time"]], "mable.shipping_market.Shipping.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.shipping_market.SimpleMarket": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "distribute_trades"]], "mable.shipping_market.SimpleMarket.distribute_trades.params": [[2, 3, 1, "", "shipping_companies"], [2, 3, 1, "", "time"], [2, 3, 1, "", "trades"]], "mable.shipping_market.StaticShipping": [[2, 2, 1, "", "initialise_trades"]], "mable.shipping_market.StaticShipping.initialise_trades.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.shipping_market.TimeWindowTrade": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "clean_window"], [2, 4, 1, "", "earliest_drop_off"], [2, 4, 1, "", "earliest_drop_off_clean"], [2, 4, 1, "", "earliest_pickup"], [2, 4, 1, "", "earliest_pickup_clean"], [2, 4, 1, "", "latest_drop_off"], [2, 4, 1, "", "latest_drop_off_clean"], [2, 4, 1, "", "latest_pickup"], [2, 4, 1, "", "latest_pickup_clean"], [2, 6, 1, "", "time_window"]], "mable.shipping_market.TimeWindowTrade.params": [[2, 3, 1, "", "time_window"]], "mable.shipping_market.Trade": [[2, 2, 1, "", "__init__"], [2, 6, 1, "", "amount"], [2, 6, 1, "", "cargo_type"], [2, 6, 1, "", "destination_port"], [2, 6, 1, "", "origin_port"], [2, 6, 1, "", "probability"], [2, 6, 1, "", "status"], [2, 6, 1, "", "time"], [2, 2, 1, "", "to_json"]], "mable.shipping_market.Trade.params": [[2, 3, 1, "", "amount"], [2, 3, 1, "", "cargo_type"], [2, 3, 1, "", "destination_port"], [2, 3, 1, "", "origin_port"], [2, 3, 1, "", "time"]], "mable.shipping_market.TradeStatus": [[2, 6, 1, "", "ACCEPTED"], [2, 6, 1, "", "NOT_REALISED"], [2, 6, 1, "", "REJECTED"], [2, 6, 1, "", "UNKNOWN"]], "mable.simulation_de_serialisation": [[2, 1, 1, "", "DataClass"], [2, 1, 1, "", "DataProtocol"], [2, 1, 1, "", "DataSchema"], [2, 1, 1, "", "DynamicNestedField"], [2, 1, 1, "", "SchemaProtocol"], [2, 1, 1, "", "SimulationSpecification"]], "mable.simulation_de_serialisation.DataClass": [[2, 2, 1, "", "__init__"], [2, 6, 1, "", "current_class"]], "mable.simulation_de_serialisation.DataProtocol": [[2, 6, 1, "", "Data"], [2, 2, 1, "", "__init__"]], "mable.simulation_de_serialisation.DataSchema": [[2, 6, 1, "", "opts"]], "mable.simulation_de_serialisation.SchemaProtocol": [[2, 6, 1, "", "Schema"], [2, 2, 1, "", "__init__"]], "mable.simulation_de_serialisation.SimulationSpecification": [[2, 2, 1, "", "get"], [2, 2, 1, "", "register"], [2, 2, 1, "", "register_by_type_name"]], "mable.simulation_de_serialisation.SimulationSpecification.get.params": [[2, 3, 1, "", "name"]], "mable.simulation_de_serialisation.SimulationSpecification.register.params": [[2, 3, 1, "", "component_cls"], [2, 3, 1, "", "name"]], "mable.simulation_de_serialisation.SimulationSpecification.register_by_type_name.params": [[2, 3, 1, "", "component_cls"]], "mable.simulation_environment": [[2, 1, 1, "", "SimulationEngineAware"], [2, 1, 1, "", "World"]], "mable.simulation_environment.SimulationEngineAware": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "set_engine"]], "mable.simulation_environment.SimulationEngineAware.set_engine.params": [[2, 3, 1, "", "engine"]], "mable.simulation_environment.World": [[2, 2, 1, "", "__init__"], [2, 4, 1, "", "current_time"], [2, 2, 1, "", "do_events_exists"], [2, 4, 1, "", "event_queue"], [2, 2, 1, "", "get_next_event"], [2, 4, 1, "", "network"], [2, 4, 1, "", "random"], [2, 2, 1, "", "set_engine"]], "mable.simulation_environment.World.params": [[2, 3, 1, "", "event_queue"], [2, 3, 1, "", "network"], [2, 3, 1, "", "random"]], "mable.simulation_environment.World.set_engine.params": [[2, 3, 1, "", "engine"]], "mable.simulation_generation": [[2, 1, 1, "", "ClassFactory"], [2, 1, 1, "", "SimulationBuilder"]], "mable.simulation_generation.ClassFactory": [[2, 2, 1, "", "generate_cargo_capacity"], [2, 2, 1, "", "generate_company"], [2, 2, 1, "", "generate_engine"], [2, 2, 1, "", "generate_event_arrival"], [2, 2, 1, "", "generate_event_cargo"], [2, 2, 1, "", "generate_event_cargo_transfer"], [2, 2, 1, "", "generate_event_idling"], [2, 2, 1, "", "generate_event_location_info"], [2, 2, 1, "", "generate_event_queue"], [2, 2, 1, "", "generate_event_travel"], [2, 2, 1, "", "generate_location"], [2, 2, 1, "", "generate_market"], [2, 2, 1, "", "generate_network"], [2, 2, 1, "", "generate_port"], [2, 2, 1, "", "generate_random"], [2, 2, 1, "", "generate_shipping"], [2, 2, 1, "", "generate_trade"], [2, 2, 1, "", "generate_vessel"], [2, 2, 1, "", "generate_world"]], "mable.simulation_generation.ClassFactory.generate_cargo_capacity.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_company.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_engine.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_event_arrival.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_event_cargo.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_event_cargo_transfer.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_event_idling.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_event_location_info.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_event_queue.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_event_travel.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_location.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_market.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_network.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_port.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_random.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_shipping.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_trade.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_vessel.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.ClassFactory.generate_world.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "generate_engine"], [2, 2, 1, "", "generate_fleet"], [2, 2, 1, "", "generate_market"], [2, 2, 1, "", "generate_network"], [2, 2, 1, "", "generate_random"], [2, 2, 1, "", "generate_shipping"], [2, 2, 1, "", "generate_shipping_companies"], [2, 2, 1, "", "generate_vessel"], [2, 2, 1, "", "generate_world"], [2, 2, 1, "", "set_engines"]], "mable.simulation_generation.SimulationBuilder.generate_fleet.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder.generate_market.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder.generate_network.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder.generate_random.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder.generate_shipping.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder.generate_shipping_companies.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder.generate_vessel.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder.generate_world.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.simulation_generation.SimulationBuilder.params": [[2, 3, 1, "", "class_factory"], [2, 3, 1, "", "specifications"]], "mable.simulation_generation.SimulationBuilder.set_engines.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "engine"], [2, 3, 1, "", "kwargs"]], "mable.simulation_space": [[7, 0, 0, "-", "structure"], [7, 0, 0, "-", "universe"]], "mable.simulation_space.structure": [[7, 1, 1, "", "NetworkWithPortDict"], [7, 1, 1, "", "ShippingNetwork"], [7, 1, 1, "", "UnitShippingNetwork"]], "mable.simulation_space.structure.NetworkWithPortDict": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "get_port"], [7, 2, 1, "", "get_port_or_default"], [7, 4, 1, "", "ports"]], "mable.simulation_space.structure.NetworkWithPortDict.get_port.params": [[7, 3, 1, "", "name"]], "mable.simulation_space.structure.NetworkWithPortDict.get_port_or_default.params": [[7, 3, 1, "", "default"], [7, 3, 1, "", "name"]], "mable.simulation_space.structure.ShippingNetwork": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "get_distance"], [7, 2, 1, "", "get_journey_location"], [7, 2, 1, "", "get_port"], [7, 2, 1, "", "get_port_or_default"], [7, 2, 1, "", "get_vessel_location"]], "mable.simulation_space.structure.ShippingNetwork.get_distance.params": [[7, 3, 1, "", "location_one"], [7, 3, 1, "", "location_two"]], "mable.simulation_space.structure.ShippingNetwork.get_journey_location.params": [[7, 3, 1, "", "current_time"], [7, 3, 1, "", "journey"], [7, 3, 1, "", "vessel"]], "mable.simulation_space.structure.ShippingNetwork.get_port.params": [[7, 3, 1, "", "name"]], "mable.simulation_space.structure.ShippingNetwork.get_port_or_default.params": [[7, 3, 1, "", "default"], [7, 3, 1, "", "name"]], "mable.simulation_space.structure.ShippingNetwork.get_vessel_location.params": [[7, 3, 1, "", "current_time"], [7, 3, 1, "", "vessel"]], "mable.simulation_space.structure.UnitShippingNetwork": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "get_distance"], [7, 2, 1, "", "get_journey_location"]], "mable.simulation_space.structure.UnitShippingNetwork.get_distance.params": [[7, 3, 1, "", "location_one"], [7, 3, 1, "", "location_two"]], "mable.simulation_space.structure.UnitShippingNetwork.get_journey_location.params": [[7, 3, 1, "", "current_time"], [7, 3, 1, "", "journey"], [7, 3, 1, "", "vessel"]], "mable.simulation_space.structure.UnitShippingNetwork.params": [[7, 3, 1, "", "ports"]], "mable.simulation_space.universe": [[7, 1, 1, "", "Location"], [7, 1, 1, "", "OnJourney"], [7, 1, 1, "", "Port"]], "mable.simulation_space.universe.Location": [[7, 2, 1, "", "__init__"], [7, 4, 1, "", "name"], [7, 4, 1, "", "x"], [7, 4, 1, "", "y"]], "mable.simulation_space.universe.Location.params": [[7, 3, 1, "", "name"], [7, 3, 1, "", "x"], [7, 3, 1, "", "y"]], "mable.simulation_space.universe.OnJourney": [[7, 2, 1, "", "__init__"], [7, 6, 1, "", "destination"], [7, 6, 1, "", "origin"], [7, 6, 1, "", "start_time"]], "mable.simulation_space.universe.OnJourney.params": [[7, 3, 1, "", "destination"], [7, 3, 1, "", "origin"], [7, 3, 1, "", "start_time"]], "mable.simulation_space.universe.Port": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "to_json"]], "mable.simulation_space.universe.Port.params": [[7, 3, 1, "", "name"], [7, 3, 1, "", "x"], [7, 3, 1, "", "y"]], "mable.transport_operation": [[2, 1, 1, "", "Bid"], [2, 1, 1, "", "CargoCapacity"], [2, 1, 1, "", "CargoContainer"], [2, 1, 1, "", "CargoHold"], [2, 1, 1, "", "CargoHoldSchema"], [2, 1, 1, "", "ScheduleProposal"], [2, 1, 1, "", "ShippingCompany"], [2, 1, 1, "", "SimpleCompany"], [2, 1, 1, "", "SimpleVessel"], [2, 1, 1, "", "Vessel"]], "mable.transport_operation.Bid": [[2, 2, 1, "", "__init__"], [2, 6, 1, "", "amount"], [2, 6, 1, "", "company"], [2, 6, 1, "", "trade"]], "mable.transport_operation.Bid.params": [[2, 3, 1, "", "amount"], [2, 3, 1, "", "trade"]], "mable.transport_operation.CargoCapacity": [[2, 1, 1, "", "Data"], [2, 2, 1, "", "__init__"], [2, 6, 1, "", "capacity"], [2, 6, 1, "", "cargo_type"], [2, 6, 1, "", "loading_rate"], [2, 2, 1, "", "to_json"]], "mable.transport_operation.CargoCapacity.Data": [[2, 1, 1, "", "Schema"], [2, 2, 1, "", "__init__"], [2, 6, 1, "", "capacity"], [2, 6, 1, "", "cargo_type"], [2, 6, 1, "", "loading_rate"]], "mable.transport_operation.CargoCapacity.Data.Schema": [[2, 6, 1, "", "opts"]], "mable.transport_operation.CargoCapacity.params": [[2, 3, 1, "", "capacity"], [2, 3, 1, "", "cargo_type"], [2, 3, 1, "", "loading_rate"]], "mable.transport_operation.CargoContainer": [[2, 2, 1, "", "__init__"], [2, 4, 1, "", "amount"], [2, 4, 1, "", "capacity"], [2, 4, 1, "", "loading_rate"]], "mable.transport_operation.CargoContainer.params": [[2, 3, 1, "", "capacity"], [2, 3, 1, "", "loading_rate"]], "mable.transport_operation.CargoHold": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "available_cargo_types"], [2, 2, 1, "", "get_capacity"], [2, 2, 1, "", "get_current_load"], [2, 2, 1, "", "get_loading_rate"], [2, 2, 1, "", "is_empty"], [2, 2, 1, "", "load_cargo"], [2, 2, 1, "", "unload_cargo"]], "mable.transport_operation.CargoHold.get_capacity.params": [[2, 3, 1, "", "cargo_type"]], "mable.transport_operation.CargoHold.get_current_load.params": [[2, 3, 1, "", "cargo_type"]], "mable.transport_operation.CargoHold.get_loading_rate.params": [[2, 3, 1, "", "cargo_type"]], "mable.transport_operation.CargoHold.load_cargo.params": [[2, 3, 1, "", "amount"], [2, 3, 1, "", "cargo_type"]], "mable.transport_operation.CargoHold.params": [[2, 3, 1, "", "capacities"]], "mable.transport_operation.CargoHold.unload_cargo.params": [[2, 3, 1, "", "amount"], [2, 3, 1, "", "cargo_type"]], "mable.transport_operation.CargoHoldSchema": [[2, 6, 1, "", "opts"]], "mable.transport_operation.ScheduleProposal": [[2, 2, 1, "", "__init__"], [2, 6, 1, "", "costs"], [2, 6, 1, "", "scheduled_trades"], [2, 6, 1, "", "schedules"]], "mable.transport_operation.ScheduleProposal.params": [[2, 3, 1, "", "scheduled_trades"], [2, 3, 1, "", "schedules"]], "mable.transport_operation.ShippingCompany": [[2, 1, 1, "", "Data"], [2, 2, 1, "", "__init__"], [2, 4, 1, "", "fleet"], [2, 2, 1, "", "get_class"], [2, 2, 1, "", "inform"], [2, 4, 1, "", "name"], [2, 2, 1, "", "pre_inform"], [2, 2, 1, "", "receive"], [2, 2, 1, "", "set_engine"]], "mable.transport_operation.ShippingCompany.Data": [[2, 1, 1, "", "Schema"], [2, 2, 1, "", "__init__"], [2, 6, 1, "", "fleet"], [2, 6, 1, "", "name"]], "mable.transport_operation.ShippingCompany.Data.Schema": [[2, 6, 1, "", "opts"]], "mable.transport_operation.ShippingCompany.inform.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.transport_operation.ShippingCompany.params": [[2, 3, 1, "", "fleet"]], "mable.transport_operation.ShippingCompany.pre_inform.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.transport_operation.ShippingCompany.receive.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"]], "mable.transport_operation.ShippingCompany.set_engine.params": [[2, 3, 1, "", "engine"]], "mable.transport_operation.SimpleCompany": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "apply_schedules"], [2, 2, 1, "", "get_arrival_time"], [2, 2, 1, "", "inform"], [2, 2, 1, "", "pre_inform"], [2, 2, 1, "", "propose_schedules"], [2, 2, 1, "", "receive"]], "mable.transport_operation.SimpleCompany.apply_schedules.params": [[2, 3, 1, "", "schedules"]], "mable.transport_operation.SimpleCompany.get_arrival_time.params": [[2, 3, 1, "", "port"], [2, 3, 1, "", "vessel"], [2, 3, 1, "", "| None schedule"]], "mable.transport_operation.SimpleCompany.inform.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"], [2, 3, 1, "", "trades"]], "mable.transport_operation.SimpleCompany.params": [[2, 3, 1, "", "fleet"], [2, 3, 1, "", "name"]], "mable.transport_operation.SimpleCompany.pre_inform.params": [[2, 3, 1, "", "time"], [2, 3, 1, "", "trades"]], "mable.transport_operation.SimpleCompany.propose_schedules.params": [[2, 3, 1, "", "trades"]], "mable.transport_operation.SimpleCompany.receive.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "kwargs"], [2, 3, 1, "", "trades"]], "mable.transport_operation.SimpleVessel": [[2, 1, 1, "", "Data"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_loading_time"], [2, 2, 1, "", "get_travel_time"], [2, 4, 1, "", "speed"], [2, 2, 1, "", "to_json"]], "mable.transport_operation.SimpleVessel.Data": [[2, 1, 1, "", "Schema"], [2, 2, 1, "", "__init__"], [2, 6, 1, "", "speed"]], "mable.transport_operation.SimpleVessel.Data.Schema": [[2, 6, 1, "", "opts"]], "mable.transport_operation.SimpleVessel.get_loading_time.params": [[2, 3, 1, "", "amount"], [2, 3, 1, "", "args"], [2, 3, 1, "", "cargo_type"], [2, 3, 1, "", "kwargs"]], "mable.transport_operation.SimpleVessel.get_travel_time.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "distance"], [2, 3, 1, "", "kwargs"]], "mable.transport_operation.SimpleVessel.params": [[2, 3, 1, "", "capacities_and_loading_rates"], [2, 3, 1, "", "company"], [2, 3, 1, "", "keep_journey_log"], [2, 3, 1, "", "location"], [2, 3, 1, "", "name"], [2, 3, 1, "", "speed"]], "mable.transport_operation.Vessel": [[2, 1, 1, "", "Data"], [2, 2, 1, "", "__init__"], [2, 4, 1, "", "capacities_and_loading_rates"], [2, 2, 1, "", "capacity"], [2, 2, 1, "", "copy_hold"], [2, 2, 1, "", "current_load"], [2, 2, 1, "", "event_occurrence"], [2, 2, 1, "", "get_loading_time"], [2, 2, 1, "", "get_travel_time"], [2, 2, 1, "", "has_any_load"], [2, 2, 1, "", "has_next_event"], [2, 4, 1, "", "journey_log"], [2, 2, 1, "", "load_cargo"], [2, 2, 1, "", "loadable_cargo_types"], [2, 4, 1, "", "location"], [2, 2, 1, "", "log_journey_log_event"], [2, 4, 1, "", "name"], [2, 4, 1, "", "schedule"], [2, 2, 1, "", "set_engine"], [2, 2, 1, "", "start_next_event"], [2, 2, 1, "", "unload_cargo"]], "mable.transport_operation.Vessel.Data": [[2, 1, 1, "", "Schema"], [2, 2, 1, "", "__init__"], [2, 6, 1, "", "capacities_and_loading_rates"], [2, 6, 1, "", "keep_journey_log"], [2, 6, 1, "", "location"], [2, 6, 1, "", "name"]], "mable.transport_operation.Vessel.Data.Schema": [[2, 6, 1, "", "opts"]], "mable.transport_operation.Vessel.capacity.params": [[2, 3, 1, "", "cargo_type"]], "mable.transport_operation.Vessel.current_load.params": [[2, 3, 1, "", "cargo_type"]], "mable.transport_operation.Vessel.event_occurrence.params": [[2, 3, 1, "", "event"]], "mable.transport_operation.Vessel.get_loading_time.params": [[2, 3, 1, "", "amount"], [2, 3, 1, "", "args"], [2, 3, 1, "", "cargo_type"], [2, 3, 1, "", "kwargs"]], "mable.transport_operation.Vessel.get_travel_time.params": [[2, 3, 1, "", "args"], [2, 3, 1, "", "distance"], [2, 3, 1, "", "kwargs"]], "mable.transport_operation.Vessel.load_cargo.params": [[2, 3, 1, "", "amount"], [2, 3, 1, "", "cargo_type"]], "mable.transport_operation.Vessel.log_journey_log_event.params": [[2, 3, 1, "", "log_entry"]], "mable.transport_operation.Vessel.params": [[2, 3, 1, "", "capacities_and_loading_rates"], [2, 3, 1, "", "company"], [2, 3, 1, "", "keep_journey_log"], [2, 3, 1, "", "location"], [2, 3, 1, "", "name"]], "mable.transport_operation.Vessel.set_engine.params": [[2, 3, 1, "", "engine"]], "mable.transport_operation.Vessel.unload_cargo.params": [[2, 3, 1, "", "amount"], [2, 3, 1, "", "cargo_type"]], "mable.transportation_scheduling": [[2, 1, 1, "", "CurrentState"], [2, 1, 1, "", "Schedule"], [2, 1, 1, "", "TransportationSourceDestinationIndicator"], [2, 1, 1, "", "TransportationStartFinishIndicator"]], "mable.transportation_scheduling.CurrentState": [[2, 2, 1, "", "__init__"], [2, 6, 1, "", "current_cargo_hold"], [2, 6, 1, "", "current_location"], [2, 6, 1, "", "current_time"], [2, 6, 1, "", "engine"], [2, 6, 1, "", "is_valid"], [2, 6, 1, "", "vessel"]], "mable.transportation_scheduling.Schedule": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "add_relocation"], [2, 2, 1, "", "add_transportation"], [2, 2, 1, "", "completion_time"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "get"], [2, 2, 1, "", "get_insertion_points"], [2, 2, 1, "", "get_scheduled_trades"], [2, 2, 1, "", "get_simple_schedule"], [2, 2, 1, "", "init_with_engine"], [2, 2, 1, "", "next"], [2, 2, 1, "", "pop"], [2, 2, 1, "", "verify_schedule"], [2, 2, 1, "", "verify_schedule_cargo"], [2, 2, 1, "", "verify_schedule_time"]], "mable.transportation_scheduling.Schedule.add_relocation.params": [[2, 3, 1, "", "index_in_schedule"], [2, 3, 1, "", "port"]], "mable.transportation_scheduling.Schedule.add_transportation.params": [[2, 3, 1, "", "location_drop_off"], [2, 3, 1, "", "location_pick_up"], [2, 3, 1, "", "trade"]], "mable.transportation_scheduling.Schedule.params": [[2, 3, 1, "", "schedule"], [2, 3, 1, "", "vessel"]], "mable.transportation_scheduling.TransportationSourceDestinationIndicator": [[2, 6, 1, "", "DROP_OFF"], [2, 6, 1, "", "PICK_UP"]], "mable.transportation_scheduling.TransportationStartFinishIndicator": [[2, 6, 1, "", "FINISH"], [2, 6, 1, "", "START"]], "mable.util": [[2, 1, 1, "", "JsonAble"], [2, 1, 1, "", "JsonAbleEncoder"], [2, 5, 1, "", "format_time"]], "mable.util.JsonAble": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "to_json"]], "mable.util.JsonAbleEncoder": [[2, 2, 1, "", "default"]], "mable.util.JsonAbleEncoder.default.params": [[2, 3, 1, "", "obj"]], "mable.util.format_time.params": [[2, 3, 1, "", "time"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "parameter", "Python parameter"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:parameter", "4": "py:property", "5": "py:function", "6": "py:attribute", "7": "py:exception"}, "terms": {"": [0, 2, 3, 5, 7], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "09": 1, "1": [0, 2, 4, 5, 7, 10], "10": 1, "100": 4, "100000": 4, "11": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "12": 1, "145000": 4, "2": [2, 4, 7], "20": 6, "2024": [1, 9], "210000": 4, "24": 1, "26": 1, "28": 1, "285000": 4, "29": 1, "3": [1, 2, 4, 9], "30": [0, 4], "4": [1, 2], "5": [1, 5], "6": 1, "60": [0, 2, 3, 4], "65": 4, "7": 1, "8": 1, "9": 1, "90": [0, 4], "A": [1, 2, 3, 4, 5, 7, 9], "AND": 9, "AS": 9, "As": 2, "At": 2, "BE": 9, "BUT": 9, "But": [2, 3], "By": [3, 7, 10], "FOR": 9, "For": [0, 2, 5], "IN": 9, "If": [2, 3, 4, 5, 7], "It": [3, 5], "NO": 9, "NOT": 9, "No": 2, "Not": [2, 4], "OF": 9, "OR": 9, "On": 2, "One": 2, "Or": 9, "THE": 9, "TO": 9, "The": [0, 1, 2, 3, 4, 5, 7, 10], "To": 5, "WITH": 9, "_": [], "__add__": 2, "__dict__": 2, "__iadd__": 2, "__init__": [2, 3, 4, 5, 7, 8], "__name__": 2, "_fleet": 10, "_sphinx_paramlinks_m": [2, 3, 5, 7], "abc": 7, "aberdeen": 4, "about": 2, "abstract": [2, 7], "abstractset": [2, 4, 5], "accept": [2, 8], "across": 5, "action": [4, 9], "action_d": [], "action_data": [2, 8], "actual": [2, 3, 6, 10], "ad": 2, "add": [2, 5], "add_allocation_result": [2, 3], "add_canal_to_graph": [2, 5], "add_cargo_distribut": 2, "add_cargo_gener": 2, "add_co2_emiss": [2, 8], "add_compani": 2, "add_company_numeric_metr": [2, 8], "add_cost": [2, 8], "add_dual_numeric_metr": [2, 8], "add_fuel": [2, 5], "add_fuel_consumpt": [2, 8], "add_global_company_list_metr": [2, 8], "add_new_schedul": [2, 8], "add_random_specif": 2, "add_reloc": [2, 8], "add_route_point": [2, 8], "add_shipping_network": 2, "add_to_all_trad": [2, 8], "add_transport": [0, 2, 8, 10], "added_to_queu": [2, 8], "addit": 2, "additional_metadata": 2, "adjust": 5, "affect": [2, 5], "aframax": [0, 4], "africa": 5, "after": [0, 2, 4], "agent": [0, 2, 4], "agulha": 5, "algorithm": 5, "all": [0, 2, 3, 4, 5, 9], "alloc": [0, 2, 3, 4, 5], "allocation_result": [2, 3], "allow": [1, 2, 3, 10], "allow_nan": 2, "allow_non": 2, "alreadi": [2, 5], "also": [0, 2, 5, 10], "alwai": [2, 10], "among": 2, "amount": [0, 2, 4, 5, 8, 10], "an": [0, 1, 2, 3, 4, 5, 7, 9], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 10], "announc": 2, "anyth": [2, 10], "app": 5, "appear": [2, 3], "append": 10, "appli": [0, 2, 4], "applic": 0, "apply_new_schedul": [0, 2, 8], "apply_schedul": [0, 2, 8, 10], "appropri": 5, "ar": [0, 2, 3, 4, 5, 7, 10], "archiv": 4, "arg": [2, 3, 4, 5, 10], "argument": [2, 3], "argumentpars": 2, "argumentparserextens": [2, 8], "aris": 9, "aritim": 1, "around": 2, "arrai": 5, "arriv": [0, 2, 5], "arrivalev": [2, 5, 8], "as_tupl": [2, 5], "ased": 1, "associ": [2, 5], "assum": [2, 5, 7], "attempt": [2, 4], "attr": [2, 4, 5, 7], "attribut": 2, "auction": [0, 2, 3, 4, 10], "auction_ledg": [2, 4, 10], "auctionallocationresult": [2, 3, 8], "auctioncargoev": [2, 3], "auctionclassfactori": [2, 3], "auctionledg": [2, 3, 4, 8], "auctionmarket": [2, 8], "auctionmetricsobserv": [2, 8], "auctionoutcomeobserv": [2, 8], "auctionoutcomeprintobserv": [2, 8], "auctionsimulationengin": [2, 3], "author": 9, "avail": [2, 3], "available_cargo_typ": [2, 8], "averag": 5, "b": 1, "balast": 4, "ballast": [2, 4, 5], "ballast_bas": 4, "ballast_consumption_r": [4, 5], "ballast_speed_pow": 4, "base": [2, 3, 4, 5, 6, 7], "baseclass": 1, "basi": 2, "becom": [2, 3], "been": [4, 5, 10], "befor": [2, 4, 5, 7], "beforehand": 2, "being": [0, 2, 5], "belong": 2, "besid": 2, "better": 3, "between": [0, 2, 3, 4, 5, 7], "beyond": 7, "bid": [0, 2, 4, 8, 10], "biggest": 0, "binari": 5, "block": 2, "bool": [2, 4, 5], "boolean": 5, "both": 3, "boundari": 2, "buermann": 9, "buffer": 0, "build": 2, "builder": [2, 4, 5, 8], "burn": 5, "c": 9, "calcul": [0, 2, 3, 5], "calculate_consumpt": [2, 8], "calculate_cost": 4, "call": [2, 4, 5], "callabl": 2, "can": [2, 3, 4, 5], "canal": 5, "canal_nam": 5, "canal_nod": 5, "canals_nod": [2, 5], "capabl": 5, "capac": [2, 4, 5, 8], "capacities_and_loading_r": [2, 5, 8], "cape": 5, "cargo": [0, 2, 3, 4, 5, 7], "cargo_available_tim": 2, "cargo_available_time_second_cargo": 2, "cargo_bid": [8, 10], "cargo_distribut": [2, 8], "cargo_gener": [2, 3], "cargo_market": [2, 3], "cargo_typ": [2, 8], "cargo_weight": 5, "cargo_weight_dict": 5, "cargo_weight_distribut": 5, "cargoannouncementev": [2, 8], "cargocapac": [2, 5, 8], "cargocontain": [2, 8], "cargoev": [2, 3, 8], "cargohold": [2, 8], "cargoholdschema": [2, 8], "cargotransferev": [2, 8], "case": [0, 3, 7], "centr": 3, "chang": [2, 5], "changelog": 1, "check": 2, "check_circular": 2, "citi": 4, "claim": 9, "class": [2, 3, 4, 5, 6, 7, 10], "class_factori": [2, 3, 5, 8], "classfactori": [2, 3, 5, 8], "classmethod": [2, 5], "clean": 2, "clean_window": [2, 8], "clear": 2, "cli": 8, "closest": 5, "cmd": 2, "co2_coeffici": [2, 5], "co_2": 5, "code": 0, "coeffici": 5, "collect": [2, 3, 7], "collector": 2, "column": 5, "combin": 2, "come": [2, 3], "command": 2, "compani": [1, 2, 3, 5, 8], "company_id": [2, 8], "company_metr": 2, "companyheadquart": [2, 3], "compet": 10, "competit": [2, 8], "competitionbuild": [2, 3], "compil": 2, "complet": [0, 2], "completion_tim": [2, 8], "compon": 2, "component_cl": 2, "compound": 2, "compress": 5, "comput": [0, 2, 5], "compute_all_routes_between_point": [2, 5], "compute_route_length": [2, 5], "concaten": 2, "conduct": 2, "conjunct": 2, "connect": 9, "consid": 5, "consist": [2, 5], "constitut": [2, 3], "constructor": [2, 5, 7], "consum": [0, 5], "consumpt": [2, 4, 5], "consumptionr": [2, 4, 5], "contain": [0, 2, 5], "content": 8, "context": [2, 4, 5], "continu": 0, "contract": [0, 2, 3, 4, 8, 9, 10], "contracts_per_compani": [2, 3], "conveni": 2, "convert": 5, "coordin": [5, 7], "copi": [0, 2, 8, 10], "copy_hold": [2, 8], "copyright": 9, "correspond": 2, "cost": [0, 2, 4, 5, 8, 10], "could": 2, "creat": [0, 1, 2, 5], "create_both_ids_if_not_exist": 2, "create_canal_nod": [2, 5], "create_id_if_not_exist": 2, "create_world_canal_scenario": [2, 5], "creation": [2, 5, 10], "creation_tim": 2, "cross": 2, "csv": 5, "current": [0, 1, 2, 3, 4, 5, 7, 10], "current_cargo_hold": [2, 8], "current_class": [2, 4, 5, 8], "current_load": [2, 8], "current_loc": [2, 8], "current_tim": [2, 3, 5, 7, 8], "current_trad": 10, "current_vessel": 10, "current_vessel_schedul": 10, "currentst": [2, 8], "curv": [4, 5], "cycl": 2, "d": 2, "dai": [0, 2, 4, 5], "damag": 9, "data": [2, 4, 5, 8], "data_kei": 2, "dataclass": [0, 2, 5, 8], "datafram": 5, "dataprotocol": [2, 4, 5, 8], "dataschema": [2, 5, 8], "deal": [2, 9], "decim": [2, 5], "dedic": 0, "deep": 2, "deepcopi": 0, "def": [2, 10], "default": [0, 1, 2, 3, 4, 5, 7, 8], "default_laden_balast_consumpt": [2, 4], "default_suezmax_aframax_laden_balast_consumpt": [2, 4], "default_vlcc_laden_balast_consumpt": [2, 4], "defer": 0, "defin": 10, "degre": 5, "deliv": 5, "deliveri": [2, 5], "delivery_time_window": 5, "demand": 5, "depend": 5, "descend": 2, "deseri": 2, "deserialis": 2, "desir": 2, "destin": [2, 3, 7], "destination_port": [2, 8], "detail": [2, 4], "detect": 0, "determin": [0, 2, 4, 5, 7], "dev": 5, "deviat": 5, "df": 5, "dict": [2, 3, 4, 5, 7], "dictionari": [5, 7], "dif": 2, "differ": 5, "direct": 5, "directli": 2, "directori": [2, 4], "distanc": [0, 2, 3, 5, 7, 8], "distribut": [2, 3, 5], "distribute_trad": [2, 8], "distribution_ledg": 2, "distributionclassfactori": [2, 5], "distributionship": [2, 5], "distributionsimulationbuild": [2, 5], "do": [2, 6, 10], "do_events_exist": [2, 8], "dock": 4, "doe": [2, 4, 10], "done": [2, 8], "dougla": 5, "download": 9, "drop": [2, 4], "drop_off": [2, 8], "dummyidl": [], "dump": 2, "dump_default": 2, "dump_onli": [2, 4, 5], "durat": [2, 5], "durationev": [2, 8], "dure": 0, "dynamicnestedfield": [2, 8], "e": [0, 1, 2, 3, 4, 5, 7], "each": [2, 4, 5], "earli": 2, "earliest": [2, 4], "earliest_drop_off": [2, 8], "earliest_drop_off_clean": [2, 8], "earliest_pickup": [2, 8], "earliest_pickup_clean": [2, 8], "earth": 5, "easi": 2, "edg": 5, "either": [2, 3, 7], "element": 5, "els": 10, "emiss": [2, 5], "emit": [2, 5, 6], "empti": [2, 5], "encod": [2, 5, 7], "end": [0, 2, 5, 7], "end_lat": 5, "end_loc": 5, "end_long": 5, "end_nod": 5, "end_port": 5, "end_t": 5, "endpoint": 7, "energi": 5, "energy_coeffici": [2, 5], "engin": [3, 5, 8], "engineprepostrunn": [2, 8], "ensur": 2, "ensure_ascii": 2, "entir": 2, "entireti": 2, "entranc": 5, "entri": 2, "enum": 2, "environ": [0, 2, 3, 8], "environment_files_path": 4, "epsilon": 5, "equival": 0, "error": [2, 9, 10], "error_messag": 2, "etc": [0, 2, 3], "euclidean": 7, "euclidian": 7, "event": [0, 2, 3, 5, 8, 9], "event_": 2, "event_act": [2, 3, 8], "event_manag": [0, 3, 5, 8], "event_occurr": [2, 8], "event_queu": [2, 8], "eventexecutiondata": [2, 8], "eventfuelprintobserv": [2, 8], "eventitem": [2, 8], "eventobserv": [2, 8], "eventqueu": [2, 8], "everi": [0, 2, 4], "exact": 3, "exampl": [0, 2, 8], "example_fleet_1": [2, 4], "example_fleet_2": [2, 4], "example_fleet_3": [2, 4], "example_trades_1": [2, 4], "exc_traceback": 2, "exc_typ": 2, "exc_valu": 2, "except": [0, 2, 5], "exchang": 7, "exclud": [2, 4, 5], "execut": 2, "exist": [2, 3, 4, 5, 7], "exit": [0, 2], "expect": [2, 10], "export": [0, 2], "express": 9, "extend": [2, 5], "extens": [2, 8], "f": 10, "factor": [2, 4, 5], "factori": [2, 3, 5], "fals": [2, 4, 10], "field": [0, 2], "file": [2, 4, 5], "file_directory_path": 3, "filenam": 2, "filenotfounderror": 4, "filter_out_outli": [2, 5], "final": 0, "find": [2, 4, 5], "find_closest_nod": [2, 5], "find_company_for_vessel": [2, 8], "finish": [2, 4, 5, 8], "first": [2, 3, 4, 5, 7], "firstcargoannouncementev": [2, 8], "fit": [2, 9], "five": 4, "fix": [2, 4], "fixed_trad": 4, "flag": 5, "flat": 5, "fleet": [0, 2, 3, 8], "flexibl": 2, "float": [2, 3, 4, 5, 7], "follow": 10, "form": [2, 7], "format": [0, 2, 5], "format_tim": [0, 2, 8], "forward": 6, "found": 5, "four": 2, "framework": 2, "frequenc": 5, "frequency_distribut": 5, "from": [2, 3, 4, 5, 9], "fuel": [0, 2, 4, 5], "fuel_emiss": [2, 8], "fuelclassfactori": [2, 3, 5], "fuelsimulationfactori": [2, 3, 5], "fuelspecsbuild": [2, 4, 5], "fulfil": [2, 3, 8], "full": [0, 2], "func": [2, 5], "function": [0, 1, 2], "further": [2, 3], "futur": [2, 10], "g": [2, 4], "gener": [0, 2, 4, 5, 7, 8], "generate_": 2, "generate_cargo_capac": [2, 8], "generate_compani": [2, 3, 8], "generate_consumption_r": [2, 5], "generate_engin": [2, 3, 5, 8], "generate_event_arriv": [2, 5, 8], "generate_event_cargo": [2, 3, 8], "generate_event_cargo_transf": [2, 8], "generate_event_idl": [2, 8], "generate_event_location_info": [2, 8], "generate_event_queu": [2, 8], "generate_event_travel": [2, 8], "generate_fleet": [2, 3, 8], "generate_fuel": [2, 5], "generate_loc": [2, 5, 8], "generate_market": [2, 3, 8], "generate_network": [2, 5, 8], "generate_port": [2, 5, 8], "generate_random": [2, 8], "generate_route_graph_from_fil": [2, 5], "generate_ship": [2, 3, 5, 8], "generate_shipping_compani": [2, 3, 8], "generate_simul": [2, 4], "generate_trad": [2, 5, 8], "generate_vessel": [2, 3, 5, 8], "generate_vessel_engin": [2, 5], "generate_world": [2, 8], "gent": 1, "get": [2, 3, 5, 7, 8, 10], "get_all_routes_between_point": [2, 5], "get_all_stored_routes_between_point": [2, 5], "get_arrival_tim": [0, 2, 8], "get_ballast_consumpt": [2, 5], "get_capac": [2, 8], "get_class": [2, 8], "get_co2_emiss": [2, 5], "get_compani": [0, 2, 3], "get_company_id": [2, 8], "get_cost": [2, 5], "get_current_load": [2, 8], "get_dist": [2, 5, 7], "get_event_observ": [2, 8], "get_fuel_mfo": [2, 4], "get_idle_consumpt": [2, 5], "get_index_or_default": [2, 5], "get_insertion_point": [2, 8], "get_item": [2, 5], "get_journey_loc": [2, 3, 5, 7], "get_kei": [2, 5], "get_laden_consumpt": [2, 5], "get_loading_consumpt": [2, 5], "get_loading_r": [2, 8], "get_loading_tim": [2, 8], "get_long_lat_dist": [2, 5], "get_network_dist": [2, 3], "get_network_port_or_default": [2, 3], "get_next_ev": [2, 8], "get_port": [2, 5, 7], "get_port_or_default": [2, 7], "get_scheduled_trad": [2, 8], "get_shortest_grid_route_between_point": [2, 5], "get_shortest_path_between_point": [2, 5], "get_shortest_route_between_point": [2, 5], "get_simple_schedul": [2, 8], "get_specification_build": [0, 2, 4], "get_trad": [2, 8], "get_trades_for_company_copi": [2, 8], "get_trading_tim": [2, 8], "get_travel_tim": [2, 5, 8], "get_unloading_consumpt": [2, 5], "get_vessel": [2, 4], "get_vessel_aframax": [2, 4], "get_vessel_id": [2, 8], "get_vessel_loc": [2, 7], "get_vessel_suezmax": [2, 4], "get_vessel_vlcc": [2, 4], "give": 2, "given": [2, 5], "global": 2, "global_agent_timeout": [2, 3, 4, 8], "global_setup": 8, "globalmetricscollector": [2, 8], "globalsetup": [2, 5], "go": 2, "good": 5, "graph": 5, "graph_fil": 5, "graphx": 5, "grid": 5, "h": 5, "ha": [0, 2, 4, 5, 10], "handle_except": [2, 8], "handler": 6, "happen": 2, "hartlepool": 4, "has_any_load": [2, 8], "has_next_ev": [2, 8], "has_start": [2, 8], "hashabl": 2, "hasn": 2, "have": [0, 2, 4, 5, 7, 10], "haversin": 5, "headquart": [2, 8], "help": 2, "helper": 2, "henc": 1, "hold": 2, "holder": 9, "hope": 5, "horn": 5, "hour": [2, 5], "how": 2, "howev": 2, "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10], "id": 2, "idl": [0, 2, 4, 5], "idle_consumpt": [4, 5], "idleev": [2, 8], "idx": 2, "ignor": [4, 5], "immedi": 0, "implement": [1, 5, 6], "impli": 9, "import": [2, 10], "includ": [2, 3, 5, 7, 9], "inclus": 10, "indent": 2, "independ": 0, "index": [2, 5], "index_in_schedul": 2, "indic": [2, 5, 7], "individu": 5, "inf": [2, 3, 5, 7], "infin": [3, 5], "infinit": 2, "info": [0, 2, 3, 4, 8], "inform": [0, 2, 4, 5, 7, 8, 10], "inform_future_trad": [2, 8], "init_from_json_str": [2, 8], "init_with_engin": [2, 8], "initi": 2, "initialis": [2, 5], "initialise_trad": [2, 5, 8], "inner": 2, "insert": 2, "instal": 1, "instanc": [0, 2, 4, 5, 7], "instruct": [3, 5, 8], "int": [2, 4, 5], "integ": 2, "intend": [2, 3, 6], "intens": 0, "intenum": 2, "interact": [3, 10], "interest": [2, 5], "interfac": 2, "intern": [0, 1, 2], "interv": 5, "invalid": 2, "involv": 2, "io": [2, 8], "is_assign": 10, "is_drop_off": [2, 8], "is_empti": [2, 8], "is_laden": [2, 8], "is_pickup": [2, 5, 8], "is_positive_integ": [2, 8], "is_valid": [2, 8], "is_valid_fil": [2, 8], "island": 5, "iter": 2, "its": 2, "itself": 2, "j": 10, "jan": 9, "jeddah": 4, "journei": [0, 2, 3, 5, 7], "journey_log": [2, 8], "json": [2, 5, 7], "jsonabl": [2, 5, 7, 8], "jsonableencod": [2, 8], "jsonencod": 2, "keep": [2, 5], "keep_journey_log": [2, 5], "kei": [2, 5, 8], "key_tupl": [2, 8], "keyboardinterrupt": 2, "keyerror": 2, "keyword": [2, 3, 5], "kind": 9, "kn": 5, "knot": 5, "know": 2, "known": [2, 3], "kwarg": [2, 3, 4, 5, 10], "l": 1, "la": 4, "laden": [2, 4, 5], "laden_bas": 4, "laden_consumption_r": [4, 5], "laden_speed_pow": 4, "last": 2, "lat_": 5, "lat_a": 5, "lat_b": 5, "late": 2, "later": 2, "latest": [2, 4], "latest_drop_off": [2, 8], "latest_drop_off_clean": [2, 8], "latest_pickup": [2, 8], "latest_pickup_clean": [2, 8], "latitud": [2, 5], "latlongfactori": [2, 5], "latlongloc": [2, 5], "latlongport": [2, 5], "latlongshippingnetwork": [2, 5], "least": 2, "ledger": [2, 3, 8], "left": [2, 7], "len": 10, "length": 5, "let_loguru_handle_log": [2, 6], "level": [2, 6], "lewi": 5, "liabil": 9, "liabl": 9, "licens": 1, "like": [2, 3], "limit": [2, 9], "list": [0, 2, 3, 4, 5, 7], "lng_a": 5, "lng_b": 5, "load": [2, 4, 5], "load_cargo": [2, 8], "load_default": 2, "load_distribut": [2, 5], "load_module_from_fil": [2, 3], "load_onli": [2, 4, 5], "loadabl": 2, "loadable_cargo_typ": [2, 8], "loading_consumpt": [4, 5], "loading_r": [2, 8], "local": 9, "locat": [0, 2, 3, 4, 5, 7, 8], "location_drop_off": 2, "location_on": [3, 5, 7], "location_pick_up": 2, "location_two": [3, 5, 7], "log": [0, 2, 3, 4, 5, 6], "log_entri": 2, "log_journey_log_ev": [2, 8], "logger": [2, 6, 10], "logging_util": [2, 8], "logic": 2, "logrunn": [2, 8], "loguru": 6, "loguruhandl": [2, 6], "long": 2, "long_": 5, "longer": 0, "longitud": [2, 5], "look": 5, "loop": 2, "lost": 2, "m": [1, 9], "mabl": [0, 8, 9, 10], "made": 2, "mai": [3, 5], "main": [2, 8], "make": [2, 3], "manag": 2, "mani": [2, 4, 5], "map": 2, "maritim": [1, 10], "maritime_simul": [1, 2, 3, 5], "market": [2, 3, 5, 8, 10], "market_author": [2, 8], "marketauthor": [2, 3], "marshmallow": [2, 4, 5], "match": 5, "math": [2, 3, 5], "mcstcompani": [2, 8], "mean": [0, 2, 5], "mean_cargo_weight_std": 5, "mean_transition_std": 5, "meanscompani": [2, 8], "merchant": 9, "messag": 2, "metadata": 2, "method": [2, 4, 5, 7], "metric": 8, "metricdict": [2, 8], "metricscollector": [2, 8], "metricsobserv": [2, 8], "mfo": 4, "might": 9, "mile": 5, "min_nod": 5, "minut": 5, "miss": [2, 5], "mix": 0, "mixed_fleet": [2, 4], "modul": [0, 8], "month": 4, "monthli": 0, "more": [2, 5], "most": [2, 3], "move": 5, "mt": 5, "mulat": 1, "must": 2, "myarchenemi": [2, 4], "name": [2, 3, 4, 5, 7, 8], "nautic": 5, "navig": 5, "necessari": 2, "need": [2, 5], "neg": 2, "nest": 2, "network": [0, 2, 5, 8], "networkwithportdict": [2, 5, 7], "networkx": 5, "new": [0, 2, 4], "new_schedul": 10, "newer": 9, "next": [0, 2, 8], "nmi": 5, "node": 5, "non": 2, "none": [1, 2, 3, 4, 5, 7, 9, 10], "noninfring": 9, "nopathsexcept": [2, 5], "nor": 2, "normal": 5, "north": 5, "not_realis": [2, 8], "note": 2, "noth": [2, 7], "notifi": [2, 8], "notify_event_observ": [2, 8], "notimplementederror": 6, "now": 0, "num": 5, "num_aframax": 4, "num_auct": 4, "num_suezmax": 4, "num_vlcc": 4, "number": [2, 4, 5], "number_of_cargo": 5, "numer": 2, "obj": 2, "object": [2, 3, 4, 5, 7], "observ": 8, "occur": [2, 5], "occurr": [2, 3, 4, 5], "off": [2, 4], "ogist": 1, "onc": 2, "one": [0, 2, 3, 4, 5, 7], "one_contract": 10, "one_trad": 10, "onjournei": [0, 2, 3, 5, 7], "onli": [0, 2, 4, 5], "open": 5, "oper": [1, 2, 7], "opportun": 2, "opt": [2, 4, 5, 8], "option": [0, 5, 7], "order": [2, 5], "origin": [0, 2, 3, 7], "origin_port": [2, 8], "other": [2, 9], "other_data": [2, 8], "otherwis": [2, 5, 9], "out": 9, "outcom": [2, 4], "output": [2, 4], "output_directori": [2, 3, 4, 8], "outsid": 7, "over": [2, 5], "overal": 2, "overridden": 2, "overview": [1, 2], "own": [2, 5], "packag": [0, 1, 8], "paid": 2, "pair": 5, "panama": [4, 5], "panda": 5, "param": [2, 3, 5, 7], "paramet": [2, 3, 4, 7], "parent": 2, "pars": 2, "parsed_arg": 2, "parser": 2, "part": 2, "partial": [2, 4, 5], "particular": 9, "pass": [2, 3, 5, 7, 10], "passag": 5, "past": 2, "path": 5, "payment": [0, 2, 8], "pd": 5, "penalti": 0, "per": [0, 2, 4, 5], "perfect": 5, "perform": [2, 3, 5, 7], "performed_tim": [2, 8], "pertain": 2, "peucker": 5, "pick": [0, 2, 4, 5], "pick_up": [2, 8], "pickup": [2, 5], "pickup_period": 5, "pickup_time_window": 5, "pip": 9, "place": [2, 7], "plata": 4, "plu": 7, "point": [2, 5], "polynomi": 5, "pondplay": [2, 4], "pop": [2, 8], "port": [0, 2, 3, 4, 5, 7], "port_cargo_weight_distribution_path": 5, "port_nam": 3, "port_trade_frequency_distribution_path": 5, "port_transition_duration_distributions_path": 5, "posit": [2, 3, 5, 7], "possibl": 2, "post_run_cmd": [2, 3, 8], "pow": 5, "pre": 0, "pre_inform": [0, 2, 8, 10], "pre_run_cmd": [2, 3, 8], "pre_run_inform_vessel_loc": [2, 8], "pre_run_place_vessel": [2, 8], "preced": 2, "precomput": [0, 4], "precomputed_rout": 5, "precomputed_routes_fil": 5, "predict_cost": [2, 4], "present": 2, "prevent": 0, "previous": 2, "price": [0, 2, 5], "print": 2, "prioriti": 2, "priorityqueu": 2, "probabl": [2, 8], "problem": 0, "process": 2, "produc": [0, 2, 5, 9], "profit": 4, "profit_factor": 4, "program": 2, "propel": 5, "propelling_engin": [2, 5], "properti": [2, 3, 5, 7], "propos": [2, 4], "propose_schedul": [2, 4, 8, 10], "proposed_schedul": 10, "protocol": 2, "provid": [2, 5, 9], "purpos": [2, 9], "put": [2, 8], "py": [2, 3, 5], "py3": [1, 9], "python": [6, 9], "qualnam": 2, "quantiti": 5, "queue": 2, "rais": [2, 4, 6], "ramer": 5, "random": [2, 4, 5, 8], "rate": [2, 5], "rather": 3, "real": 5, "receiv": [0, 2, 4, 8, 10], "record": [5, 6], "refactor": 0, "refer": 2, "region": [2, 5], "regional_chang": 5, "regionalmetricscollector": [2, 8], "regist": [2, 8], "register_by_type_nam": [2, 8], "register_event_observ": [2, 8], "reject": [0, 2, 8, 10], "rejected_trad": 10, "relat": 2, "reloc": 2, "remain": [0, 2], "remov": [2, 5, 8], "remove_canals_from_graph": [2, 5], "replac": 2, "repres": [2, 5], "represent": 2, "request": 2, "requir": [1, 2], "reserv": 9, "resourc": 4, "respect": [0, 2, 3], "respons": 2, "restrict": 2, "result": [2, 3], "retriev": 5, "return": [0, 2, 3, 4, 7, 10], "revers": 0, "riau": 5, "right": 9, "robust": 7, "rostock": 4, "rotterdam": 4, "roughli": 2, "round": [2, 4], "rout": [0, 2, 3, 4, 5], "router": 5, "row": 5, "rtype": [2, 4], "run": [0, 2, 5, 8], "run_logg": 2, "runnabl": 2, "safe": 3, "sail": 5, "same": 10, "sampl": 5, "sample_cargo_weight": [2, 5], "sample_cargoes_from_port_distribut": [2, 5], "sample_time_window": [2, 5], "sanitised_ledg": [2, 8], "save": 4, "scenario": [2, 5, 10], "schedul": [0, 2, 4, 8, 10], "schedule_copi": 2, "scheduled_trad": [2, 8, 10], "schedulepropos": [2, 4, 8, 10], "scheduling_propos": 10, "schema": [2, 4, 5, 8], "schemaopt": [2, 4, 5], "schemaprotocol": [2, 8], "sea": 7, "search": [2, 5], "search_list": 5, "search_term": 5, "second": [2, 3, 4, 5, 7], "see": [2, 5], "seed": 2, "select_task": [2, 8], "selector": 2, "self": [2, 3, 10], "separ": 2, "sequenc": [2, 4, 5], "serial": 2, "serv": 5, "set": [0, 2, 3, 4, 6], "set_engin": [2, 3, 8], "set_item": [2, 5], "sever": [0, 2], "shall": [2, 9], "ship": [0, 1, 2, 3, 5, 8, 10], "shippabl": 2, "shipping_compani": [2, 3, 5, 8], "shipping_market": [3, 5, 8], "shippingcompani": [2, 3, 5, 8], "shippingnetwork": [2, 7], "shortest": 5, "should": [1, 2, 3, 5], "show_detailed_auction_outcom": 4, "similarli": 7, "simpl": 2, "simplecompani": [0, 2, 8], "simplemarket": [2, 3, 8], "simplevessel": [2, 5, 8], "simpli": [2, 4], "simplifi": 5, "simul": [0, 1, 2, 3, 4, 5, 7, 10], "simulation_de_serialis": 8, "simulation_engin": [2, 3], "simulation_environ": 8, "simulation_gener": 8, "simulation_spac": [0, 2, 5, 8], "simulationbuild": [2, 5, 8], "simulationengin": [0, 2, 3, 4, 8], "simulationengineawar": [2, 7, 8], "simulationfactori": [2, 3], "simulationspecif": [2, 8], "sinc": [2, 3], "singapor": [4, 5], "skipkei": 2, "smooth": 5, "smooth_path": 5, "smooth_rout": [2, 5], "so": 6, "softwar": 9, "some": [0, 2, 3], "sort": 0, "sort_kei": 2, "south": 5, "space": [2, 5, 7], "specif": [2, 3, 4, 5, 8, 10], "specifi": [2, 3, 4, 5, 6, 7], "specifications_build": 4, "specified_laden_balast_consumpt": [2, 4], "specs_str": 2, "speed": [2, 5, 8], "speed_pow": [2, 5], "sphere": 5, "standard": 5, "start": [2, 4, 5, 7, 8], "start_lat": 5, "start_loc": 5, "start_long": 5, "start_next_ev": [2, 8], "start_nod": 5, "start_port": 5, "start_t": 5, "start_tim": [2, 7], "state": 2, "static": [0, 2, 3, 5, 7], "staticship": [2, 3, 5, 8], "statu": [2, 8], "std": 5, "stds_around_mean": 5, "step": 2, "still": 2, "stop": 2, "store": [5, 7], "str": [2, 3, 4, 5, 7], "strait": 5, "string": [2, 5], "strsequenceorset": [], "structur": [0, 2, 5, 8], "sub": 2, "subclass": [2, 6, 10], "subdivis": 2, "submodul": 8, "subpackag": 8, "subunit": 2, "suez": 5, "suezmax": [0, 4], "sum": 5, "suppli": 5, "supply_demand": 5, "supplydemand": 5, "support": 2, "suppos": 2, "system": 2, "t": 2, "take": [2, 3, 5, 6, 7], "task": 2, "task_metrics_overview": [2, 8], "term": 5, "tex": 2, "texa": 4, "than": 3, "thei": 2, "them": [2, 3, 5, 10], "thereof": 3, "theschedul": [2, 4], "thi": [0, 2, 3, 5, 6, 7, 10], "thing": 2, "those": 5, "three": 10, "tidi": 2, "time": [0, 2, 3, 5, 7, 8, 10], "time_start": [2, 8], "time_transit_distribut": 5, "time_transition_dict": 5, "time_window": [2, 8], "time_windows_allow": 5, "timeout": [0, 2, 4], "timestep": 5, "timewindowarrivalev": [2, 5], "timewindowtrad": [2, 4, 8], "to_json": [2, 5, 7, 8], "todo": [2, 5], "tonn": [2, 5], "took": 2, "tort": 9, "track": 2, "trade": [0, 1, 2, 3, 4, 5, 8], "trade_fulfil": [2, 3], "trade_occurrence_frequ": [2, 4, 5], "tradecompani": 0, "tradedeliveryobserv": [2, 8], "trades_and_cost": 10, "trades_per_occurr": 4, "tradestatu": [2, 8], "tradingcompani": [0, 2, 4, 8, 10], "tradingheadquart": 0, "tramp": [1, 10], "transfer": 2, "transform": 2, "transit": [5, 7], "translat": 2, "transport": [0, 2, 4, 5], "transport_oper": [5, 8], "transportation_schedul": 8, "transportationsourcedestinationind": [2, 8], "transportationstartfinishind": [2, 8], "travel": [2, 5, 7], "travelev": [2, 8], "travers": 2, "tri": [2, 4], "true": [0, 2, 4, 5, 10], "tupl": [2, 4, 5], "turn": [2, 5], "two": [2, 3, 4, 5, 7], "type": [0, 2, 3, 4, 5, 7], "typeerror": 0, "un": 2, "unalloc": 0, "unallocated_trad": [2, 8], "under": [2, 5], "unfulfil": 0, "unhash": 0, "union": [2, 3, 7], "unit": [2, 3, 5], "unitshippingnetwork": [2, 5, 7], "univers": [0, 2, 5, 8], "unknown": [2, 4, 5, 8], "unladen": 5, "unload": [2, 4, 5], "unload_cargo": [2, 8], "unloading_consumpt": [4, 5], "unnecessari": 5, "unregister_event_observ": [2, 8], "unstart": 2, "until": [2, 5], "up": [0, 2, 4, 5, 6], "upcom": 2, "updat": [0, 2], "us": [0, 2, 3, 4, 5, 7, 9], "use_only_precomputed_rout": [0, 4], "util": [0, 8], "v": [2, 5], "valid": 2, "valu": [2, 3, 5, 7], "valueerror": [2, 4], "variabl": 5, "verif": 2, "verifi": 2, "verify_schedul": [2, 8, 10], "verify_schedule_cargo": [2, 8], "verify_schedule_tim": [2, 8], "version": [1, 2, 6, 9], "vessel": [0, 2, 3, 4, 5, 7, 8], "vessel_id": [2, 8], "vessel_metr": 2, "vessel_typ": 5, "vesselcargoev": [2, 8], "vesselengin": [2, 5], "vesselev": [2, 8], "vesselkei": [2, 8], "vessellocationinformationev": [2, 8], "vesselwithengin": [2, 4, 5], "via": [0, 2], "violat": 0, "visit": 5, "vlcc": [0, 4], "voyag": 2, "wa": 2, "wai": 10, "want": 2, "warn": [2, 3], "warranti": 9, "we": 5, "web": 5, "weight": 5, "well": [2, 5], "were": 2, "whatev": [3, 6, 7], "wheel": 9, "when": [0, 2, 5], "where": [2, 5, 7], "wherev": 2, "whether": [5, 9], "which": [2, 3, 5, 7, 10], "while": [5, 10], "whl": [1, 9], "who": 5, "wider": 3, "willing": 2, "window": [0, 2, 5], "within": 2, "without": [2, 9], "won": 10, "work": [2, 3], "world": [2, 3, 5, 8], "world_graph": [2, 5], "world_port": [2, 8], "worldvessel": [2, 5], "wrapper": 2, "wrong": 2, "x": [2, 5, 7, 9, 10], "y": [2, 5, 7, 9], "yet": 2, "you": 1, "your": 9, "z": 9, "zero": [2, 10]}, "titles": ["Changelog", "MABLE", "mable package", "mable.competition package", "mable.examples package", "mable.extensions package", "mable.io package", "mable.simulation_space package", "maritime_simulator", "Overview", "Creating a Trading Company"], "titleterms": {"0": 0, "09": 0, "10": 0, "11": 0, "12": 0, "2024": 0, "24": 0, "26": 0, "28": 0, "29": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "ad": 0, "baseclass": 10, "bash": 9, "cargo_bid": 2, "cargo_distribut": 5, "chang": 0, "changelog": 0, "cli": 2, "compani": [4, 10], "competit": 3, "consol": 9, "content": [1, 2, 3, 4, 5, 6, 7], "creat": 10, "default": 10, "engin": 2, "environ": 4, "event_manag": 2, "exampl": 4, "extens": 5, "fix": 0, "fleet": 4, "fuel_emiss": 5, "function": 10, "gener": 3, "global_setup": 2, "implement": 10, "inform": 3, "instal": 9, "instruct": 2, "io": 6, "jupyt": 9, "licens": 9, "logging_util": 6, "mabl": [1, 2, 3, 4, 5, 6, 7], "maritime_simul": 8, "metric": 2, "modul": [2, 3, 4, 5, 6, 7], "notebook": 9, "observ": 2, "overview": 9, "packag": [2, 3, 4, 5, 6, 7], "paramet": 5, "remov": 0, "requir": 9, "return": 5, "ship": 4, "shipping_market": 2, "simulation_de_serialis": 2, "simulation_environ": 2, "simulation_gener": 2, "simulation_spac": 7, "structur": 7, "submodul": [2, 3, 4, 5, 6, 7], "subpackag": 2, "trade": 10, "transport_oper": 2, "transportation_schedul": 2, "univers": 7, "util": 2, "world_port": 5}})